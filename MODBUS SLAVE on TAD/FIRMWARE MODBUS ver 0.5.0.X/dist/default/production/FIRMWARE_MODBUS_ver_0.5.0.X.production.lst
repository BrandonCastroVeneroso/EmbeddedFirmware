

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jun 19 10:29:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18LF47K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 11/09/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18LF47K40 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   106   000000                     
   107 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   108   000000                     
   109 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   110   000000                     
   111 ;; Function _TMR0_Start is unused but had its address taken
   112   000000                     
   113 ;; Function _TMR0_PeriodCountSet is unused but had its address taken
   114   000000                     
   115 ;; Function _EUSART1_Deinitialize is unused but had its address taken
   116   000000                     
   117 ;; Function _EUSART1_TransmitEnable is unused but had its address taken
   118   000000                     
   119 ;; Function _EUSART1_TransmitDisable is unused but had its address taken
   120   000000                     
   121 ;; Function _EUSART1_AutoBaudSet is unused but had its address taken
   122   000000                     
   123 ;; Function _EUSART1_AutoBaudQuery is unused but had its address taken
   124   000000                     
   125 ;; Function _EUSART1_IsRxReady is unused but had its address taken
   126   000000                     
   127 ;; Function _EUSART1_IsTxDone is unused but had its address taken
   128   000000                     
   129 ;; Function _EUSART1_ErrorGet is unused but had its address taken
   130   000000                     
   131 ;; Function _EUSART1_Read is unused but had its address taken
   132   000000                     
   133                           	psect	idataCOMRAM
   134   0025D2                     __pidataCOMRAM:
   135                           	callstack 0
   136                           
   137                           ;initializer for _NewMessage
   138   0025D2  01                 	db	1
   139                           
   140                           	psect	idataBANK0
   141   0025C4                     __pidataBANK0:
   142                           	callstack 0
   143                           
   144                           ;initializer for calcAD@F10957
   145   0025C4  00                 	db	0
   146   0025C5  01                 	db	1
   147   0025C6  02                 	db	2
   148   0025C7  03                 	db	3
   149                           
   150                           	psect	smallconst
   151   000F00                     __psmallconst:
   152                           	callstack 0
   153   000F00  00                 	db	0
   154   000F01                     _UART1:
   155                           	callstack 0
   156   000F01  B8                 	db	low _EUSART1_Initialize
   157   000F02  21                 	db	high _EUSART1_Initialize
   158   000F03  00                 	db	low (_EUSART1_Initialize shr (0+16))
   159   000F04  00                 	db	0
   160   000F05  00                 	db	0
   161   000F06  00                 	db	0
   162   000F07  00                 	db	0
   163   000F08  00                 	db	0
   164   000F09  00                 	db	0
   165   000F0A  B6                 	db	low _EUSART1_Write
   166   000F0B  25                 	db	high _EUSART1_Write
   167   000F0C  00                 	db	low (_EUSART1_Write shr (0+16))
   168   000F0D  00                 	db	0
   169   000F0E  00                 	db	0
   170   000F0F  00                 	db	0
   171   000F10  62                 	db	low _EUSART1_IsTxReady
   172   000F11  24                 	db	high _EUSART1_IsTxReady
   173   000F12  00                 	db	low (_EUSART1_IsTxReady shr (0+16))
   174   000F13  00                 	db	0
   175   000F14  00                 	db	0
   176   000F15  00                 	db	0
   177   000F16  00                 	db	0
   178   000F17  00                 	db	0
   179   000F18  00                 	db	0
   180   000F19  00                 	db	0
   181   000F1A  00                 	db	0
   182   000F1B  00                 	db	0
   183   000F1C  00                 	db	0
   184   000F1D  00                 	db	0
   185   000F1E  00                 	db	0
   186   000F1F  00                 	db	0
   187   000F20  00                 	db	0
   188   000F21  00                 	db	0
   189   000F22  00                 	db	0
   190   000F23  00                 	db	0
   191   000F24  00                 	db	0
   192   000F25  00                 	db	0
   193   000F26  00                 	db	0
   194   000F27  00                 	db	0
   195   000F28  00                 	db	0
   196   000F29  00                 	db	0
   197   000F2A  00                 	db	0
   198   000F2B  00                 	db	0
   199   000F2C  00                 	db	0
   200   000F2D  00                 	db	0
   201   000F2E  00                 	db	0
   202   000F2F  00                 	db	0
   203   000F30  00                 	db	0
   204   000F31  00                 	db	0
   205   000F32  00                 	db	0
   206   000F33  00                 	db	0
   207   000F34  00                 	db	0
   208   000F35  00                 	db	0
   209   000F36  00                 	db	0
   210   000F37  8C                 	db	low _EUSART1_RxCompleteCallbackRegister
   211   000F38  24                 	db	high _EUSART1_RxCompleteCallbackRegister
   212   000F39  00                 	db	low (_EUSART1_RxCompleteCallbackRegister shr (0+16))
   213   000F3A  00                 	db	0
   214   000F3B  00                 	db	0
   215   000F3C  00                 	db	0
   216   000F3D  D0                 	db	low _EUSART1_FramingErrorCallbackRegister
   217   000F3E  24                 	db	high _EUSART1_FramingErrorCallbackRegister
   218   000F3F  00                 	db	low (_EUSART1_FramingErrorCallbackRegister shr (0+16))
   219   000F40  AE                 	db	low _EUSART1_OverrunErrorCallbackRegister
   220   000F41  24                 	db	high _EUSART1_OverrunErrorCallbackRegister
   221   000F42  00                 	db	low (_EUSART1_OverrunErrorCallbackRegister shr (0+16))
   222   000F43  00                 	db	0
   223   000F44  00                 	db	0
   224   000F45  00                 	db	0
   225   000F46  00                 	db	0
   226   000F47  00                 	db	0
   227   000F48  00                 	db	0
   228   000F49                     __end_of_UART1:
   229                           	callstack 0
   230   000F49                     _Timer0:
   231                           	callstack 0
   232   000F49  88                 	db	low _TMR0_Initialize
   233   000F4A  23                 	db	high _TMR0_Initialize
   234   000F4B  00                 	db	low (_TMR0_Initialize shr (0+16))
   235   000F4C  00                 	db	0
   236   000F4D  00                 	db	0
   237   000F4E  00                 	db	0
   238   000F4F  C8                 	db	low _TMR0_Stop
   239   000F50  25                 	db	high _TMR0_Stop
   240   000F51  00                 	db	low (_TMR0_Stop shr (0+16))
   241   000F52  00                 	db	0
   242   000F53  00                 	db	0
   243   000F54  00                 	db	0
   244   000F55  44                 	db	low _TMR0_OverflowCallbackRegister
   245   000F56  25                 	db	high _TMR0_OverflowCallbackRegister
   246   000F57  00                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
   247   000F58  00                 	db	0
   248   000F59  00                 	db	0
   249   000F5A  00                 	db	0
   250   000F5B                     __end_of_Timer0:
   251                           	callstack 0
   252   000000                     _SP1BRGH	set	3996
   253   000000                     _SP1BRGL	set	3995
   254   000000                     _TX1STA	set	3998
   255   000000                     _RC1STA	set	3997
   256   000000                     _BAUD1CON	set	3999
   257   000000                     _T0CON0	set	4053
   258   000000                     _T0CON1	set	4054
   259   000000                     _OSCTUNE	set	3805
   260   000000                     _OSCFRQ	set	3806
   261   000000                     _INTCONbits	set	4082
   262   000000                     _IOCEF	set	3879
   263   000000                     _IOCEN	set	3880
   264   000000                     _IOCEP	set	3881
   265   000000                     _IOCCF	set	3866
   266   000000                     _IOCCN	set	3867
   267   000000                     _IOCCP	set	3868
   268   000000                     _IOCBF	set	3858
   269   000000                     _IOCBN	set	3859
   270   000000                     _IOCBP	set	3860
   271   000000                     _INLVLE	set	3882
   272   000000                     _INLVLD	set	3874
   273   000000                     _INLVLC	set	3869
   274   000000                     _INLVLB	set	3861
   275   000000                     _SLRCONE	set	3883
   276   000000                     _SLRCOND	set	3875
   277   000000                     _SLRCONC	set	3870
   278   000000                     _SLRCONB	set	3862
   279   000000                     _ODCONE	set	3884
   280   000000                     _ODCOND	set	3876
   281   000000                     _ODCONC	set	3871
   282   000000                     _ODCONB	set	3863
   283   000000                     _WPUE	set	3885
   284   000000                     _WPUD	set	3877
   285   000000                     _WPUC	set	3872
   286   000000                     _WPUB	set	3864
   287   000000                     _ANSELE	set	3886
   288   000000                     _ANSELD	set	3878
   289   000000                     _ANSELC	set	3873
   290   000000                     _ANSELB	set	3865
   291   000000                     _ADERRL	set	3950
   292   000000                     _ADERRH	set	3951
   293   000000                     _ADPREVL	set	3937
   294   000000                     _ADPREVH	set	3938
   295   000000                     _ADFLTRL	set	3954
   296   000000                     _ADFLTRH	set	3955
   297   000000                     _ADACCL	set	3952
   298   000000                     _ADACCH	set	3953
   299   000000                     _ADCNT	set	3943
   300   000000                     _ADRESL	set	3939
   301   000000                     _ADRESH	set	3940
   302   000000                     _ADACQ	set	3932
   303   000000                     _ADCON0	set	3936
   304   000000                     _ADCLK	set	3927
   305   000000                     _ADSTAT	set	3941
   306   000000                     _ADCON3	set	3931
   307   000000                     _ADCON2	set	3930
   308   000000                     _ADPRE	set	3934
   309   000000                     _ADSTPTH	set	3945
   310   000000                     _ADUTHH	set	3949
   311   000000                     _ADUTHL	set	3948
   312   000000                     _ADLTHH	set	3947
   313   000000                     _CRCXORH	set	3963
   314   000000                     _TX1IF	set	30316
   315   000000                     _ADCON1bits	set	3929
   316   000000                     _ADCON2bits	set	3930
   317   000000                     _ADCON3bits	set	3931
   318   000000                     _LATEbits	set	3975
   319   000000                     _LATAbits	set	3971
   320   000000                     _BAUD1CONbits	set	3999
   321   000000                     _TX1STAbits	set	3998
   322   000000                     _RC1STAbits	set	3997
   323   000000                     _T0CON0bits	set	4053
   324   000000                     _ADSTATbits	set	3941
   325   000000                     _ADCON0bits	set	3936
   326   000000                     _RX1PPS	set	3765
   327   000000                     _PIR1bits	set	3787
   328   000000                     _ADACT	set	3926
   329   000000                     _ADREF	set	3928
   330   000000                     _ADCON1	set	3929
   331   000000                     _ADCAP	set	3933
   332   000000                     _ADPCH	set	3935
   333   000000                     _ADRPT	set	3942
   334   000000                     _ADSTPTL	set	3944
   335   000000                     _ADLTHL	set	3946
   336   000000                     _CRCDATL	set	3956
   337   000000                     _CRCDATH	set	3957
   338   000000                     _CRCACCL	set	3958
   339   000000                     _CRCCON0bits	set	3964
   340   000000                     _TX1REG	set	3994
   341   000000                     _TMR0L	set	4051
   342   000000                     _TMR0H	set	4052
   343   000000                     _LATA	set	3971
   344   000000                     _CRCCON1	set	3965
   345   000000                     _CRCXORL	set	3962
   346   000000                     _CRCACCH	set	3959
   347   000000                     _PIR3bits	set	3789
   348   000000                     _RB4PPS	set	3827
   349   000000                     _INLVLA	set	3853
   350   000000                     _SLRCONA	set	3854
   351   000000                     _ODCONA	set	3855
   352   000000                     _WPUA	set	3856
   353   000000                     _ANSELA	set	3857
   354   000000                     _PORTCbits	set	3983
   355   000000                     _RC1REG	set	3993
   356   000000                     _TRISE	set	3980
   357   000000                     _TRISD	set	3979
   358   000000                     _TRISC	set	3978
   359   000000                     _TRISB	set	3977
   360   000000                     _TRISA	set	3976
   361   000000                     _LATE	set	3975
   362   000000                     _LATD	set	3974
   363   000000                     _LATC	set	3973
   364   000000                     _LATB	set	3972
   365   000000                     _PIE0bits	set	3778
   366   000000                     _PIR0bits	set	3786
   367   000000                     _IOCAF	set	3850
   368   000000                     _IOCAN	set	3851
   369   000000                     _IOCAP	set	3852
   370   000000                     _PIE3bits	set	3781
   371   000000                     _OSCCON1	set	3800
   372   000000                     _OSCCON3	set	3802
   373   000000                     _OSCEN	set	3804
   374   000000                     _PORTDbits	set	3984
   375   000F5B                     STR_1:
   376   000F5B  45                 	db	69	;'E'
   377   000F5C  76                 	db	118	;'v'
   378   000F5D  65                 	db	101	;'e'
   379   000F5E  72                 	db	114	;'r'
   380   000F5F  79                 	db	121	;'y'
   381   000F60  74                 	db	116	;'t'
   382   000F61  68                 	db	104	;'h'
   383   000F62  69                 	db	105	;'i'
   384   000F63  6E                 	db	110	;'n'
   385   000F64  67                 	db	103	;'g'
   386   000F65  20                 	db	32
   387   000F66  69                 	db	105	;'i'
   388   000F67  6E                 	db	110	;'n'
   389   000F68  20                 	db	32
   390   000F69  6F                 	db	111	;'o'
   391   000F6A  72                 	db	114	;'r'
   392   000F6B  64                 	db	100	;'d'
   393   000F6C  65                 	db	101	;'e'
   394   000F6D  72                 	db	114	;'r'
   395   000F6E  20                 	db	32
   396   000F6F  73                 	db	115	;'s'
   397   000F70  69                 	db	105	;'i'
   398   000F71  72                 	db	114	;'r'
   399   000F72  0A                 	db	10
   400   000F73  00                 	db	0
   401   000F74  00                 	db	0	; dummy byte at the end
   402   000000                     
   403                           ; #config settings
   404                           
   405                           	psect	cinit
   406   0020BA                     __pcinit:
   407                           	callstack 0
   408   0020BA                     start_initialization:
   409                           	callstack 0
   410   0020BA                     __initialization:
   411                           	callstack 0
   412                           
   413                           ; Initialize objects allocated to BANK0 (4 bytes)
   414                           ; load TBLPTR registers with __pidataBANK0
   415   0020BA  0EC4               	movlw	low __pidataBANK0
   416   0020BC  6EF6               	movwf	tblptrl,c
   417   0020BE  0E25               	movlw	high __pidataBANK0
   418   0020C0  6EF7               	movwf	tblptrh,c
   419   0020C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   420   0020C4  6EF8               	movwf	tblptru,c
   421   0020C6  EE00  F0E1         	lfsr	0,__pdataBANK0
   422   0020CA  EE10 F004          	lfsr	1,4
   423   0020CE                     copy_data0:
   424   0020CE  0009               	tblrd		*+
   425   0020D0  CFF5 FFEE          	movff	tablat,postinc0
   426   0020D4  50E5               	movf	postdec1,w,c
   427   0020D6  50E1               	movf	fsr1l,w,c
   428   0020D8  E1FA               	bnz	copy_data0
   429                           
   430                           ; Initialize objects allocated to COMRAM (1 bytes)
   431                           ; load TBLPTR registers with __pidataCOMRAM
   432   0020DA  0ED2               	movlw	low __pidataCOMRAM
   433   0020DC  6EF6               	movwf	tblptrl,c
   434   0020DE  0E25               	movlw	high __pidataCOMRAM
   435   0020E0  6EF7               	movwf	tblptrh,c
   436   0020E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   437   0020E4  6EF8               	movwf	tblptru,c
   438   0020E6  0009               	tblrd		*+	;fetch initializer
   439   0020E8  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   440                           
   441                           ; Clear objects allocated to BANK3 (232 bytes)
   442   0020EC  EE03  F000         	lfsr	0,__pbssBANK3
   443   0020F0  0EE8               	movlw	232
   444   0020F2                     clear_0:
   445   0020F2  6AEE               	clrf	postinc0,c
   446   0020F4  06E8               	decf	wreg,f,c
   447   0020F6  E1FD               	bnz	clear_0
   448                           
   449                           ; Clear objects allocated to BANK2 (256 bytes)
   450   0020F8  EE02  F000         	lfsr	0,__pbssBANK2
   451   0020FC  EE11 F000          	lfsr	1,256
   452   002100                     clear_1:
   453   002100  6AEE               	clrf	postinc0,c
   454   002102  50E5               	movf	postdec1,w,c
   455   002104  50E1               	movf	fsr1l,w,c
   456   002106  E1FC               	bnz	clear_1
   457   002108  50E2               	movf	fsr1h,w,c
   458   00210A  E1FA               	bnz	clear_1
   459                           
   460                           ; Clear objects allocated to BANK1 (256 bytes)
   461   00210C  EE01  F000         	lfsr	0,__pbssBANK1
   462   002110  EE11 F000          	lfsr	1,256
   463   002114                     clear_2:
   464   002114  6AEE               	clrf	postinc0,c
   465   002116  50E5               	movf	postdec1,w,c
   466   002118  50E1               	movf	fsr1l,w,c
   467   00211A  E1FC               	bnz	clear_2
   468   00211C  50E2               	movf	fsr1h,w,c
   469   00211E  E1FA               	bnz	clear_2
   470                           
   471                           ; Clear objects allocated to BANK0 (129 bytes)
   472   002120  EE00  F060         	lfsr	0,__pbssBANK0
   473   002124  0E81               	movlw	129
   474   002126                     clear_3:
   475   002126  6AEE               	clrf	postinc0,c
   476   002128  06E8               	decf	wreg,f,c
   477   00212A  E1FD               	bnz	clear_3
   478                           
   479                           ; Clear objects allocated to COMRAM (38 bytes)
   480   00212C  EE00  F029         	lfsr	0,__pbssCOMRAM
   481   002130  0E26               	movlw	38
   482   002132                     clear_4:
   483   002132  6AEE               	clrf	postinc0,c
   484   002134  06E8               	decf	wreg,f,c
   485   002136  E1FD               	bnz	clear_4
   486   002138                     end_of_initialization:
   487                           	callstack 0
   488   002138                     __end_of__initialization:
   489                           	callstack 0
   490   002138  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   491   00213A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   492   00213C  0100               	movlb	0
   493   00213E  EF38  F011         	goto	_main	;jump to C main() function
   494                           
   495                           	psect	bssCOMRAM
   496   000029                     __pbssCOMRAM:
   497                           	callstack 0
   498   000029                     _EUSART1_OverrunErrorHandler:
   499                           	callstack 0
   500   000029                     	ds	3
   501   00002C                     _EUSART1_FramingErrorHandler:
   502                           	callstack 0
   503   00002C                     	ds	3
   504   00002F                     _TMR0_OverflowCallback:
   505                           	callstack 0
   506   00002F                     	ds	3
   507   000032                     _INT2_InterruptHandler:
   508                           	callstack 0
   509   000032                     	ds	3
   510   000035                     _INT1_InterruptHandler:
   511                           	callstack 0
   512   000035                     	ds	3
   513   000038                     _INT0_InterruptHandler:
   514                           	callstack 0
   515   000038                     	ds	3
   516   00003B                     _EUSART1_RxInterruptHandler:
   517                           	callstack 0
   518   00003B                     	ds	3
   519   00003E                     _width:
   520                           	callstack 0
   521   00003E                     	ds	2
   522   000040                     _prec:
   523                           	callstack 0
   524   000040                     	ds	2
   525   000042                     _eusart1RxLastError:
   526                           	callstack 0
   527   000042                     	ds	2
   528   000044                     _timerTMR0ReloadVal16bit:
   529                           	callstack 0
   530   000044                     	ds	2
   531   000046                     _flags:
   532                           	callstack 0
   533   000046                     	ds	1
   534   000047                     _z:
   535                           	callstack 0
   536   000047                     	ds	1
   537   000048                     _TimerCount:
   538                           	callstack 0
   539   000048                     	ds	1
   540   000049                     _EndOfMessage:
   541                           	callstack 0
   542   000049                     	ds	1
   543   00004A                     _eusart1RxCount:
   544                           	callstack 0
   545   00004A                     	ds	1
   546   00004B                     _eusart1RxTail:
   547                           	callstack 0
   548   00004B                     	ds	1
   549   00004C                     _eusart1RxHead:
   550                           	callstack 0
   551   00004C                     	ds	1
   552   00004D                     _MessageLength:
   553                           	callstack 0
   554   00004D                     	ds	1
   555   00004E                     _ModbusMessage:
   556                           	callstack 0
   557   00004E                     	ds	1
   558                           
   559                           	psect	dataCOMRAM
   560   00004F                     __pdataCOMRAM:
   561                           	callstack 0
   562   00004F                     _NewMessage:
   563                           	callstack 0
   564   00004F                     	ds	1
   565                           
   566                           	psect	bssBANK0
   567   000060                     __pbssBANK0:
   568                           	callstack 0
   569   000060                     _DiscreteInput:
   570                           	callstack 0
   571   000060                     	ds	50
   572   000092                     _Coils:
   573                           	callstack 0
   574   000092                     	ds	50
   575   0000C4                     _eusart1RxStatusBuffer:
   576                           	callstack 0
   577   0000C4                     	ds	16
   578   0000D4                     _eusart1RxBuffer:
   579                           	callstack 0
   580   0000D4                     	ds	8
   581   0000DC                     	ds	5
   582                           
   583                           	psect	dataBANK0
   584   0000E1                     __pdataBANK0:
   585                           	callstack 0
   586   0000E1                     calcAD@F10957:
   587                           	callstack 0
   588   0000E1                     	ds	4
   589                           
   590                           	psect	bssBANK1
   591   000100                     __pbssBANK1:
   592                           	callstack 0
   593   000100                     _response:
   594                           	callstack 0
   595   000100                     	ds	256
   596                           
   597                           	psect	bssBANK2
   598   000200                     __pbssBANK2:
   599                           	callstack 0
   600   000200                     _received:
   601                           	callstack 0
   602   000200                     	ds	256
   603                           
   604                           	psect	bssBANK3
   605   000300                     __pbssBANK3:
   606                           	callstack 0
   607   000300                     _HoldingRegister:
   608                           	callstack 0
   609   000300                     	ds	100
   610   000364                     	ds	32
   611   000384                     _InputRegister:
   612                           	callstack 0
   613   000384                     	ds	100
   614                           
   615                           	psect	cstackCOMRAM
   616   000001                     __pcstackCOMRAM:
   617                           	callstack 0
   618   000001                     EUSART1_ReceiveISR@regValue:
   619                           	callstack 0
   620   000001                     i2TMR0_OverflowCallbackRegister@CallbackHandler:
   621                           	callstack 0
   622                           
   623                           ; 3 bytes @ 0x0
   624   000001                     	ds	1
   625   000002                     EUSART1_ReceiveISR@tempRxHead:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x1
   629   000002                     	ds	2
   630   000004                     ??i2_TMR0_Initialize:
   631   000004                     
   632                           ; 1 bytes @ 0x3
   633   000004                     	ds	2
   634   000006                     ??_INTERRUPT_InterruptManager:
   635                           
   636                           ; 1 bytes @ 0x5
   637   000006                     	ds	6
   638   00000C                     ??_CheckCRC:
   639   00000C                     ?_CalculateCRC:
   640                           	callstack 0
   641   00000C                     ?___awdiv:
   642                           	callstack 0
   643   00000C                     _EUSART1_IsTxReady$1577:
   644                           	callstack 0
   645   00000C                     EUSART1_Write@txData:
   646                           	callstack 0
   647   00000C                     ClearResponse@i:
   648                           	callstack 0
   649   00000C                     CalculateCRC@string:
   650                           	callstack 0
   651   00000C                     ___awdiv@dividend:
   652                           	callstack 0
   653   00000C                     INT0_SetInterruptHandler@InterruptHandler:
   654                           	callstack 0
   655   00000C                     INT1_SetInterruptHandler@InterruptHandler:
   656                           	callstack 0
   657   00000C                     INT2_SetInterruptHandler@InterruptHandler:
   658                           	callstack 0
   659   00000C                     TMR0_OverflowCallbackRegister@CallbackHandler:
   660                           	callstack 0
   661   00000C                     EUSART1_FramingErrorCallbackRegister@callbackHandler:
   662                           	callstack 0
   663   00000C                     EUSART1_OverrunErrorCallbackRegister@callbackHandler:
   664                           	callstack 0
   665   00000C                     EUSART1_RxCompleteCallbackRegister@callbackHandler:
   666                           	callstack 0
   667                           
   668                           ; 3 bytes @ 0xB
   669   00000C                     	ds	1
   670   00000D                     putch@txData:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0xC
   674   00000D                     	ds	1
   675   00000E                     CheckCRC@CRCH:
   676                           	callstack 0
   677   00000E                     CalculateCRC@_long:
   678                           	callstack 0
   679   00000E                     ___awdiv@divisor:
   680                           	callstack 0
   681   00000E                     fputc@c:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0xD
   685   00000E                     	ds	1
   686   00000F                     ??_TMR0_Initialize:
   687   00000F                     CheckCRC@CRCL:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0xE
   691   00000F                     	ds	1
   692   000010                     ??_CalculateCRC:
   693   000010                     ___awdiv@counter:
   694                           	callstack 0
   695   000010                     CheckCRC@CRC_Temp:
   696                           	callstack 0
   697   000010                     fputc@fp:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0xF
   701   000010                     	ds	1
   702   000011                     ___awdiv@sign:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x10
   706   000011                     	ds	1
   707   000012                     ??_fputc:
   708   000012                     CalculateCRC@CRC_TEMP:
   709                           	callstack 0
   710   000012                     CheckCRC@i:
   711                           	callstack 0
   712   000012                     ___awdiv@quotient:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x11
   716   000012                     	ds	2
   717   000014                     CalculateCRC@i:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x13
   721   000014                     	ds	2
   722   000016                     ??_ReadCoil:
   723   000016                     ??_ReadDI:
   724   000016                     ??_ReadHR:
   725   000016                     ??_ReadIR:
   726   000016                     ??_WriteCoil:
   727   000016                     ??_WriteMultiCoil:
   728                           
   729                           ; 1 bytes @ 0x15
   730   000016                     	ds	1
   731   000017                     vfpfcnvrt@fp:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x16
   735   000017                     	ds	1
   736   000018                     ReadHR@CRC:
   737                           	callstack 0
   738   000018                     PresetSR@AddressLow:
   739                           	callstack 0
   740   000018                     WriteCoil@AddressHigh:
   741                           	callstack 0
   742   000018                     WriteMultiCoil@AddressLow:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x17
   746   000018                     	ds	1
   747   000019                     vfpfcnvrt@fmt:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x18
   751   000019                     	ds	1
   752   00001A                     vfpfcnvrt@ap:
   753                           	callstack 0
   754   00001A                     ReadHR@StartingAddress:
   755                           	callstack 0
   756   00001A                     ReadIR@CRC:
   757                           	callstack 0
   758   00001A                     PresetSR@AddressHigh:
   759                           	callstack 0
   760   00001A                     ReadCoil@CRC:
   761                           	callstack 0
   762   00001A                     ReadDI@CRC:
   763                           	callstack 0
   764   00001A                     WriteCoil@AddressLow:
   765                           	callstack 0
   766   00001A                     WriteMultiCoil@AddressHigh:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x19
   770   00001A                     	ds	1
   771   00001B                     ?_vfprintf:
   772                           	callstack 0
   773   00001B                     vfprintf@fp:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x1A
   777   00001B                     	ds	1
   778   00001C                     WriteMultiCoil@QtBytes:
   779                           	callstack 0
   780   00001C                     ReadHR@QtAddresses:
   781                           	callstack 0
   782   00001C                     ReadIR@StartingAddress:
   783                           	callstack 0
   784   00001C                     PresetSR@PresetValueLow:
   785                           	callstack 0
   786   00001C                     ReadCoil@StartingAddress:
   787                           	callstack 0
   788   00001C                     ReadDI@StartingAddress:
   789                           	callstack 0
   790   00001C                     WriteCoil@WriteValueLow:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x1B
   794   00001C                     	ds	1
   795   00001D                     vfprintf@fmt:
   796                           	callstack 0
   797   00001D                     WriteMultiCoil@CRC:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x1C
   801   00001D                     	ds	1
   802   00001E                     ReadCoil@udRemaining:
   803                           	callstack 0
   804   00001E                     ReadDI@udRemaining:
   805                           	callstack 0
   806   00001E                     vfprintf@ap:
   807                           	callstack 0
   808   00001E                     ReadHR@i:
   809                           	callstack 0
   810   00001E                     ReadIR@QtAddresses:
   811                           	callstack 0
   812   00001E                     PresetSR@PresetValueHigh:
   813                           	callstack 0
   814   00001E                     WriteCoil@WriteValueHigh:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x1D
   818   00001E                     	ds	1
   819   00001F                     vfprintf@cfmt:
   820                           	callstack 0
   821   00001F                     ReadCoil@QtCoils:
   822                           	callstack 0
   823   00001F                     ReadDI@QtDI:
   824                           	callstack 0
   825   00001F                     _WriteMultiCoil$176:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x1E
   829   00001F                     	ds	1
   830   000020                     ?_printf:
   831                           	callstack 0
   832   000020                     ReadHR@j:
   833                           	callstack 0
   834   000020                     ReadIR@i:
   835                           	callstack 0
   836   000020                     printf@fmt:
   837                           	callstack 0
   838   000020                     PresetSR@CRC:
   839                           	callstack 0
   840   000020                     WriteCoil@CRC:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x1F
   844   000020                     	ds	1
   845   000021                     ReadIR@j:
   846                           	callstack 0
   847   000021                     ReadCoil@QtBytes:
   848                           	callstack 0
   849   000021                     ReadDI@QtBytes:
   850                           	callstack 0
   851   000021                     WriteMultiCoil@l:
   852                           	callstack 0
   853   000021                     printf@ap:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x20
   857   000021                     	ds	1
   858   000022                     ReadCoil@l:
   859                           	callstack 0
   860   000022                     ReadDI@l:
   861                           	callstack 0
   862   000022                     WriteMultiCoil@length:
   863                           	callstack 0
   864   000022                     PresetSR@Address:
   865                           	callstack 0
   866   000022                     WriteCoil@WriteValue:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x21
   870   000022                     	ds	1
   871   000023                     ReadCoil@lsb:
   872                           	callstack 0
   873   000023                     ReadDI@lsb:
   874                           	callstack 0
   875   000023                     WriteMultiCoil@k:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x22
   879   000023                     	ds	1
   880   000024                     ReadCoil@i:
   881                           	callstack 0
   882   000024                     ReadDI@i:
   883                           	callstack 0
   884   000024                     PresetSR@PresetValue:
   885                           	callstack 0
   886   000024                     WriteCoil@Address:
   887                           	callstack 0
   888   000024                     WriteMultiCoil@Address:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x23
   892   000024                     	ds	1
   893   000025                     ReadCoil@j:
   894                           	callstack 0
   895   000025                     ReadDI@j:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x24
   899   000025                     	ds	1
   900   000026                     ReadCoil@k:
   901                           	callstack 0
   902   000026                     ReadDI@k:
   903                           	callstack 0
   904   000026                     WriteCoil@i:
   905                           	callstack 0
   906   000026                     PresetSR@i:
   907                           	callstack 0
   908   000026                     WriteMultiCoil@QtCoils:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x25
   912   000026                     	ds	2
   913   000028                     WriteMultiCoil@i:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x27
   917   000028                     	ds	1
   918   000029                     
   919                           ; 1 bytes @ 0x28
   920 ;;
   921 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   922 ;;
   923 ;; *************** function _main *****************
   924 ;; Defined at:
   925 ;;		line 37 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  2  928[None  ] int 
   932 ;; Registers used:
   933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels required when called: 10
   945 ;; This function calls:
   946 ;;		_DecodePacket
   947 ;;		_EUSART1_RxCompleteCallbackRegister
   948 ;;		_SYSTEM_Initialize
   949 ;;		_TMR0_OverflowCallbackRegister
   950 ;;		_printf
   951 ;; This function is called by:
   952 ;;		Startup code after reset
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text0
   957   002270                     __ptext0:
   958                           	callstack 0
   959   002270                     _main:
   960                           	callstack 21
   961   002270                     
   962                           ;main.c: 39:     SYSTEM_Initialize();
   963   002270  EC95  F012         	call	_SYSTEM_Initialize	;wreg free
   964   002274                     
   965                           ;main.c: 41:     (INTCONbits.GIE = 1);
   966   002274  8EF2               	bsf	242,7,c	;volatile
   967   002276                     
   968                           ;main.c: 42:     (INTCONbits.PEIE = 1);
   969   002276  8CF2               	bsf	242,6,c	;volatile
   970                           
   971                           ;main.c: 44:     EUSART1_RxCompleteCallbackRegister(rxfunc);
   972   002278  0E28               	movlw	low _rxfunc
   973   00227A  6E0C               	movwf	EUSART1_RxCompleteCallbackRegister@callbackHandler^0,c
   974   00227C  0E20               	movlw	high _rxfunc
   975   00227E  6E0D               	movwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+1)^0,c
   976   002280  0E00               	movlw	low (_rxfunc shr (0+16))
   977   002282  6E0E               	movwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+2)^0,c
   978   002284  EC46  F012         	call	_EUSART1_RxCompleteCallbackRegister	;wreg free
   979                           
   980                           ;main.c: 45:     TMR0_OverflowCallbackRegister(tmr0func);
   981   002288  0E48               	movlw	low _tmr0func
   982   00228A  6E0C               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
   983   00228C  0E23               	movlw	high _tmr0func
   984   00228E  6E0D               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
   985   002290  0E00               	movlw	low (_tmr0func shr (0+16))
   986   002292  6E0E               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
   987   002294  ECA2  F012         	call	_TMR0_OverflowCallbackRegister	;wreg free
   988   002298                     
   989                           ;main.c: 47:     printf("Everything in order sir\n");
   990   002298  0E5B               	movlw	low STR_1
   991   00229A  6E20               	movwf	printf@fmt^0,c
   992   00229C  EC88  F012         	call	_printf	;wreg free
   993   0022A0                     l4454:
   994                           
   995                           ;main.c: 50:         if(ModbusMessage){
   996   0022A0  504E               	movf	_ModbusMessage^0,w,c	;volatile
   997   0022A2  B4D8               	btfsc	status,2,c
   998   0022A4  EF56  F011         	goto	u3211
   999   0022A8  EF58  F011         	goto	u3210
  1000   0022AC                     u3211:
  1001   0022AC  EF50  F011         	goto	l4454
  1002   0022B0                     u3210:
  1003   0022B0                     
  1004                           ;main.c: 51:             DecodePacket();
  1005   0022B0  EC72  F00F         	call	_DecodePacket	;wreg free
  1006   0022B4  EF50  F011         	goto	l4454
  1007   0022B8  EF68  F000         	goto	start
  1008   0022BC                     __end_of_main:
  1009                           	callstack 0
  1010                           
  1011 ;; *************** function _printf *****************
  1012 ;; Defined at:
  1013 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  fmt             1   31[COMRAM] PTR const unsigned char 
  1016 ;;		 -> STR_1(25), 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  ret             2    0        int 
  1019 ;;  ap              1   32[COMRAM] PTR void [1]
  1020 ;;		 -> ?_printf(2), 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  2   31[COMRAM] int 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;Total ram usage:        2 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 9
  1037 ;; This function calls:
  1038 ;;		_vfprintf
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text1
  1045   002510                     __ptext1:
  1046                           	callstack 0
  1047   002510                     _printf:
  1048                           	callstack 21
  1049   002510  0E21               	movlw	low (?_printf+1)
  1050   002512  6E21               	movwf	printf@ap^0,c
  1051   002514  0E00               	movlw	0
  1052   002516  6E1B               	movwf	vfprintf@fp^0,c
  1053   002518  0E00               	movlw	0
  1054   00251A  6E1C               	movwf	(vfprintf@fp+1)^0,c
  1055   00251C  C020  F01D         	movff	printf@fmt,vfprintf@fmt
  1056   002520  0E21               	movlw	low printf@ap
  1057   002522  6E1E               	movwf	vfprintf@ap^0,c
  1058   002524  EC5E  F011         	call	_vfprintf	;wreg free
  1059   002528  0012               	return		;funcret
  1060   00252A                     __end_of_printf:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _vfprintf *****************
  1064 ;; Defined at:
  1065 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  1068 ;;		 -> NULL(0), 
  1069 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1070 ;;		 -> STR_1(25), 
  1071 ;;  ap              1   29[COMRAM] PTR PTR void 
  1072 ;;		 -> printf@ap(1), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  1075 ;;		 -> STR_1(25), 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  2   26[COMRAM] int 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1088 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1089 ;;Total ram usage:        5 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 8
  1092 ;; This function calls:
  1093 ;;		_vfpfcnvrt
  1094 ;; This function is called by:
  1095 ;;		_printf
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text2
  1100   0022BC                     __ptext2:
  1101                           	callstack 0
  1102   0022BC                     _vfprintf:
  1103                           	callstack 21
  1104   0022BC                     
  1105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1106   0022BC  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  1107                           
  1108                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1109   0022C0  EF6C  F011         	goto	l3620
  1110   0022C4                     l3618:
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1113   0022C4  C01B  F017         	movff	vfprintf@fp,vfpfcnvrt@fp
  1114   0022C8  C01C  F018         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1115   0022CC  0E1F               	movlw	low vfprintf@cfmt
  1116   0022CE  6E19               	movwf	vfpfcnvrt@fmt^0,c
  1117   0022D0  C01E  F01A         	movff	vfprintf@ap,vfpfcnvrt@ap
  1118   0022D4  ECA1  F010         	call	_vfpfcnvrt	;wreg free
  1119   0022D8                     l3620:
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1122   0022D8  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1123   0022DC                     	if	1	;There is more than 1 active tblptr byte
  1124   0022DC  0E0F               	movlw	high __smallconst
  1125   0022DE  6EF7               	movwf	tblptrh,c
  1126   0022E0                     	endif
  1127   0022E0                     	if	0	;tblptru may be non-zero
  1128   0022E0                     	endif
  1129   0022E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1130   0022E0  0E00               	movlw	low (__smallconst shr (0+16))
  1131   0022E2  6EF8               	movwf	tblptru,c
  1132   0022E4                     	endif
  1133   0022E4  0008               	tblrd		*
  1134   0022E6  50F5               	movf	tablat,w,c
  1135   0022E8  0900               	iorlw	0
  1136   0022EA  A4D8               	btfss	status,2,c
  1137   0022EC  EF7A  F011         	goto	u1701
  1138   0022F0  EF7C  F011         	goto	u1700
  1139   0022F4                     u1701:
  1140   0022F4  EF62  F011         	goto	l3618
  1141   0022F8                     u1700:
  1142   0022F8                     
  1143                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1144   0022F8  0E00               	movlw	0
  1145   0022FA  6E1C               	movwf	(?_vfprintf+1)^0,c
  1146   0022FC  0E00               	movlw	0
  1147   0022FE  6E1B               	movwf	?_vfprintf^0,c
  1148   002300  0012               	return		;funcret
  1149   002302                     __end_of_vfprintf:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _vfpfcnvrt *****************
  1153 ;; Defined at:
  1154 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1157 ;;		 -> NULL(0), 
  1158 ;;  fmt             1   24[COMRAM] PTR PTR unsigned char 
  1159 ;;		 -> vfprintf@cfmt(1), 
  1160 ;;  ap              1   25[COMRAM] PTR PTR void 
  1161 ;;		 -> printf@ap(1), 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  cp              3    0        PTR unsigned char 
  1164 ;;  done            1    0        _Bool 
  1165 ;;  c               1    0        unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;Total ram usage:        4 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 7
  1182 ;; This function calls:
  1183 ;;		_fputc
  1184 ;; This function is called by:
  1185 ;;		_vfprintf
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text3
  1190   002142                     __ptext3:
  1191                           	callstack 0
  1192   002142                     _vfpfcnvrt:
  1193                           	callstack 21
  1194   002142                     
  1195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1196   002142  5019               	movf	vfpfcnvrt@fmt^0,w,c
  1197   002144  6ED9               	movwf	fsr2l,c
  1198   002146  6ADA               	clrf	fsr2h,c
  1199   002148  CFDF FFF6          	movff	indf2,tblptrl
  1200   00214C                     	if	1	;There is more than 1 active tblptr byte
  1201   00214C  0E0F               	movlw	high __smallconst
  1202   00214E  6EF7               	movwf	tblptrh,c
  1203   002150                     	endif
  1204   002150                     	if	0	;tblptru may be non-zero
  1205   002150                     	endif
  1206   002150                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1207   002150  0E00               	movlw	low (__smallconst shr (0+16))
  1208   002152  6EF8               	movwf	tblptru,c
  1209   002154                     	endif
  1210   002154  0008               	tblrd		*
  1211   002156  50F5               	movf	tablat,w,c
  1212   002158  0A25               	xorlw	37
  1213   00215A  A4D8               	btfss	status,2,c
  1214   00215C  EFB2  F010         	goto	u1271
  1215   002160  EFB4  F010         	goto	u1270
  1216   002164                     u1271:
  1217   002164  EFC6  F010         	goto	l3012
  1218   002168                     u1270:
  1219   002168                     
  1220                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1221   002168  5019               	movf	vfpfcnvrt@fmt^0,w,c
  1222   00216A  6ED9               	movwf	fsr2l,c
  1223   00216C  6ADA               	clrf	fsr2h,c
  1224   00216E  2ADF               	incf	indf2,f,c
  1225   002170                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1227   002170  0E00               	movlw	0
  1228   002172  6E3F               	movwf	(_width+1)^0,c
  1229   002174  0E00               	movlw	0
  1230   002176  6E3E               	movwf	_width^0,c
  1231   002178  C03E  F046         	movff	_width,_flags
  1232   00217C                     
  1233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1234   00217C  6840               	setf	_prec^0,c
  1235   00217E  6841               	setf	(_prec+1)^0,c
  1236   002180                     l3008:
  1237                           
  1238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1239   002180  5019               	movf	vfpfcnvrt@fmt^0,w,c
  1240   002182  6ED9               	movwf	fsr2l,c
  1241   002184  6ADA               	clrf	fsr2h,c
  1242   002186  2ADF               	incf	indf2,f,c
  1243   002188  EFDB  F010         	goto	l1674
  1244   00218C                     l3012:
  1245                           
  1246                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1247   00218C  5019               	movf	vfpfcnvrt@fmt^0,w,c
  1248   00218E  6ED9               	movwf	fsr2l,c
  1249   002190  6ADA               	clrf	fsr2h,c
  1250   002192  CFDF FFF6          	movff	indf2,tblptrl
  1251   002196                     	if	1	;There is more than 1 active tblptr byte
  1252   002196  0E0F               	movlw	high __smallconst
  1253   002198  6EF7               	movwf	tblptrh,c
  1254   00219A                     	endif
  1255   00219A                     	if	0	;tblptru may be non-zero
  1256   00219A                     	endif
  1257   00219A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1258   00219A  0E00               	movlw	low (__smallconst shr (0+16))
  1259   00219C  6EF8               	movwf	tblptru,c
  1260   00219E                     	endif
  1261   00219E  0008               	tblrd		*
  1262   0021A0  50F5               	movf	tablat,w,c
  1263   0021A2  6E0E               	movwf	fputc@c^0,c
  1264   0021A4  6A0F               	clrf	(fputc@c+1)^0,c
  1265   0021A6  C017  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1266   0021AA  C018  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1267   0021AE  EC4F  F00E         	call	_fputc	;wreg free
  1268   0021B2  EFC0  F010         	goto	l3008
  1269   0021B6                     l1674:
  1270   0021B6  0012               	return		;funcret
  1271   0021B8                     __end_of_vfpfcnvrt:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _fputc *****************
  1275 ;; Defined at:
  1276 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  c               2   13[COMRAM] int 
  1279 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1280 ;;		 -> NULL(0), 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2   13[COMRAM] int 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1295 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;Total ram usage:        9 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 6
  1299 ;; This function calls:
  1300 ;;		_putch
  1301 ;; This function is called by:
  1302 ;;		_vfpfcnvrt
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text4
  1307   001C9E                     __ptext4:
  1308                           	callstack 0
  1309   001C9E                     _fputc:
  1310                           	callstack 21
  1311   001C9E  5010               	movf	fputc@fp^0,w,c
  1312   001CA0  1011               	iorwf	(fputc@fp+1)^0,w,c
  1313   001CA2  B4D8               	btfsc	status,2,c
  1314   001CA4  EF56  F00E         	goto	u1101
  1315   001CA8  EF58  F00E         	goto	u1100
  1316   001CAC                     u1101:
  1317   001CAC  EF61  F00E         	goto	l2886
  1318   001CB0                     u1100:
  1319   001CB0  5010               	movf	fputc@fp^0,w,c
  1320   001CB2  1011               	iorwf	(fputc@fp+1)^0,w,c
  1321   001CB4  A4D8               	btfss	status,2,c
  1322   001CB6  EF5F  F00E         	goto	u1111
  1323   001CBA  EF61  F00E         	goto	u1110
  1324   001CBE                     u1111:
  1325   001CBE  EF66  F00E         	goto	l2888
  1326   001CC2                     u1110:
  1327   001CC2                     l2886:
  1328   001CC2  500E               	movf	fputc@c^0,w,c
  1329   001CC4  EC79  F012         	call	_putch
  1330   001CC8  EFB3  F00E         	goto	l1692
  1331   001CCC                     l2888:
  1332   001CCC  EE20 F00A          	lfsr	2,10
  1333   001CD0  5010               	movf	fputc@fp^0,w,c
  1334   001CD2  26D9               	addwf	fsr2l,f,c
  1335   001CD4  5011               	movf	(fputc@fp+1)^0,w,c
  1336   001CD6  22DA               	addwfc	fsr2h,f,c
  1337   001CD8  50DE               	movf	postinc2,w,c
  1338   001CDA  10DE               	iorwf	postinc2,w,c
  1339   001CDC  B4D8               	btfsc	status,2,c
  1340   001CDE  EF73  F00E         	goto	u1121
  1341   001CE2  EF75  F00E         	goto	u1120
  1342   001CE6                     u1121:
  1343   001CE6  EF90  F00E         	goto	l2892
  1344   001CEA                     u1120:
  1345   001CEA  EE20 F00A          	lfsr	2,10
  1346   001CEE  5010               	movf	fputc@fp^0,w,c
  1347   001CF0  26D9               	addwf	fsr2l,f,c
  1348   001CF2  5011               	movf	(fputc@fp+1)^0,w,c
  1349   001CF4  22DA               	addwfc	fsr2h,f,c
  1350   001CF6  EE10 F003          	lfsr	1,3
  1351   001CFA  5010               	movf	fputc@fp^0,w,c
  1352   001CFC  26E1               	addwf	fsr1l,f,c
  1353   001CFE  5011               	movf	(fputc@fp+1)^0,w,c
  1354   001D00  22E2               	addwfc	fsr1h,f,c
  1355   001D02  50DE               	movf	postinc2,w,c
  1356   001D04  5CE6               	subwf	postinc1,w,c
  1357   001D06  50E6               	movf	postinc1,w,c
  1358   001D08  0A80               	xorlw	128
  1359   001D0A  6E16               	movwf	(??_fputc+4)^0,c
  1360   001D0C  50DE               	movf	postinc2,w,c
  1361   001D0E  0A80               	xorlw	128
  1362   001D10  5816               	subwfb	(??_fputc+4)^0,w,c
  1363   001D12  B0D8               	btfsc	status,0,c
  1364   001D14  EF8E  F00E         	goto	u1131
  1365   001D18  EF90  F00E         	goto	u1130
  1366   001D1C                     u1131:
  1367   001D1C  EFB3  F00E         	goto	l1692
  1368   001D20                     u1130:
  1369   001D20                     l2892:
  1370   001D20  EE20 F003          	lfsr	2,3
  1371   001D24  5010               	movf	fputc@fp^0,w,c
  1372   001D26  26D9               	addwf	fsr2l,f,c
  1373   001D28  5011               	movf	(fputc@fp+1)^0,w,c
  1374   001D2A  22DA               	addwfc	fsr2h,f,c
  1375   001D2C  CFDE F012          	movff	postinc2,??_fputc
  1376   001D30  CFDD F013          	movff	postdec2,??_fputc+1
  1377   001D34  C010  FFD9         	movff	fputc@fp,fsr2l
  1378   001D38  C011  FFDA         	movff	fputc@fp+1,fsr2h
  1379   001D3C  CFDE F014          	movff	postinc2,??_fputc+2
  1380   001D40  CFDD F015          	movff	postdec2,??_fputc+3
  1381   001D44  5012               	movf	??_fputc^0,w,c
  1382   001D46  2414               	addwf	(??_fputc+2)^0,w,c
  1383   001D48  6ED9               	movwf	fsr2l,c
  1384   001D4A  5013               	movf	(??_fputc+1)^0,w,c
  1385   001D4C  2015               	addwfc	(??_fputc+3)^0,w,c
  1386   001D4E  6EDA               	movwf	fsr2h,c
  1387   001D50  C00E  FFDF         	movff	fputc@c,indf2
  1388   001D54  EE20 F003          	lfsr	2,3
  1389   001D58  5010               	movf	fputc@fp^0,w,c
  1390   001D5A  26D9               	addwf	fsr2l,f,c
  1391   001D5C  5011               	movf	(fputc@fp+1)^0,w,c
  1392   001D5E  22DA               	addwfc	fsr2h,f,c
  1393   001D60  2ADE               	incf	postinc2,f,c
  1394   001D62  0E00               	movlw	0
  1395   001D64  22DD               	addwfc	postdec2,f,c
  1396   001D66                     l1692:
  1397   001D66  0012               	return		;funcret
  1398   001D68                     __end_of_fputc:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _putch *****************
  1402 ;; Defined at:
  1403 ;;		line 318 in file "mcc_generated_files/uart/src/eusart1.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  txData          1    wreg     unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  txData          1   12[COMRAM] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1421 ;;Total ram usage:        1 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 5
  1424 ;; This function calls:
  1425 ;;		_EUSART1_IsTxReady
  1426 ;;		_EUSART1_Write
  1427 ;; This function is called by:
  1428 ;;		_fputc
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text5
  1433   0024F2                     __ptext5:
  1434                           	callstack 0
  1435   0024F2                     _putch:
  1436                           	callstack 21
  1437                           
  1438                           ;incstack = 0
  1439                           ;putch@txData stored from wreg
  1440   0024F2  6E0D               	movwf	putch@txData^0,c
  1441   0024F4                     l2876:
  1442   0024F4  EC31  F012         	call	_EUSART1_IsTxReady	;wreg free
  1443   0024F8  0900               	iorlw	0
  1444   0024FA  B4D8               	btfsc	status,2,c
  1445   0024FC  EF82  F012         	goto	u1091
  1446   002500  EF84  F012         	goto	u1090
  1447   002504                     u1091:
  1448   002504  EF7A  F012         	goto	l2876
  1449   002508                     u1090:
  1450   002508                     
  1451                           ;mcc_generated_files/uart/src/eusart1.c: 321:     return EUSART1_Write(txData);;	Return 
      +                          value of _putch is never used
  1452   002508  500D               	movf	putch@txData^0,w,c
  1453   00250A  ECDB  F012         	call	_EUSART1_Write
  1454   00250E  0012               	return		;funcret
  1455   002510                     __end_of_putch:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _EUSART1_Write *****************
  1459 ;; Defined at:
  1460 ;;		line 307 in file "mcc_generated_files/uart/src/eusart1.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  txData          1    wreg     unsigned char 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  txData          1   11[COMRAM] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 4
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_putch
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text6
  1489   0025B6                     __ptext6:
  1490                           	callstack 0
  1491   0025B6                     _EUSART1_Write:
  1492                           	callstack 21
  1493                           
  1494                           ;incstack = 0
  1495                           ;EUSART1_Write@txData stored from wreg
  1496   0025B6  6E0C               	movwf	EUSART1_Write@txData^0,c
  1497   0025B8                     
  1498                           ;mcc_generated_files/uart/src/eusart1.c: 307: void EUSART1_Write(uint8_t txData);mcc_gen
      +                          erated_files/uart/src/eusart1.c: 308: {;mcc_generated_files/uart/src/eusart1.c: 309:    
      +                           TX1REG = txData;
  1499   0025B8  C00C  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  1500   0025BC  0012               	return		;funcret
  1501   0025BE                     __end_of_EUSART1_Write:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _EUSART1_IsTxReady *****************
  1505 ;; Defined at:
  1506 ;;		line 228 in file "mcc_generated_files/uart/src/eusart1.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      _Bool 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1524 ;;Total ram usage:        1 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 4
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_putch
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text7
  1535   002462                     __ptext7:
  1536                           	callstack 0
  1537   002462                     _EUSART1_IsTxReady:
  1538                           	callstack 21
  1539   002462                     
  1540                           ;mcc_generated_files/uart/src/eusart1.c: 230:     return (_Bool)(PIR3bits.TX1IF && TX1ST
      +                          Abits.TXEN);
  1541   002462  0E00               	movlw	0
  1542   002464  6E0C               	movwf	_EUSART1_IsTxReady$1577^0,c
  1543   002466  010E               	movlb	14	; () banked
  1544   002468  A9CD               	btfss	205,4,b	;volatile
  1545   00246A  EF39  F012         	goto	u1071
  1546   00246E  EF3B  F012         	goto	u1070
  1547   002472                     u1071:
  1548   002472  EF44  F012         	goto	l803
  1549   002476                     u1070:
  1550   002476                     
  1551                           ; BSR set to: 14
  1552   002476  AA9E               	btfss	158,5,c	;volatile
  1553   002478  EF40  F012         	goto	u1081
  1554   00247C  EF42  F012         	goto	u1080
  1555   002480                     u1081:
  1556   002480  EF44  F012         	goto	l803
  1557   002484                     u1080:
  1558   002484                     
  1559                           ; BSR set to: 14
  1560   002484  0E01               	movlw	1
  1561   002486  6E0C               	movwf	_EUSART1_IsTxReady$1577^0,c
  1562   002488                     l803:
  1563                           
  1564                           ; BSR set to: 14
  1565   002488  500C               	movf	_EUSART1_IsTxReady$1577^0,w,c
  1566   00248A                     
  1567                           ; BSR set to: 14
  1568   00248A  0012               	return		;funcret
  1569   00248C                     __end_of_EUSART1_IsTxReady:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _SYSTEM_Initialize *****************
  1573 ;; Defined at:
  1574 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 6
  1595 ;; This function calls:
  1596 ;;		_ADCC_Initialize
  1597 ;;		_CLOCK_Initialize
  1598 ;;		_EUSART1_Initialize
  1599 ;;		_INTERRUPT_Initialize
  1600 ;;		_PIN_MANAGER_Initialize
  1601 ;;		_TMR0_Initialize
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text8
  1608   00252A                     __ptext8:
  1609                           	callstack 0
  1610   00252A                     _SYSTEM_Initialize:
  1611                           	callstack 24
  1612   00252A                     
  1613                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
  1614   00252A  ECAE  F012         	call	_CLOCK_Initialize	;wreg free
  1615                           
  1616                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
  1617   00252E  EC16  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
  1618                           
  1619                           ;mcc_generated_files/system/src/system.c: 42:     ADCC_Initialize();
  1620   002532  EC0D  F011         	call	_ADCC_Initialize	;wreg free
  1621   002536                     
  1622                           ;mcc_generated_files/system/src/system.c: 43:     EUSART1_Initialize();
  1623   002536  ECDC  F010         	call	_EUSART1_Initialize	;wreg free
  1624   00253A                     
  1625                           ;mcc_generated_files/system/src/system.c: 44:     TMR0_Initialize();
  1626   00253A  ECC4  F011         	call	_TMR0_Initialize	;wreg free
  1627   00253E                     
  1628                           ;mcc_generated_files/system/src/system.c: 45:     INTERRUPT_Initialize();
  1629   00253E  EC81  F011         	call	_INTERRUPT_Initialize	;wreg free
  1630   002542  0012               	return		;funcret
  1631   002544                     __end_of_SYSTEM_Initialize:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _TMR0_Initialize *****************
  1635 ;; Defined at:
  1636 ;;		line 54 in file "mcc_generated_files/timer/src/tmr0.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 5
  1657 ;; This function calls:
  1658 ;;		_TMR0_OverflowCallbackRegister
  1659 ;; This function is called by:
  1660 ;;		_SYSTEM_Initialize
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text9
  1665   002388                     __ptext9:
  1666                           	callstack 0
  1667   002388                     _TMR0_Initialize:
  1668                           	callstack 0
  1669                           
  1670                           ;Skip over the trampoline to the duplicate function for level 2
  1671   002388  A250               	btfss	int$flags,1,c
  1672   00238A  EFC9  F011         	goto	_TMR0_Initialize$intlevel0
  1673   00238E  EF01  F012         	goto	i2_TMR0_Initialize
  1674   002392                     _TMR0_Initialize$intlevel0:
  1675                           	callstack 24
  1676   002392                     
  1677                           ;mcc_generated_files/timer/src/tmr0.c: 57:     TMR0H = 0xDC;
  1678   002392  0EDC               	movlw	220
  1679   002394  6ED4               	movwf	212,c	;volatile
  1680                           
  1681                           ;mcc_generated_files/timer/src/tmr0.c: 60:     TMR0L = 0x66;
  1682   002396  0E66               	movlw	102
  1683   002398  6ED3               	movwf	211,c	;volatile
  1684                           
  1685                           ;mcc_generated_files/timer/src/tmr0.c: 63:     T0CON1 = 0x50;
  1686   00239A  0E50               	movlw	80
  1687   00239C  6ED6               	movwf	214,c	;volatile
  1688                           
  1689                           ;mcc_generated_files/timer/src/tmr0.c: 66:     timerTMR0ReloadVal16bit = ((uint16_t)TMR0
      +                          H << 8) | TMR0L;
  1690   00239E  50D4               	movf	212,w,c	;volatile
  1691   0023A0  6E0F               	movwf	??_TMR0_Initialize^0,c
  1692   0023A2  50D3               	movf	211,w,c	;volatile
  1693   0023A4  6E44               	movwf	_timerTMR0ReloadVal16bit^0,c	;volatile
  1694   0023A6  C00F  F045         	movff	??_TMR0_Initialize,_timerTMR0ReloadVal16bit+1	;volatile
  1695   0023AA                     
  1696                           ;mcc_generated_files/timer/src/tmr0.c: 69:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
  1697   0023AA  0ECC               	movlw	low _TMR0_DefaultOverflowCallback
  1698   0023AC  6E0C               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
  1699   0023AE  0E25               	movlw	high _TMR0_DefaultOverflowCallback
  1700   0023B0  6E0D               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  1701   0023B2  0E00               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
  1702   0023B4  6E0E               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  1703   0023B6  ECA2  F012         	call	_TMR0_OverflowCallbackRegister	;wreg free
  1704   0023BA                     
  1705                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIR0bits.TMR0IF = 0;
  1706   0023BA  010E               	movlb	14	; () banked
  1707   0023BC  9BCA               	bcf	202,5,b	;volatile
  1708   0023BE                     
  1709                           ; BSR set to: 14
  1710                           ;mcc_generated_files/timer/src/tmr0.c: 75:     PIE0bits.TMR0IE = 1;
  1711   0023BE  8BC2               	bsf	194,5,b	;volatile
  1712   0023C0                     
  1713                           ; BSR set to: 14
  1714                           ;mcc_generated_files/timer/src/tmr0.c: 78:     T0CON0 = 0x90;
  1715   0023C0  0E90               	movlw	144
  1716   0023C2  6ED5               	movwf	213,c	;volatile
  1717   0023C4                     
  1718                           ; BSR set to: 14
  1719   0023C4  0012               	return		;funcret
  1720   0023C6                     __end_of_TMR0_Initialize:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  1724 ;; Defined at:
  1725 ;;		line 135 in file "mcc_generated_files/timer/src/tmr0.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  CallbackHand    3   11[COMRAM] PTR FTN()void 
  1728 ;;		 -> tmr0func(1), TMR0_DefaultOverflowCallback(1), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1740 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;Total ram usage:        3 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 4
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_TMR0_Initialize
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text10
  1756   002544                     __ptext10:
  1757                           	callstack 0
  1758   002544                     _TMR0_OverflowCallbackRegister:
  1759                           	callstack 0
  1760                           
  1761                           ; BSR set to: 14
  1762                           ;Skip over the trampoline to the duplicate function for level 2
  1763   002544  A250               	btfss	int$flags,1,c
  1764   002546  EFA7  F012         	goto	_TMR0_OverflowCallbackRegister$intlevel0
  1765   00254A  EFCF  F012         	goto	i2_TMR0_OverflowCallbackRegister
  1766   00254E                     _TMR0_OverflowCallbackRegister$intlevel0:
  1767                           	callstack 26
  1768   00254E                     
  1769                           ;mcc_generated_files/timer/src/tmr0.c: 135: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 136: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 137:     TMR0_OverflowCallback = CallbackHandler;
  1770   00254E  C00C  F02F         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
  1771   002552  C00D  F030         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
  1772   002556  C00E  F031         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
  1773   00255A  0012               	return		;funcret
  1774   00255C                     __end_of_TMR0_OverflowCallbackRegister:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _PIN_MANAGER_Initialize *****************
  1778 ;; Defined at:
  1779 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 4
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_SYSTEM_Initialize
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text11
  1808   001E2C                     __ptext11:
  1809                           	callstack 0
  1810   001E2C                     _PIN_MANAGER_Initialize:
  1811                           	callstack 25
  1812   001E2C                     
  1813                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x10;
  1814   001E2C  0E10               	movlw	16
  1815   001E2E  6E83               	movwf	131,c	;volatile
  1816                           
  1817                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1818   001E30  0E00               	movlw	0
  1819   001E32  6E84               	movwf	132,c	;volatile
  1820                           
  1821                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1822   001E34  0E00               	movlw	0
  1823   001E36  6E85               	movwf	133,c	;volatile
  1824                           
  1825                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  1826   001E38  0E00               	movlw	0
  1827   001E3A  6E86               	movwf	134,c	;volatile
  1828                           
  1829                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  1830   001E3C  0E00               	movlw	0
  1831   001E3E  6E87               	movwf	135,c	;volatile
  1832                           
  1833                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xCF;
  1834   001E40  0ECF               	movlw	207
  1835   001E42  6E88               	movwf	136,c	;volatile
  1836                           
  1837                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xC8;
  1838   001E44  0EC8               	movlw	200
  1839   001E46  6E89               	movwf	137,c	;volatile
  1840   001E48                     
  1841                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xFF;
  1842   001E48  688A               	setf	138,c	;volatile
  1843   001E4A                     
  1844                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
  1845   001E4A  688B               	setf	139,c	;volatile
  1846                           
  1847                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x8;
  1848   001E4C  0E08               	movlw	8
  1849   001E4E  6E8C               	movwf	140,c	;volatile
  1850                           
  1851                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xCF;
  1852   001E50  0ECF               	movlw	207
  1853   001E52  010F               	movlb	15	; () banked
  1854   001E54  6F11               	movwf	17,b	;volatile
  1855                           
  1856                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xC0;
  1857   001E56  0EC0               	movlw	192
  1858   001E58  6F19               	movwf	25,b	;volatile
  1859                           
  1860                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0x0;
  1861   001E5A  0E00               	movlw	0
  1862   001E5C  6F21               	movwf	33,b	;volatile
  1863                           
  1864                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0x0;
  1865   001E5E  0E00               	movlw	0
  1866   001E60  6F26               	movwf	38,b	;volatile
  1867                           
  1868                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x0;
  1869   001E62  0E00               	movlw	0
  1870   001E64  6F2E               	movwf	46,b	;volatile
  1871                           
  1872                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  1873   001E66  0E00               	movlw	0
  1874   001E68  6F10               	movwf	16,b	;volatile
  1875                           
  1876                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  1877   001E6A  0E00               	movlw	0
  1878   001E6C  6F18               	movwf	24,b	;volatile
  1879                           
  1880                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  1881   001E6E  0E00               	movlw	0
  1882   001E70  6F20               	movwf	32,b	;volatile
  1883                           
  1884                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  1885   001E72  0E00               	movlw	0
  1886   001E74  6F25               	movwf	37,b	;volatile
  1887                           
  1888                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  1889   001E76  0E00               	movlw	0
  1890   001E78  6F2D               	movwf	45,b	;volatile
  1891                           
  1892                           ;mcc_generated_files/system/src/pins.c: 79:     ODCONA = 0x0;
  1893   001E7A  0E00               	movlw	0
  1894   001E7C  6F0F               	movwf	15,b	;volatile
  1895                           
  1896                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONB = 0x0;
  1897   001E7E  0E00               	movlw	0
  1898   001E80  6F17               	movwf	23,b	;volatile
  1899                           
  1900                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONC = 0x0;
  1901   001E82  0E00               	movlw	0
  1902   001E84  6F1F               	movwf	31,b	;volatile
  1903                           
  1904                           ;mcc_generated_files/system/src/pins.c: 82:     ODCOND = 0x0;
  1905   001E86  0E00               	movlw	0
  1906   001E88  6F24               	movwf	36,b	;volatile
  1907                           
  1908                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONE = 0x0;
  1909   001E8A  0E00               	movlw	0
  1910   001E8C  6F2C               	movwf	44,b	;volatile
  1911   001E8E                     
  1912                           ; BSR set to: 15
  1913                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONA = 0xFF;
  1914   001E8E  690E               	setf	14,b	;volatile
  1915   001E90                     
  1916                           ; BSR set to: 15
  1917                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONB = 0xFF;
  1918   001E90  6916               	setf	22,b	;volatile
  1919   001E92                     
  1920                           ; BSR set to: 15
  1921                           ;mcc_generated_files/system/src/pins.c: 90:     SLRCONC = 0xFF;
  1922   001E92  691E               	setf	30,b	;volatile
  1923   001E94                     
  1924                           ; BSR set to: 15
  1925                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCOND = 0xFF;
  1926   001E94  6923               	setf	35,b	;volatile
  1927                           
  1928                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONE = 0x7;
  1929   001E96  0E07               	movlw	7
  1930   001E98  6F2B               	movwf	43,b	;volatile
  1931   001E9A                     
  1932                           ; BSR set to: 15
  1933                           ;mcc_generated_files/system/src/pins.c: 97:     INLVLA = 0xFF;
  1934   001E9A  690D               	setf	13,b	;volatile
  1935   001E9C                     
  1936                           ; BSR set to: 15
  1937                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLB = 0xFF;
  1938   001E9C  6915               	setf	21,b	;volatile
  1939   001E9E                     
  1940                           ; BSR set to: 15
  1941                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLC = 0xFF;
  1942   001E9E  691D               	setf	29,b	;volatile
  1943   001EA0                     
  1944                           ; BSR set to: 15
  1945                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLD = 0xFF;
  1946   001EA0  6922               	setf	34,b	;volatile
  1947                           
  1948                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLE = 0xF;
  1949   001EA2  0E0F               	movlw	15
  1950   001EA4  6F2A               	movwf	42,b	;volatile
  1951                           
  1952                           ;mcc_generated_files/system/src/pins.c: 109:     RX1PPS = 0xB;
  1953   001EA6  0E0B               	movlw	11
  1954   001EA8  010E               	movlb	14	; () banked
  1955   001EAA  6FB5               	movwf	181,b	;volatile
  1956                           
  1957                           ;mcc_generated_files/system/src/pins.c: 110:     RB4PPS = 0x09;
  1958   001EAC  0E09               	movlw	9
  1959   001EAE  6FF3               	movwf	243,b	;volatile
  1960                           
  1961                           ;mcc_generated_files/system/src/pins.c: 115:     IOCAP = 0x0;
  1962   001EB0  0E00               	movlw	0
  1963   001EB2  010F               	movlb	15	; () banked
  1964   001EB4  6F0C               	movwf	12,b	;volatile
  1965                           
  1966                           ;mcc_generated_files/system/src/pins.c: 116:     IOCAN = 0x0;
  1967   001EB6  0E00               	movlw	0
  1968   001EB8  6F0B               	movwf	11,b	;volatile
  1969                           
  1970                           ;mcc_generated_files/system/src/pins.c: 117:     IOCAF = 0x0;
  1971   001EBA  0E00               	movlw	0
  1972   001EBC  6F0A               	movwf	10,b	;volatile
  1973                           
  1974                           ;mcc_generated_files/system/src/pins.c: 118:     IOCBP = 0x0;
  1975   001EBE  0E00               	movlw	0
  1976   001EC0  6F14               	movwf	20,b	;volatile
  1977                           
  1978                           ;mcc_generated_files/system/src/pins.c: 119:     IOCBN = 0x0;
  1979   001EC2  0E00               	movlw	0
  1980   001EC4  6F13               	movwf	19,b	;volatile
  1981                           
  1982                           ;mcc_generated_files/system/src/pins.c: 120:     IOCBF = 0x0;
  1983   001EC6  0E00               	movlw	0
  1984   001EC8  6F12               	movwf	18,b	;volatile
  1985                           
  1986                           ;mcc_generated_files/system/src/pins.c: 121:     IOCCP = 0x0;
  1987   001ECA  0E00               	movlw	0
  1988   001ECC  6F1C               	movwf	28,b	;volatile
  1989                           
  1990                           ;mcc_generated_files/system/src/pins.c: 122:     IOCCN = 0x0;
  1991   001ECE  0E00               	movlw	0
  1992   001ED0  6F1B               	movwf	27,b	;volatile
  1993                           
  1994                           ;mcc_generated_files/system/src/pins.c: 123:     IOCCF = 0x0;
  1995   001ED2  0E00               	movlw	0
  1996   001ED4  6F1A               	movwf	26,b	;volatile
  1997                           
  1998                           ;mcc_generated_files/system/src/pins.c: 124:     IOCEP = 0x0;
  1999   001ED6  0E00               	movlw	0
  2000   001ED8  6F29               	movwf	41,b	;volatile
  2001                           
  2002                           ;mcc_generated_files/system/src/pins.c: 125:     IOCEN = 0x0;
  2003   001EDA  0E00               	movlw	0
  2004   001EDC  6F28               	movwf	40,b	;volatile
  2005                           
  2006                           ;mcc_generated_files/system/src/pins.c: 126:     IOCEF = 0x0;
  2007   001EDE  0E00               	movlw	0
  2008   001EE0  6F27               	movwf	39,b	;volatile
  2009   001EE2                     
  2010                           ; BSR set to: 15
  2011   001EE2  0012               	return		;funcret
  2012   001EE4                     __end_of_PIN_MANAGER_Initialize:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _INTERRUPT_Initialize *****************
  2016 ;; Defined at:
  2017 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 5
  2038 ;; This function calls:
  2039 ;;		_INT0_SetInterruptHandler
  2040 ;;		_INT1_SetInterruptHandler
  2041 ;;		_INT2_SetInterruptHandler
  2042 ;; This function is called by:
  2043 ;;		_SYSTEM_Initialize
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text12
  2048   002302                     __ptext12:
  2049                           	callstack 0
  2050   002302                     _INTERRUPT_Initialize:
  2051                           	callstack 24
  2052   002302                     
  2053                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCONbits.IPEN = 0;
  2054   002302  9AF2               	bcf	242,5,c	;volatile
  2055                           
  2056                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR0bits.INT0IF = 0);
  2057   002304  010E               	movlb	14	; () banked
  2058   002306  91CA               	bcf	202,0,b	;volatile
  2059                           
  2060                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCONbits.INT0EDG = 1);
  2061   002308  80F2               	bsf	242,0,c	;volatile
  2062   00230A                     
  2063                           ; BSR set to: 14
  2064                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  2065   00230A  0E00               	movlw	0
  2066   00230C  6E0C               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2067   00230E  0E00               	movlw	0
  2068   002310  6E0D               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2069   002312  0E00               	movlw	0
  2070   002314  6E0E               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  2071   002316  ECC8  F012         	call	_INT0_SetInterruptHandler	;wreg free
  2072   00231A                     
  2073                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR0bits.INT1IF = 0);
  2074   00231A  010E               	movlb	14	; () banked
  2075   00231C  93CA               	bcf	202,1,b	;volatile
  2076   00231E                     
  2077                           ; BSR set to: 14
  2078                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCONbits.INT1EDG = 1);
  2079   00231E  82F2               	bsf	242,1,c	;volatile
  2080                           
  2081                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  2082   002320  0E00               	movlw	0
  2083   002322  6E0C               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  2084   002324  0E00               	movlw	0
  2085   002326  6E0D               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  2086   002328  0E00               	movlw	0
  2087   00232A  6E0E               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  2088   00232C  ECC1  F012         	call	_INT1_SetInterruptHandler	;wreg free
  2089   002330                     
  2090                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR0bits.INT2IF = 0);
  2091   002330  010E               	movlb	14	; () banked
  2092   002332  95CA               	bcf	202,2,b	;volatile
  2093   002334                     
  2094                           ; BSR set to: 14
  2095                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCONbits.INT2EDG = 1);
  2096   002334  84F2               	bsf	242,2,c	;volatile
  2097                           
  2098                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  2099   002336  0E00               	movlw	0
  2100   002338  6E0C               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  2101   00233A  0E00               	movlw	0
  2102   00233C  6E0D               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  2103   00233E  0E00               	movlw	0
  2104   002340  6E0E               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  2105   002342  ECBA  F012         	call	_INT2_SetInterruptHandler	;wreg free
  2106   002346  0012               	return		;funcret
  2107   002348                     __end_of_INTERRUPT_Initialize:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _INT2_SetInterruptHandler *****************
  2111 ;; Defined at:
  2112 ;;		line 178 in file "mcc_generated_files/system/src/interrupt.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  InterruptHan    3   11[COMRAM] PTR FTN()void 
  2115 ;;		 -> INT2_DefaultInterruptHandler(1), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2127 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;Total ram usage:        3 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 4
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_INTERRUPT_Initialize
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text13
  2142   002574                     __ptext13:
  2143                           	callstack 0
  2144   002574                     _INT2_SetInterruptHandler:
  2145                           	callstack 24
  2146   002574                     
  2147                           ;mcc_generated_files/system/src/interrupt.c: 179:     INT2_InterruptHandler = InterruptH
      +                          andler;
  2148   002574  C00C  F032         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2149   002578  C00D  F033         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2150   00257C  C00E  F034         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  2151   002580  0012               	return		;funcret
  2152   002582                     __end_of_INT2_SetInterruptHandler:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _INT1_SetInterruptHandler *****************
  2156 ;; Defined at:
  2157 ;;		line 152 in file "mcc_generated_files/system/src/interrupt.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  InterruptHan    3   11[COMRAM] PTR FTN()void 
  2160 ;;		 -> INT1_DefaultInterruptHandler(1), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2176 ;;Total ram usage:        3 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 4
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_INTERRUPT_Initialize
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text14
  2187   002582                     __ptext14:
  2188                           	callstack 0
  2189   002582                     _INT1_SetInterruptHandler:
  2190                           	callstack 24
  2191   002582                     
  2192                           ;mcc_generated_files/system/src/interrupt.c: 153:     INT1_InterruptHandler = InterruptH
      +                          andler;
  2193   002582  C00C  F035         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2194   002586  C00D  F036         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2195   00258A  C00E  F037         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  2196   00258E  0012               	return		;funcret
  2197   002590                     __end_of_INT1_SetInterruptHandler:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _INT0_SetInterruptHandler *****************
  2201 ;; Defined at:
  2202 ;;		line 126 in file "mcc_generated_files/system/src/interrupt.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  InterruptHan    3   11[COMRAM] PTR FTN()void 
  2205 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2217 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 4
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_INTERRUPT_Initialize
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text15
  2232   002590                     __ptext15:
  2233                           	callstack 0
  2234   002590                     _INT0_SetInterruptHandler:
  2235                           	callstack 24
  2236   002590                     
  2237                           ;mcc_generated_files/system/src/interrupt.c: 127:     INT0_InterruptHandler = InterruptH
      +                          andler;
  2238   002590  C00C  F038         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2239   002594  C00D  F039         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2240   002598  C00E  F03A         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  2241   00259C  0012               	return		;funcret
  2242   00259E                     __end_of_INT0_SetInterruptHandler:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _EUSART1_Initialize *****************
  2246 ;; Defined at:
  2247 ;;		line 106 in file "mcc_generated_files/uart/src/eusart1.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 5
  2268 ;; This function calls:
  2269 ;;		_EUSART1_FramingErrorCallbackRegister
  2270 ;;		_EUSART1_OverrunErrorCallbackRegister
  2271 ;;		_EUSART1_RxCompleteCallbackRegister
  2272 ;; This function is called by:
  2273 ;;		_SYSTEM_Initialize
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text16
  2278   0021B8                     __ptext16:
  2279                           	callstack 0
  2280   0021B8                     _EUSART1_Initialize:
  2281                           	callstack 24
  2282   0021B8                     
  2283                           ;mcc_generated_files/uart/src/eusart1.c: 108:     PIE3bits.RC1IE = 0;
  2284   0021B8  010E               	movlb	14	; () banked
  2285   0021BA  9BC5               	bcf	197,5,b	;volatile
  2286   0021BC                     
  2287                           ; BSR set to: 14
  2288                           ;mcc_generated_files/uart/src/eusart1.c: 109:     EUSART1_RxCompleteCallbackRegister(EUS
      +                          ART1_ReceiveISR);
  2289   0021BC  0EC2               	movlw	low _EUSART1_ReceiveISR
  2290   0021BE  6E0C               	movwf	EUSART1_RxCompleteCallbackRegister@callbackHandler^0,c
  2291   0021C0  0E1B               	movlw	high _EUSART1_ReceiveISR
  2292   0021C2  6E0D               	movwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+1)^0,c
  2293   0021C4  0E00               	movlw	low (_EUSART1_ReceiveISR shr (0+16))
  2294   0021C6  6E0E               	movwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+2)^0,c
  2295   0021C8  EC46  F012         	call	_EUSART1_RxCompleteCallbackRegister	;wreg free
  2296   0021CC                     
  2297                           ;mcc_generated_files/uart/src/eusart1.c: 114:     BAUD1CON = 0x48;
  2298   0021CC  0E48               	movlw	72
  2299   0021CE  6E9F               	movwf	159,c	;volatile
  2300   0021D0                     
  2301                           ;mcc_generated_files/uart/src/eusart1.c: 116:     RC1STA = 0x90;
  2302   0021D0  0E90               	movlw	144
  2303   0021D2  6E9D               	movwf	157,c	;volatile
  2304   0021D4                     
  2305                           ;mcc_generated_files/uart/src/eusart1.c: 118:     TX1STA = 0x26;
  2306   0021D4  0E26               	movlw	38
  2307   0021D6  6E9E               	movwf	158,c	;volatile
  2308   0021D8                     
  2309                           ;mcc_generated_files/uart/src/eusart1.c: 120:     SP1BRGL = 0x3;
  2310   0021D8  0E03               	movlw	3
  2311   0021DA  6E9B               	movwf	155,c	;volatile
  2312   0021DC                     
  2313                           ;mcc_generated_files/uart/src/eusart1.c: 122:     SP1BRGH = 0x1;
  2314   0021DC  0E01               	movlw	1
  2315   0021DE  6E9C               	movwf	156,c	;volatile
  2316   0021E0                     
  2317                           ;mcc_generated_files/uart/src/eusart1.c: 124:     EUSART1_FramingErrorCallbackRegister(E
      +                          USART1_DefaultFramingErrorCallback);
  2318   0021E0  0ED0               	movlw	low _EUSART1_DefaultFramingErrorCallback
  2319   0021E2  6E0C               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,c
  2320   0021E4  0E25               	movlw	high _EUSART1_DefaultFramingErrorCallback
  2321   0021E6  6E0D               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  2322   0021E8  0E00               	movlw	low (_EUSART1_DefaultFramingErrorCallback shr (0+16))
  2323   0021EA  6E0E               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,c
  2324   0021EC  EC68  F012         	call	_EUSART1_FramingErrorCallbackRegister	;wreg free
  2325   0021F0                     
  2326                           ;mcc_generated_files/uart/src/eusart1.c: 125:     EUSART1_OverrunErrorCallbackRegister(E
      +                          USART1_DefaultOverrunErrorCallback);
  2327   0021F0  0EBE               	movlw	low _EUSART1_DefaultOverrunErrorCallback
  2328   0021F2  6E0C               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,c
  2329   0021F4  0E25               	movlw	high _EUSART1_DefaultOverrunErrorCallback
  2330   0021F6  6E0D               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  2331   0021F8  0E00               	movlw	low (_EUSART1_DefaultOverrunErrorCallback shr (0+16))
  2332   0021FA  6E0E               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,c
  2333   0021FC  EC57  F012         	call	_EUSART1_OverrunErrorCallbackRegister	;wreg free
  2334   002200                     
  2335                           ;mcc_generated_files/uart/src/eusart1.c: 126:     eusart1RxLastError.status = 0;
  2336   002200  0E00               	movlw	0
  2337   002202  6E43               	movwf	(_eusart1RxLastError+1)^0,c	;volatile
  2338   002204  0E00               	movlw	0
  2339   002206  6E42               	movwf	_eusart1RxLastError^0,c	;volatile
  2340   002208                     
  2341                           ;mcc_generated_files/uart/src/eusart1.c: 128:     eusart1RxHead = 0;
  2342   002208  0E00               	movlw	0
  2343   00220A  6E4C               	movwf	_eusart1RxHead^0,c	;volatile
  2344   00220C                     
  2345                           ;mcc_generated_files/uart/src/eusart1.c: 129:     eusart1RxTail = 0;
  2346   00220C  0E00               	movlw	0
  2347   00220E  6E4B               	movwf	_eusart1RxTail^0,c	;volatile
  2348   002210                     
  2349                           ;mcc_generated_files/uart/src/eusart1.c: 130:     eusart1RxCount = 0;
  2350   002210  0E00               	movlw	0
  2351   002212  6E4A               	movwf	_eusart1RxCount^0,c	;volatile
  2352   002214                     
  2353                           ;mcc_generated_files/uart/src/eusart1.c: 132:     PIE3bits.RC1IE = 1;
  2354   002214  010E               	movlb	14	; () banked
  2355   002216  8BC5               	bsf	197,5,b	;volatile
  2356   002218                     
  2357                           ; BSR set to: 14
  2358   002218  0012               	return		;funcret
  2359   00221A                     __end_of_EUSART1_Initialize:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _EUSART1_RxCompleteCallbackRegister *****************
  2363 ;; Defined at:
  2364 ;;		line 352 in file "mcc_generated_files/uart/src/eusart1.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  callbackHand    3   11[COMRAM] PTR FTN()void 
  2367 ;;		 -> rxfunc(1), EUSART1_ReceiveISR(1), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;Total ram usage:        3 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 4
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_EUSART1_Initialize
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text17
  2395   00248C                     __ptext17:
  2396                           	callstack 0
  2397   00248C                     _EUSART1_RxCompleteCallbackRegister:
  2398                           	callstack 24
  2399   00248C                     
  2400                           ;mcc_generated_files/uart/src/eusart1.c: 352: void EUSART1_RxCompleteCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 353: {;mcc_generat
      +                          ed_files/uart/src/eusart1.c: 354:     if(((void*)0) != callbackHandler)
  2401   00248C  500C               	movf	EUSART1_RxCompleteCallbackRegister@callbackHandler^0,w,c
  2402   00248E  100D               	iorwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+1)^0,w,c
  2403   002490  100E               	iorwf	(EUSART1_RxCompleteCallbackRegister@callbackHandler+2)^0,w,c
  2404   002492  B4D8               	btfsc	status,2,c
  2405   002494  EF4E  F012         	goto	u1181
  2406   002498  EF50  F012         	goto	u1180
  2407   00249C                     u1181:
  2408   00249C  EF56  F012         	goto	l856
  2409   0024A0                     u1180:
  2410   0024A0                     
  2411                           ;mcc_generated_files/uart/src/eusart1.c: 355:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 356:        EUSART1_RxInterruptHandler = callbackHandler;
  2412   0024A0  C00C  F03B         	movff	EUSART1_RxCompleteCallbackRegister@callbackHandler,_EUSART1_RxInterruptHandler
  2413   0024A4  C00D  F03C         	movff	EUSART1_RxCompleteCallbackRegister@callbackHandler+1,_EUSART1_RxInterruptHandler+
      +                          1
  2414   0024A8  C00E  F03D         	movff	EUSART1_RxCompleteCallbackRegister@callbackHandler+2,_EUSART1_RxInterruptHandler+
      +                          2
  2415   0024AC                     l856:
  2416   0024AC  0012               	return		;funcret
  2417   0024AE                     __end_of_EUSART1_RxCompleteCallbackRegister:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _EUSART1_OverrunErrorCallbackRegister *****************
  2421 ;; Defined at:
  2422 ;;		line 344 in file "mcc_generated_files/uart/src/eusart1.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  callbackHand    3   11[COMRAM] PTR FTN()void 
  2425 ;;		 -> EUSART1_DefaultOverrunErrorCallback(1), 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2437 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;Total ram usage:        3 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 4
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_EUSART1_Initialize
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text18
  2452   0024AE                     __ptext18:
  2453                           	callstack 0
  2454   0024AE                     _EUSART1_OverrunErrorCallbackRegister:
  2455                           	callstack 24
  2456   0024AE                     
  2457                           ;mcc_generated_files/uart/src/eusart1.c: 344: void EUSART1_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 345: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 346:     if(((void*)0) != callbackHandler)
  2458   0024AE  500C               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  2459   0024B0  100D               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  2460   0024B2  100E               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,w,c
  2461   0024B4  B4D8               	btfsc	status,2,c
  2462   0024B6  EF5F  F012         	goto	u1201
  2463   0024BA  EF61  F012         	goto	u1200
  2464   0024BE                     u1201:
  2465   0024BE  EF67  F012         	goto	l852
  2466   0024C2                     u1200:
  2467   0024C2                     
  2468                           ;mcc_generated_files/uart/src/eusart1.c: 347:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 348:         EUSART1_OverrunErrorHandler = callbackHandler;
  2469   0024C2  C00C  F029         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler,_EUSART1_OverrunErrorHandler
  2470   0024C6  C00D  F02A         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART1_OverrunErrorHandl
      +                          er+1
  2471   0024CA  C00E  F02B         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+2,_EUSART1_OverrunErrorHandl
      +                          er+2
  2472   0024CE                     l852:
  2473   0024CE  0012               	return		;funcret
  2474   0024D0                     __end_of_EUSART1_OverrunErrorCallbackRegister:
  2475                           	callstack 0
  2476                           
  2477 ;; *************** function _EUSART1_FramingErrorCallbackRegister *****************
  2478 ;; Defined at:
  2479 ;;		line 336 in file "mcc_generated_files/uart/src/eusart1.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  callbackHand    3   11[COMRAM] PTR FTN()void 
  2482 ;;		 -> EUSART1_DefaultFramingErrorCallback(1), 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2494 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;Total ram usage:        3 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; Hardware stack levels required when called: 4
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_EUSART1_Initialize
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text19
  2509   0024D0                     __ptext19:
  2510                           	callstack 0
  2511   0024D0                     _EUSART1_FramingErrorCallbackRegister:
  2512                           	callstack 24
  2513   0024D0                     
  2514                           ;mcc_generated_files/uart/src/eusart1.c: 336: void EUSART1_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 337: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 338:     if(((void*)0) != callbackHandler)
  2515   0024D0  500C               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,w,c
  2516   0024D2  100D               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  2517   0024D4  100E               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,w,c
  2518   0024D6  B4D8               	btfsc	status,2,c
  2519   0024D8  EF70  F012         	goto	u1191
  2520   0024DC  EF72  F012         	goto	u1190
  2521   0024E0                     u1191:
  2522   0024E0  EF78  F012         	goto	l848
  2523   0024E4                     u1190:
  2524   0024E4                     
  2525                           ;mcc_generated_files/uart/src/eusart1.c: 339:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 340:         EUSART1_FramingErrorHandler = callbackHandler;
  2526   0024E4  C00C  F02C         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler,_EUSART1_FramingErrorHandler
  2527   0024E8  C00D  F02D         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+1,_EUSART1_FramingErrorHandl
      +                          er+1
  2528   0024EC  C00E  F02E         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+2,_EUSART1_FramingErrorHandl
      +                          er+2
  2529   0024F0                     l848:
  2530   0024F0  0012               	return		;funcret
  2531   0024F2                     __end_of_EUSART1_FramingErrorCallbackRegister:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _CLOCK_Initialize *****************
  2535 ;; Defined at:
  2536 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 4
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_SYSTEM_Initialize
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text20
  2565   00255C                     __ptext20:
  2566                           	callstack 0
  2567   00255C                     _CLOCK_Initialize:
  2568                           	callstack 25
  2569   00255C                     
  2570                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  2571   00255C  0E70               	movlw	112
  2572   00255E  010E               	movlb	14	; () banked
  2573   002560  6FD8               	movwf	216,b	;volatile
  2574                           
  2575                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
  2576   002562  0E00               	movlw	0
  2577   002564  6FDA               	movwf	218,b	;volatile
  2578                           
  2579                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
  2580   002566  0E00               	movlw	0
  2581   002568  6FDC               	movwf	220,b	;volatile
  2582                           
  2583                           ;mcc_generated_files/system/src/clock.c: 52:     OSCFRQ = (8 << 0x0);
  2584   00256A  0E08               	movlw	8
  2585   00256C  6FDE               	movwf	222,b	;volatile
  2586                           
  2587                           ;mcc_generated_files/system/src/clock.c: 53:     OSCTUNE = (0 << 0x0);
  2588   00256E  0E00               	movlw	0
  2589   002570  6FDD               	movwf	221,b	;volatile
  2590   002572                     
  2591                           ; BSR set to: 14
  2592   002572  0012               	return		;funcret
  2593   002574                     __end_of_CLOCK_Initialize:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _ADCC_Initialize *****************
  2597 ;; Defined at:
  2598 ;;		line 45 in file "mcc_generated_files/adc/src/adcc.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 4
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_SYSTEM_Initialize
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text21
  2627   00221A                     __ptext21:
  2628                           	callstack 0
  2629   00221A                     _ADCC_Initialize:
  2630                           	callstack 25
  2631   00221A                     
  2632                           ;mcc_generated_files/adc/src/adcc.c: 49:     ADLTHL = 0x0;
  2633   00221A  0E00               	movlw	0
  2634   00221C  6E6A               	movwf	106,c	;volatile
  2635                           
  2636                           ;mcc_generated_files/adc/src/adcc.c: 51:     ADLTHH = 0x0;
  2637   00221E  0E00               	movlw	0
  2638   002220  6E6B               	movwf	107,c	;volatile
  2639                           
  2640                           ;mcc_generated_files/adc/src/adcc.c: 53:     ADUTHL = 0x0;
  2641   002222  0E00               	movlw	0
  2642   002224  6E6C               	movwf	108,c	;volatile
  2643                           
  2644                           ;mcc_generated_files/adc/src/adcc.c: 55:     ADUTHH = 0x0;
  2645   002226  0E00               	movlw	0
  2646   002228  6E6D               	movwf	109,c	;volatile
  2647                           
  2648                           ;mcc_generated_files/adc/src/adcc.c: 57:     ADSTPTL = 0x0;
  2649   00222A  0E00               	movlw	0
  2650   00222C  6E68               	movwf	104,c	;volatile
  2651                           
  2652                           ;mcc_generated_files/adc/src/adcc.c: 59:     ADSTPTH = 0x0;
  2653   00222E  0E00               	movlw	0
  2654   002230  6E69               	movwf	105,c	;volatile
  2655                           
  2656                           ;mcc_generated_files/adc/src/adcc.c: 61:     ADRPT = 0x0;
  2657   002232  0E00               	movlw	0
  2658   002234  6E66               	movwf	102,c	;volatile
  2659                           
  2660                           ;mcc_generated_files/adc/src/adcc.c: 63:     ADPCH = 0x0;
  2661   002236  0E00               	movlw	0
  2662   002238  010F               	movlb	15	; () banked
  2663   00223A  6F5F               	movwf	95,b	;volatile
  2664                           
  2665                           ;mcc_generated_files/adc/src/adcc.c: 65:     ADCAP = 0x0;
  2666   00223C  0E00               	movlw	0
  2667   00223E  6F5D               	movwf	93,b	;volatile
  2668                           
  2669                           ;mcc_generated_files/adc/src/adcc.c: 67:     ADPRE = 0x0;
  2670   002240  0E00               	movlw	0
  2671   002242  6F5E               	movwf	94,b	;volatile
  2672                           
  2673                           ;mcc_generated_files/adc/src/adcc.c: 69:     ADCON1 = 0x0;
  2674   002244  0E00               	movlw	0
  2675   002246  6F59               	movwf	89,b	;volatile
  2676                           
  2677                           ;mcc_generated_files/adc/src/adcc.c: 71:     ADCON2 = 0x0;
  2678   002248  0E00               	movlw	0
  2679   00224A  6F5A               	movwf	90,b	;volatile
  2680                           
  2681                           ;mcc_generated_files/adc/src/adcc.c: 73:     ADCON3 = 0x0;
  2682   00224C  0E00               	movlw	0
  2683   00224E  6F5B               	movwf	91,b	;volatile
  2684                           
  2685                           ;mcc_generated_files/adc/src/adcc.c: 75:     ADSTAT = 0x0;
  2686   002250  0E00               	movlw	0
  2687   002252  6E65               	movwf	101,c	;volatile
  2688                           
  2689                           ;mcc_generated_files/adc/src/adcc.c: 77:     ADREF = 0x0;
  2690   002254  0E00               	movlw	0
  2691   002256  6F58               	movwf	88,b	;volatile
  2692                           
  2693                           ;mcc_generated_files/adc/src/adcc.c: 79:     ADACT = 0x0;
  2694   002258  0E00               	movlw	0
  2695   00225A  6F56               	movwf	86,b	;volatile
  2696                           
  2697                           ;mcc_generated_files/adc/src/adcc.c: 81:     ADCLK = 0x9;
  2698   00225C  0E09               	movlw	9
  2699   00225E  6F57               	movwf	87,b	;volatile
  2700                           
  2701                           ;mcc_generated_files/adc/src/adcc.c: 83:     ADCON0 = 0x85;
  2702   002260  0E85               	movlw	133
  2703   002262  6E60               	movwf	96,c	;volatile
  2704                           
  2705                           ;mcc_generated_files/adc/src/adcc.c: 85:     ADACQ = 0x0;
  2706   002264  0E00               	movlw	0
  2707   002266  6F5C               	movwf	92,b	;volatile
  2708   002268                     
  2709                           ; BSR set to: 15
  2710                           ;mcc_generated_files/adc/src/adcc.c: 88:     PIR1bits.ADIF = 0;
  2711   002268  010E               	movlb	14	; () banked
  2712   00226A  91CB               	bcf	203,0,b	;volatile
  2713   00226C                     
  2714                           ; BSR set to: 14
  2715                           ;mcc_generated_files/adc/src/adcc.c: 91:     PIR1bits.ADTIF = 0;
  2716   00226C  93CB               	bcf	203,1,b	;volatile
  2717   00226E                     
  2718                           ; BSR set to: 14
  2719   00226E  0012               	return		;funcret
  2720   002270                     __end_of_ADCC_Initialize:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _DecodePacket *****************
  2724 ;; Defined at:
  2725 ;;		line 79 in file "libs/modbus.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 6
  2746 ;; This function calls:
  2747 ;;		_CheckCRC
  2748 ;;		_PresetSR
  2749 ;;		_ReadCoil
  2750 ;;		_ReadDI
  2751 ;;		_ReadHR
  2752 ;;		_ReadIR
  2753 ;;		_WriteCoil
  2754 ;;		_WriteMultiCoil
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text22
  2761   001EE4                     __ptext22:
  2762                           	callstack 0
  2763   001EE4                     _DecodePacket:
  2764                           	callstack 24
  2765   001EE4                     
  2766                           ;libs/modbus.c: 80:      if(received[0] == 0x25){
  2767   001EE4  0E25               	movlw	37
  2768   001EE6  0102               	movlb	2	; () banked
  2769   001EE8  1900               	xorwf	_received& (0+255),w,b	;volatile
  2770   001EEA  A4D8               	btfss	status,2,c
  2771   001EEC  EF7A  F00F         	goto	u1711
  2772   001EF0  EF7C  F00F         	goto	u1710
  2773   001EF4                     u1711:
  2774   001EF4  EFC8  F00F         	goto	l3660
  2775   001EF8                     u1710:
  2776   001EF8                     
  2777                           ; BSR set to: 2
  2778                           ;libs/modbus.c: 81:           if(CheckCRC()){
  2779   001EF8  EC70  F00D         	call	_CheckCRC	;wreg free
  2780   001EFC  0900               	iorlw	0
  2781   001EFE  B4D8               	btfsc	status,2,c
  2782   001F00  EF84  F00F         	goto	u1721
  2783   001F04  EF86  F00F         	goto	u1720
  2784   001F08                     u1721:
  2785   001F08  EFC8  F00F         	goto	l3660
  2786   001F0C                     u1720:
  2787   001F0C  EFA4  F00F         	goto	l3658
  2788   001F10                     l3642:
  2789                           
  2790                           ; BSR set to: 2
  2791                           ;libs/modbus.c: 84:                          ReadCoil();
  2792   001F10  ECBB  F007         	call	_ReadCoil	;wreg free
  2793                           
  2794                           ;libs/modbus.c: 85:                          break;
  2795   001F14  EFC8  F00F         	goto	l3660
  2796   001F18                     l3644:
  2797                           
  2798                           ; BSR set to: 2
  2799                           ;libs/modbus.c: 87:                          ReadDI();
  2800   001F18  ECC8  F008         	call	_ReadDI	;wreg free
  2801                           
  2802                           ;libs/modbus.c: 88:                          break;
  2803   001F1C  EFC8  F00F         	goto	l3660
  2804   001F20                     l3646:
  2805                           
  2806                           ; BSR set to: 2
  2807                           ;libs/modbus.c: 90:                          ReadHR();
  2808   001F20  ECD4  F009         	call	_ReadHR	;wreg free
  2809                           
  2810                           ;libs/modbus.c: 91:                          break;
  2811   001F24  EFC8  F00F         	goto	l3660
  2812   001F28                     l3648:
  2813                           
  2814                           ; BSR set to: 2
  2815                           ;libs/modbus.c: 93:                          ReadIR();
  2816   001F28  ECAF  F00A         	call	_ReadIR	;wreg free
  2817                           
  2818                           ;libs/modbus.c: 94:                          break;
  2819   001F2C  EFC8  F00F         	goto	l3660
  2820   001F30                     l3650:
  2821                           
  2822                           ; BSR set to: 2
  2823                           ;libs/modbus.c: 96:                          WriteCoil();
  2824   001F30  EC43  F00C         	call	_WriteCoil	;wreg free
  2825                           
  2826                           ;libs/modbus.c: 97:                          break;
  2827   001F34  EFC8  F00F         	goto	l3660
  2828   001F38                     l3652:
  2829                           
  2830                           ; BSR set to: 2
  2831                           ;libs/modbus.c: 99:                          PresetSR();
  2832   001F38  ECDA  F00C         	call	_PresetSR	;wreg free
  2833                           
  2834                           ;libs/modbus.c: 100:                          break;
  2835   001F3C  EFC8  F00F         	goto	l3660
  2836   001F40                     l3654:
  2837                           
  2838                           ; BSR set to: 2
  2839                           ;libs/modbus.c: 102:                          WriteMultiCoil();
  2840   001F40  EC7B  F00B         	call	_WriteMultiCoil	;wreg free
  2841                           
  2842                           ;libs/modbus.c: 103:                          break;
  2843   001F44  EFC8  F00F         	goto	l3660
  2844   001F48                     l3658:
  2845   001F48  0102               	movlb	2	; () banked
  2846   001F4A  5101               	movf	(_received+1)& (0+255),w,b	;volatile
  2847                           
  2848                           ; Switch size 1, requested type "simple"
  2849                           ; Number of cases is 8, Range of values is 1 to 16
  2850                           ; switch strategies available:
  2851                           ; Name         Instructions Cycles
  2852                           ; simple_byte           25    13 (average)
  2853                           ;	Chosen strategy is simple_byte
  2854   001F4C  0A01               	xorlw	1	; case 1
  2855   001F4E  B4D8               	btfsc	status,2,c
  2856   001F50  EF88  F00F         	goto	l3642
  2857   001F54  0A03               	xorlw	3	; case 2
  2858   001F56  B4D8               	btfsc	status,2,c
  2859   001F58  EF8C  F00F         	goto	l3644
  2860   001F5C  0A01               	xorlw	1	; case 3
  2861   001F5E  B4D8               	btfsc	status,2,c
  2862   001F60  EF90  F00F         	goto	l3646
  2863   001F64  0A07               	xorlw	7	; case 4
  2864   001F66  B4D8               	btfsc	status,2,c
  2865   001F68  EF94  F00F         	goto	l3648
  2866   001F6C  0A01               	xorlw	1	; case 5
  2867   001F6E  B4D8               	btfsc	status,2,c
  2868   001F70  EF98  F00F         	goto	l3650
  2869   001F74  0A03               	xorlw	3	; case 6
  2870   001F76  B4D8               	btfsc	status,2,c
  2871   001F78  EF9C  F00F         	goto	l3652
  2872   001F7C  0A09               	xorlw	9	; case 15
  2873   001F7E  B4D8               	btfsc	status,2,c
  2874   001F80  EFA0  F00F         	goto	l3654
  2875   001F84  0A1F               	xorlw	31	; case 16
  2876   001F86  B4D8               	btfsc	status,2,c
  2877   001F88  EFC8  F00F         	goto	l70
  2878   001F8C  EFC8  F00F         	goto	l70
  2879   001F90                     l70:
  2880   001F90                     l3660:
  2881                           
  2882                           ;libs/modbus.c: 111:      ModbusMessage = 0;
  2883   001F90  0E00               	movlw	0
  2884   001F92  6E4E               	movwf	_ModbusMessage^0,c	;volatile
  2885   001F94  0012               	return		;funcret
  2886   001F96                     __end_of_DecodePacket:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _WriteMultiCoil *****************
  2890 ;; Defined at:
  2891 ;;		line 498 in file "libs/modbus.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  QtCoils         2   37[COMRAM] unsigned short 
  2896 ;;  Address         2   35[COMRAM] unsigned short 
  2897 ;;  CRC             2   28[COMRAM] unsigned short 
  2898 ;;  AddressHigh     2   25[COMRAM] unsigned short 
  2899 ;;  AddressLow      2   23[COMRAM] unsigned short 
  2900 ;;  i               1   39[COMRAM] unsigned char 
  2901 ;;  k               1   34[COMRAM] unsigned char 
  2902 ;;  length          1   33[COMRAM] unsigned char 
  2903 ;;  l               1   32[COMRAM] unsigned char 
  2904 ;;  QtBytes         1   27[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;Total ram usage:       19 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 5
  2921 ;; This function calls:
  2922 ;;		_CalculateCRC
  2923 ;;		_ClearResponse
  2924 ;;		___awdiv
  2925 ;; This function is called by:
  2926 ;;		_DecodePacket
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text23
  2931   0016F6                     __ptext23:
  2932                           	callstack 0
  2933   0016F6                     _WriteMultiCoil:
  2934                           	callstack 24
  2935   0016F6                     
  2936                           ;libs/modbus.c: 501:      uint16_t AddressLow = 0;
  2937   0016F6  0E00               	movlw	0
  2938   0016F8  6E19               	movwf	(WriteMultiCoil@AddressLow+1)^0,c
  2939   0016FA  0E00               	movlw	0
  2940   0016FC  6E18               	movwf	WriteMultiCoil@AddressLow^0,c
  2941                           
  2942                           ;libs/modbus.c: 502:      uint16_t AddressHigh = 0;
  2943   0016FE  0E00               	movlw	0
  2944   001700  6E1B               	movwf	(WriteMultiCoil@AddressHigh+1)^0,c
  2945   001702  0E00               	movlw	0
  2946   001704  6E1A               	movwf	WriteMultiCoil@AddressHigh^0,c
  2947                           
  2948                           ;libs/modbus.c: 504:      uint16_t QtCoils = 0;
  2949   001706  0E00               	movlw	0
  2950   001708  6E27               	movwf	(WriteMultiCoil@QtCoils+1)^0,c
  2951   00170A  0E00               	movlw	0
  2952   00170C  6E26               	movwf	WriteMultiCoil@QtCoils^0,c
  2953                           
  2954                           ;libs/modbus.c: 505:      uint8_t QtBytes = 0;
  2955   00170E  0E00               	movlw	0
  2956   001710  6E1C               	movwf	WriteMultiCoil@QtBytes^0,c
  2957                           
  2958                           ;libs/modbus.c: 507:      uint8_t length = 0;
  2959   001712  0E00               	movlw	0
  2960   001714  6E22               	movwf	WriteMultiCoil@length^0,c
  2961                           
  2962                           ;libs/modbus.c: 508:      uint8_t i,l,k = 0;
  2963   001716  0E00               	movlw	0
  2964   001718  6E23               	movwf	WriteMultiCoil@k^0,c
  2965                           
  2966                           ;libs/modbus.c: 509:      uint16_t CRC = 0;
  2967   00171A  0E00               	movlw	0
  2968   00171C  6E1E               	movwf	(WriteMultiCoil@CRC+1)^0,c
  2969   00171E  0E00               	movlw	0
  2970   001720  6E1D               	movwf	WriteMultiCoil@CRC^0,c
  2971   001722                     
  2972                           ;libs/modbus.c: 511:      Address = received[2];
  2973   001722  C202  F024         	movff	_received+2,WriteMultiCoil@Address	;volatile
  2974   001726  6A25               	clrf	(WriteMultiCoil@Address+1)^0,c
  2975                           
  2976                           ;libs/modbus.c: 512:      Address = (Address << 8) | received[3];
  2977   001728  5024               	movf	WriteMultiCoil@Address^0,w,c
  2978   00172A  6E16               	movwf	??_WriteMultiCoil^0,c
  2979   00172C  0102               	movlb	2	; () banked
  2980   00172E  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  2981   001730  6E24               	movwf	WriteMultiCoil@Address^0,c
  2982   001732  C016  F025         	movff	??_WriteMultiCoil,WriteMultiCoil@Address+1
  2983   001736                     
  2984                           ; BSR set to: 2
  2985                           ;libs/modbus.c: 514:      QtCoils = received[4];
  2986   001736  C204  F026         	movff	_received+4,WriteMultiCoil@QtCoils	;volatile
  2987   00173A  6A27               	clrf	(WriteMultiCoil@QtCoils+1)^0,c
  2988                           
  2989                           ;libs/modbus.c: 515:      QtCoils = (QtCoils << 8) | received[5];
  2990   00173C  5026               	movf	WriteMultiCoil@QtCoils^0,w,c
  2991   00173E  6E16               	movwf	??_WriteMultiCoil^0,c
  2992   001740  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  2993   001742  6E26               	movwf	WriteMultiCoil@QtCoils^0,c
  2994   001744  C016  F027         	movff	??_WriteMultiCoil,WriteMultiCoil@QtCoils+1
  2995   001748                     
  2996                           ; BSR set to: 2
  2997                           ;libs/modbus.c: 516:      QtBytes = QtCoils / 8;
  2998   001748  C026  F016         	movff	WriteMultiCoil@QtCoils,??_WriteMultiCoil
  2999   00174C  C027  F017         	movff	WriteMultiCoil@QtCoils+1,??_WriteMultiCoil+1
  3000   001750  90D8               	bcf	status,0,c
  3001   001752  3217               	rrcf	(??_WriteMultiCoil+1)^0,f,c
  3002   001754  3216               	rrcf	??_WriteMultiCoil^0,f,c
  3003   001756  90D8               	bcf	status,0,c
  3004   001758  3217               	rrcf	(??_WriteMultiCoil+1)^0,f,c
  3005   00175A  3216               	rrcf	??_WriteMultiCoil^0,f,c
  3006   00175C  90D8               	bcf	status,0,c
  3007   00175E  3217               	rrcf	(??_WriteMultiCoil+1)^0,f,c
  3008   001760  3216               	rrcf	??_WriteMultiCoil^0,f,c
  3009   001762  5016               	movf	??_WriteMultiCoil^0,w,c
  3010   001764  6E1C               	movwf	WriteMultiCoil@QtBytes^0,c
  3011   001766                     
  3012                           ; BSR set to: 2
  3013                           ;libs/modbus.c: 517:      if(QtCoils % 8){
  3014   001766  0E07               	movlw	7
  3015   001768  1426               	andwf	WriteMultiCoil@QtCoils^0,w,c
  3016   00176A  6E16               	movwf	??_WriteMultiCoil^0,c
  3017   00176C  0E00               	movlw	0
  3018   00176E  1427               	andwf	(WriteMultiCoil@QtCoils+1)^0,w,c
  3019   001770  6E17               	movwf	(??_WriteMultiCoil+1)^0,c
  3020   001772  5016               	movf	??_WriteMultiCoil^0,w,c
  3021   001774  1017               	iorwf	(??_WriteMultiCoil+1)^0,w,c
  3022   001776  B4D8               	btfsc	status,2,c
  3023   001778  EFC0  F00B         	goto	u1641
  3024   00177C  EFC2  F00B         	goto	u1640
  3025   001780                     u1641:
  3026   001780  EFC3  F00B         	goto	l3472
  3027   001784                     u1640:
  3028   001784                     
  3029                           ; BSR set to: 2
  3030                           ;libs/modbus.c: 518:           QtBytes += 1;
  3031   001784  2A1C               	incf	WriteMultiCoil@QtBytes^0,f,c
  3032   001786                     l3472:
  3033                           
  3034                           ; BSR set to: 2
  3035                           ;libs/modbus.c: 521:      for(i = 0; i < QtCoils; i++){
  3036   001786  0E00               	movlw	0
  3037   001788  6E28               	movwf	WriteMultiCoil@i^0,c
  3038   00178A  EFFF  F00B         	goto	l3488
  3039   00178E                     l3474:
  3040                           
  3041                           ;libs/modbus.c: 522:           l = i / 8;
  3042   00178E  C028  F00C         	movff	WriteMultiCoil@i,___awdiv@dividend
  3043   001792  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  3044   001794  0E00               	movlw	0
  3045   001796  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  3046   001798  0E08               	movlw	8
  3047   00179A  6E0E               	movwf	___awdiv@divisor^0,c
  3048   00179C  ECB4  F00E         	call	___awdiv	;wreg free
  3049   0017A0  500C               	movf	?___awdiv^0,w,c
  3050   0017A2  6E21               	movwf	WriteMultiCoil@l^0,c
  3051   0017A4                     
  3052                           ;libs/modbus.c: 523:           k = i % 8;
  3053   0017A4  5028               	movf	WriteMultiCoil@i^0,w,c
  3054   0017A6  0B07               	andlw	7
  3055   0017A8  6E23               	movwf	WriteMultiCoil@k^0,c
  3056   0017AA                     
  3057                           ;libs/modbus.c: 524:           Coils[Address + i] = ((received[7 + l] >> k) & 0x01) ? 0x
      +                          FF:0x00;
  3058   0017AA  C023  F016         	movff	WriteMultiCoil@k,??_WriteMultiCoil
  3059   0017AE  0E07               	movlw	low (_received+7)
  3060   0017B0  2421               	addwf	WriteMultiCoil@l^0,w,c
  3061   0017B2  6ED9               	movwf	fsr2l,c
  3062   0017B4  6ADA               	clrf	fsr2h,c
  3063   0017B6  0E02               	movlw	high (_received+7)
  3064   0017B8  22DA               	addwfc	fsr2h,f,c
  3065   0017BA  50DF               	movf	indf2,w,c
  3066   0017BC  6E17               	movwf	(??_WriteMultiCoil+1)^0,c
  3067   0017BE  2A16               	incf	??_WriteMultiCoil^0,f,c
  3068   0017C0  EFE4  F00B         	goto	u1654
  3069   0017C4                     u1655:
  3070   0017C4  90D8               	bcf	status,0,c
  3071   0017C6  3217               	rrcf	(??_WriteMultiCoil+1)^0,f,c
  3072   0017C8                     u1654:
  3073   0017C8  2E16               	decfsz	??_WriteMultiCoil^0,f,c
  3074   0017CA  EFE2  F00B         	goto	u1655
  3075   0017CE  B017               	btfsc	(??_WriteMultiCoil+1)^0,0,c
  3076   0017D0  EFEC  F00B         	goto	u1661
  3077   0017D4  EFEE  F00B         	goto	u1660
  3078   0017D8                     u1661:
  3079   0017D8  EFF4  F00B         	goto	l3482
  3080   0017DC                     u1660:
  3081   0017DC  0E00               	movlw	0
  3082   0017DE  6E20               	movwf	(_WriteMultiCoil$176+1)^0,c
  3083   0017E0  0E00               	movlw	0
  3084   0017E2  6E1F               	movwf	_WriteMultiCoil$176^0,c
  3085   0017E4  EFF7  F00B         	goto	l3484
  3086   0017E8                     l3482:
  3087   0017E8  0E00               	movlw	0
  3088   0017EA  6E20               	movwf	(_WriteMultiCoil$176+1)^0,c
  3089   0017EC  681F               	setf	_WriteMultiCoil$176^0,c
  3090   0017EE                     l3484:
  3091   0017EE  5028               	movf	WriteMultiCoil@i^0,w,c
  3092   0017F0  0F92               	addlw	low _Coils
  3093   0017F2  2424               	addwf	WriteMultiCoil@Address^0,w,c
  3094   0017F4  6ED9               	movwf	fsr2l,c
  3095   0017F6  6ADA               	clrf	fsr2h,c
  3096   0017F8  C01F  FFDF         	movff	_WriteMultiCoil$176,indf2
  3097   0017FC                     
  3098                           ;libs/modbus.c: 525:      }
  3099   0017FC  2A28               	incf	WriteMultiCoil@i^0,f,c
  3100   0017FE                     l3488:
  3101   0017FE  5028               	movf	WriteMultiCoil@i^0,w,c
  3102   001800  6E16               	movwf	??_WriteMultiCoil^0,c
  3103   001802  6A17               	clrf	(??_WriteMultiCoil+1)^0,c
  3104   001804  5026               	movf	WriteMultiCoil@QtCoils^0,w,c
  3105   001806  5C16               	subwf	??_WriteMultiCoil^0,w,c
  3106   001808  5027               	movf	(WriteMultiCoil@QtCoils+1)^0,w,c
  3107   00180A  5817               	subwfb	(??_WriteMultiCoil+1)^0,w,c
  3108   00180C  A0D8               	btfss	status,0,c
  3109   00180E  EF0B  F00C         	goto	u1671
  3110   001812  EF0D  F00C         	goto	u1670
  3111   001816                     u1671:
  3112   001816  EFC7  F00B         	goto	l3474
  3113   00181A                     u1670:
  3114   00181A                     
  3115                           ;libs/modbus.c: 527:      response[0] = received[0];
  3116   00181A  C200  F100         	movff	_received,_response	;volatile
  3117                           
  3118                           ;libs/modbus.c: 528:      response[1] = received[1];
  3119   00181E  C201  F101         	movff	_received+1,_response+1	;volatile
  3120                           
  3121                           ;libs/modbus.c: 529:      response[2] = received[2];
  3122   001822  C202  F102         	movff	_received+2,_response+2	;volatile
  3123                           
  3124                           ;libs/modbus.c: 530:      response[3] = received[3];
  3125   001826  C203  F103         	movff	_received+3,_response+3	;volatile
  3126                           
  3127                           ;libs/modbus.c: 531:      response[4] = received[4];
  3128   00182A  C204  F104         	movff	_received+4,_response+4	;volatile
  3129                           
  3130                           ;libs/modbus.c: 532:      response[5] = received[5];
  3131   00182E  C205  F105         	movff	_received+5,_response+5	;volatile
  3132   001832                     
  3133                           ;libs/modbus.c: 534:      CRC = CalculateCRC(response, length);
  3134   001832  0E00               	movlw	low _response
  3135   001834  6E0C               	movwf	CalculateCRC@string^0,c
  3136   001836  0E01               	movlw	high _response
  3137   001838  6E0D               	movwf	(CalculateCRC@string+1)^0,c
  3138   00183A  0E00               	movlw	0
  3139   00183C  6E0F               	movwf	(CalculateCRC@_long+1)^0,c
  3140   00183E  0E06               	movlw	6
  3141   001840  6E0E               	movwf	CalculateCRC@_long^0,c
  3142   001842  ECCB  F00F         	call	_CalculateCRC	;wreg free
  3143   001846  C00C  F01D         	movff	?_CalculateCRC,WriteMultiCoil@CRC
  3144   00184A  C00D  F01E         	movff	?_CalculateCRC+1,WriteMultiCoil@CRC+1
  3145   00184E                     
  3146                           ;libs/modbus.c: 535:      response[6] = CRC << 8;
  3147   00184E  0E00               	movlw	0
  3148   001850  0101               	movlb	1	; () banked
  3149   001852  6F06               	movwf	(_response+6)& (0+255),b	;volatile
  3150   001854                     
  3151                           ; BSR set to: 1
  3152                           ;libs/modbus.c: 536:      response[7] = CRC;
  3153   001854  C01D  F107         	movff	WriteMultiCoil@CRC,_response+7	;volatile
  3154   001858                     
  3155                           ; BSR set to: 1
  3156                           ;libs/modbus.c: 537:      for(i = 0; i != 9; i++){
  3157   001858  0E00               	movlw	0
  3158   00185A  6E28               	movwf	WriteMultiCoil@i^0,c
  3159   00185C                     l3504:
  3160                           
  3161                           ;libs/modbus.c: 538:           TX1REG = response[i];
  3162   00185C  0E00               	movlw	low _response
  3163   00185E  2428               	addwf	WriteMultiCoil@i^0,w,c
  3164   001860  6ED9               	movwf	fsr2l,c
  3165   001862  6ADA               	clrf	fsr2h,c
  3166   001864  0E01               	movlw	high _response
  3167   001866  22DA               	addwfc	fsr2h,f,c
  3168   001868  50DF               	movf	indf2,w,c
  3169   00186A  6E9A               	movwf	154,c	;volatile
  3170   00186C                     
  3171                           ;libs/modbus.c: 539:      }
  3172   00186C  2A28               	incf	WriteMultiCoil@i^0,f,c
  3173   00186E  0E09               	movlw	9
  3174   001870  1828               	xorwf	WriteMultiCoil@i^0,w,c
  3175   001872  A4D8               	btfss	status,2,c
  3176   001874  EF3E  F00C         	goto	u1681
  3177   001878  EF40  F00C         	goto	u1680
  3178   00187C                     u1681:
  3179   00187C  EF2E  F00C         	goto	l3504
  3180   001880                     u1680:
  3181   001880                     
  3182                           ;libs/modbus.c: 540:      ClearResponse();
  3183   001880  EC1B  F012         	call	_ClearResponse	;wreg free
  3184   001884  0012               	return		;funcret
  3185   001886                     __end_of_WriteMultiCoil:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function ___awdiv *****************
  3189 ;; Defined at:
  3190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  dividend        2   11[COMRAM] int 
  3193 ;;  divisor         2   13[COMRAM] int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  quotient        2   17[COMRAM] int 
  3196 ;;  sign            1   16[COMRAM] unsigned char 
  3197 ;;  counter         1   15[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  2   11[COMRAM] int 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3211 ;;Total ram usage:        8 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 4
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_WriteMultiCoil
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text24
  3222   001D68                     __ptext24:
  3223                           	callstack 0
  3224   001D68                     ___awdiv:
  3225                           	callstack 24
  3226   001D68  0E00               	movlw	0
  3227   001D6A  6E11               	movwf	___awdiv@sign^0,c
  3228   001D6C  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  3229   001D6E  EFBD  F00E         	goto	u1210
  3230   001D72  EFBB  F00E         	goto	u1211
  3231   001D76                     u1211:
  3232   001D76  EFC3  F00E         	goto	l2964
  3233   001D7A                     u1210:
  3234   001D7A  6C0E               	negf	___awdiv@divisor^0,c
  3235   001D7C  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  3236   001D7E  B0D8               	btfsc	status,0,c
  3237   001D80  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  3238   001D82  0E01               	movlw	1
  3239   001D84  6E11               	movwf	___awdiv@sign^0,c
  3240   001D86                     l2964:
  3241   001D86  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  3242   001D88  EFCA  F00E         	goto	u1220
  3243   001D8C  EFC8  F00E         	goto	u1221
  3244   001D90                     u1221:
  3245   001D90  EFD0  F00E         	goto	l2970
  3246   001D94                     u1220:
  3247   001D94  6C0C               	negf	___awdiv@dividend^0,c
  3248   001D96  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  3249   001D98  B0D8               	btfsc	status,0,c
  3250   001D9A  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  3251   001D9C  0E01               	movlw	1
  3252   001D9E  1A11               	xorwf	___awdiv@sign^0,f,c
  3253   001DA0                     l2970:
  3254   001DA0  0E00               	movlw	0
  3255   001DA2  6E13               	movwf	(___awdiv@quotient+1)^0,c
  3256   001DA4  0E00               	movlw	0
  3257   001DA6  6E12               	movwf	___awdiv@quotient^0,c
  3258   001DA8  500E               	movf	___awdiv@divisor^0,w,c
  3259   001DAA  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  3260   001DAC  B4D8               	btfsc	status,2,c
  3261   001DAE  EFDB  F00E         	goto	u1231
  3262   001DB2  EFDD  F00E         	goto	u1230
  3263   001DB6                     u1231:
  3264   001DB6  EF05  F00F         	goto	l2992
  3265   001DBA                     u1230:
  3266   001DBA  0E01               	movlw	1
  3267   001DBC  6E10               	movwf	___awdiv@counter^0,c
  3268   001DBE  EFE5  F00E         	goto	l2978
  3269   001DC2                     l2976:
  3270   001DC2  90D8               	bcf	status,0,c
  3271   001DC4  360E               	rlcf	___awdiv@divisor^0,f,c
  3272   001DC6  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  3273   001DC8  2A10               	incf	___awdiv@counter^0,f,c
  3274   001DCA                     l2978:
  3275   001DCA  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  3276   001DCC  EFEA  F00E         	goto	u1241
  3277   001DD0  EFEC  F00E         	goto	u1240
  3278   001DD4                     u1241:
  3279   001DD4  EFE1  F00E         	goto	l2976
  3280   001DD8                     u1240:
  3281   001DD8                     l2980:
  3282   001DD8  90D8               	bcf	status,0,c
  3283   001DDA  3612               	rlcf	___awdiv@quotient^0,f,c
  3284   001DDC  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  3285   001DDE  500E               	movf	___awdiv@divisor^0,w,c
  3286   001DE0  5C0C               	subwf	___awdiv@dividend^0,w,c
  3287   001DE2  500F               	movf	(___awdiv@divisor+1)^0,w,c
  3288   001DE4  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  3289   001DE6  A0D8               	btfss	status,0,c
  3290   001DE8  EFF8  F00E         	goto	u1251
  3291   001DEC  EFFA  F00E         	goto	u1250
  3292   001DF0                     u1251:
  3293   001DF0  EFFF  F00E         	goto	l2988
  3294   001DF4                     u1250:
  3295   001DF4  500E               	movf	___awdiv@divisor^0,w,c
  3296   001DF6  5E0C               	subwf	___awdiv@dividend^0,f,c
  3297   001DF8  500F               	movf	(___awdiv@divisor+1)^0,w,c
  3298   001DFA  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  3299   001DFC  8012               	bsf	___awdiv@quotient^0,0,c
  3300   001DFE                     l2988:
  3301   001DFE  90D8               	bcf	status,0,c
  3302   001E00  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  3303   001E02  320E               	rrcf	___awdiv@divisor^0,f,c
  3304   001E04  2E10               	decfsz	___awdiv@counter^0,f,c
  3305   001E06  EFEC  F00E         	goto	l2980
  3306   001E0A                     l2992:
  3307   001E0A  5011               	movf	___awdiv@sign^0,w,c
  3308   001E0C  B4D8               	btfsc	status,2,c
  3309   001E0E  EF0B  F00F         	goto	u1261
  3310   001E12  EF0D  F00F         	goto	u1260
  3311   001E16                     u1261:
  3312   001E16  EF11  F00F         	goto	l2996
  3313   001E1A                     u1260:
  3314   001E1A  6C12               	negf	___awdiv@quotient^0,c
  3315   001E1C  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  3316   001E1E  B0D8               	btfsc	status,0,c
  3317   001E20  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  3318   001E22                     l2996:
  3319   001E22  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  3320   001E26  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  3321   001E2A  0012               	return		;funcret
  3322   001E2C                     __end_of___awdiv:
  3323                           	callstack 0
  3324                           
  3325 ;; *************** function _WriteCoil *****************
  3326 ;; Defined at:
  3327 ;;		line 438 in file "libs/modbus.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  Address         2   35[COMRAM] unsigned short 
  3332 ;;  WriteValue      2   33[COMRAM] unsigned short 
  3333 ;;  CRC             2   31[COMRAM] unsigned short 
  3334 ;;  WriteValueHi    2   29[COMRAM] unsigned short 
  3335 ;;  WriteValueLo    2   27[COMRAM] unsigned short 
  3336 ;;  AddressLow      2   25[COMRAM] unsigned short 
  3337 ;;  AddressHigh     2   23[COMRAM] unsigned short 
  3338 ;;  i               1   37[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;Total ram usage:       17 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 5
  3355 ;; This function calls:
  3356 ;;		_CalculateCRC
  3357 ;;		_ClearResponse
  3358 ;; This function is called by:
  3359 ;;		_DecodePacket
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text25
  3364   001886                     __ptext25:
  3365                           	callstack 0
  3366   001886                     _WriteCoil:
  3367                           	callstack 24
  3368   001886                     
  3369                           ;libs/modbus.c: 441:      uint16_t AddressHigh = 0;
  3370   001886  0E00               	movlw	0
  3371   001888  6E19               	movwf	(WriteCoil@AddressHigh+1)^0,c
  3372   00188A  0E00               	movlw	0
  3373   00188C  6E18               	movwf	WriteCoil@AddressHigh^0,c
  3374                           
  3375                           ;libs/modbus.c: 442:      uint16_t AddressLow = 0;
  3376   00188E  0E00               	movlw	0
  3377   001890  6E1B               	movwf	(WriteCoil@AddressLow+1)^0,c
  3378   001892  0E00               	movlw	0
  3379   001894  6E1A               	movwf	WriteCoil@AddressLow^0,c
  3380                           
  3381                           ;libs/modbus.c: 444:      uint16_t WriteValue = 0;
  3382   001896  0E00               	movlw	0
  3383   001898  6E23               	movwf	(WriteCoil@WriteValue+1)^0,c
  3384   00189A  0E00               	movlw	0
  3385   00189C  6E22               	movwf	WriteCoil@WriteValue^0,c
  3386                           
  3387                           ;libs/modbus.c: 445:      uint16_t WriteValueLow = 0;
  3388   00189E  0E00               	movlw	0
  3389   0018A0  6E1D               	movwf	(WriteCoil@WriteValueLow+1)^0,c
  3390   0018A2  0E00               	movlw	0
  3391   0018A4  6E1C               	movwf	WriteCoil@WriteValueLow^0,c
  3392                           
  3393                           ;libs/modbus.c: 446:      uint16_t WriteValueHigh = 0;
  3394   0018A6  0E00               	movlw	0
  3395   0018A8  6E1F               	movwf	(WriteCoil@WriteValueHigh+1)^0,c
  3396   0018AA  0E00               	movlw	0
  3397   0018AC  6E1E               	movwf	WriteCoil@WriteValueHigh^0,c
  3398                           
  3399                           ;libs/modbus.c: 448:      uint16_t CRC = 0;
  3400   0018AE  0E00               	movlw	0
  3401   0018B0  6E21               	movwf	(WriteCoil@CRC+1)^0,c
  3402   0018B2  0E00               	movlw	0
  3403   0018B4  6E20               	movwf	WriteCoil@CRC^0,c
  3404                           
  3405                           ;libs/modbus.c: 449:      uint8_t i = 0;
  3406   0018B6  0E00               	movlw	0
  3407   0018B8  6E26               	movwf	WriteCoil@i^0,c
  3408   0018BA                     
  3409                           ;libs/modbus.c: 451:      Address = received[2];
  3410   0018BA  C202  F024         	movff	_received+2,WriteCoil@Address	;volatile
  3411   0018BE  6A25               	clrf	(WriteCoil@Address+1)^0,c
  3412                           
  3413                           ;libs/modbus.c: 452:      Address <<= 8;
  3414   0018C0  5024               	movf	WriteCoil@Address^0,w,c
  3415   0018C2  6E25               	movwf	(WriteCoil@Address+1)^0,c
  3416   0018C4  6A24               	clrf	WriteCoil@Address^0,c
  3417   0018C6                     
  3418                           ;libs/modbus.c: 453:      Address |= received[3];
  3419   0018C6  0102               	movlb	2	; () banked
  3420   0018C8  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  3421   0018CA  1224               	iorwf	WriteCoil@Address^0,f,c
  3422   0018CC                     
  3423                           ; BSR set to: 2
  3424                           ;libs/modbus.c: 454:      AddressHigh = received[2];
  3425   0018CC  C202  F018         	movff	_received+2,WriteCoil@AddressHigh	;volatile
  3426   0018D0  6A19               	clrf	(WriteCoil@AddressHigh+1)^0,c
  3427   0018D2                     
  3428                           ; BSR set to: 2
  3429                           ;libs/modbus.c: 455:      AddressLow = received[3];
  3430   0018D2  C203  F01A         	movff	_received+3,WriteCoil@AddressLow	;volatile
  3431   0018D6  6A1B               	clrf	(WriteCoil@AddressLow+1)^0,c
  3432   0018D8                     
  3433                           ; BSR set to: 2
  3434                           ;libs/modbus.c: 457:      WriteValue = received[4];
  3435   0018D8  C204  F022         	movff	_received+4,WriteCoil@WriteValue	;volatile
  3436   0018DC  6A23               	clrf	(WriteCoil@WriteValue+1)^0,c
  3437   0018DE                     
  3438                           ; BSR set to: 2
  3439                           ;libs/modbus.c: 458:      WriteValue <<= 8;
  3440   0018DE  5022               	movf	WriteCoil@WriteValue^0,w,c
  3441   0018E0  6E23               	movwf	(WriteCoil@WriteValue+1)^0,c
  3442   0018E2  6A22               	clrf	WriteCoil@WriteValue^0,c
  3443                           
  3444                           ;libs/modbus.c: 459:      WriteValue |= received[5];
  3445   0018E4  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  3446   0018E6  1222               	iorwf	WriteCoil@WriteValue^0,f,c
  3447   0018E8                     
  3448                           ; BSR set to: 2
  3449                           ;libs/modbus.c: 460:      WriteValueHigh = received[4];
  3450   0018E8  C204  F01E         	movff	_received+4,WriteCoil@WriteValueHigh	;volatile
  3451   0018EC  6A1F               	clrf	(WriteCoil@WriteValueHigh+1)^0,c
  3452   0018EE                     
  3453                           ; BSR set to: 2
  3454                           ;libs/modbus.c: 461:      WriteValueLow = received[5];
  3455   0018EE  C205  F01C         	movff	_received+5,WriteCoil@WriteValueLow	;volatile
  3456   0018F2  6A1D               	clrf	(WriteCoil@WriteValueLow+1)^0,c
  3457                           
  3458                           ;libs/modbus.c: 463:      if(WriteValue){
  3459   0018F4  5022               	movf	WriteCoil@WriteValue^0,w,c
  3460   0018F6  1023               	iorwf	(WriteCoil@WriteValue+1)^0,w,c
  3461   0018F8  B4D8               	btfsc	status,2,c
  3462   0018FA  EF81  F00C         	goto	u1591
  3463   0018FE  EF83  F00C         	goto	u1590
  3464   001902                     u1591:
  3465   001902  EF8B  F00C         	goto	l3376
  3466   001906                     u1590:
  3467   001906                     
  3468                           ; BSR set to: 2
  3469                           ;libs/modbus.c: 464:           Coils[Address] = 0xFF;
  3470   001906  5024               	movf	WriteCoil@Address^0,w,c
  3471   001908  0F92               	addlw	low _Coils
  3472   00190A  6ED9               	movwf	fsr2l,c
  3473   00190C  6ADA               	clrf	fsr2h,c
  3474   00190E  0EFF               	movlw	255
  3475   001910  6EDF               	movwf	indf2,c
  3476                           
  3477                           ;libs/modbus.c: 465:      }
  3478   001912  EF90  F00C         	goto	l155
  3479   001916                     l3376:
  3480                           
  3481                           ; BSR set to: 2
  3482                           ;libs/modbus.c: 467:           Coils[Address] = 0x00;
  3483   001916  5024               	movf	WriteCoil@Address^0,w,c
  3484   001918  0F92               	addlw	low _Coils
  3485   00191A  6ED9               	movwf	fsr2l,c
  3486   00191C  6ADA               	clrf	fsr2h,c
  3487   00191E  6ADF               	clrf	indf2,c
  3488   001920                     l155:
  3489                           
  3490                           ; BSR set to: 2
  3491                           ;libs/modbus.c: 470:      if(Coils[Address] == WriteValue){
  3492   001920  5024               	movf	WriteCoil@Address^0,w,c
  3493   001922  0F92               	addlw	low _Coils
  3494   001924  6ED9               	movwf	fsr2l,c
  3495   001926  6ADA               	clrf	fsr2h,c
  3496   001928  50DF               	movf	indf2,w,c
  3497   00192A  6E16               	movwf	??_WriteCoil^0,c
  3498   00192C  6A17               	clrf	(??_WriteCoil+1)^0,c
  3499   00192E  5022               	movf	WriteCoil@WriteValue^0,w,c
  3500   001930  1816               	xorwf	??_WriteCoil^0,w,c
  3501   001932  E107               	bnz	u1601
  3502   001934  5023               	movf	(WriteCoil@WriteValue+1)^0,w,c
  3503   001936  1817               	xorwf	(??_WriteCoil+1)^0,w,c
  3504   001938  A4D8               	btfss	status,2,c
  3505   00193A  EFA1  F00C         	goto	u1601
  3506   00193E  EFA3  F00C         	goto	u1600
  3507   001942                     u1601:
  3508   001942  EFB0  F00C         	goto	l3388
  3509   001946                     u1600:
  3510   001946                     
  3511                           ; BSR set to: 2
  3512                           ;libs/modbus.c: 471:           response[0] = 0x25;
  3513   001946  0E25               	movlw	37
  3514   001948  0101               	movlb	1	; () banked
  3515   00194A  6F00               	movwf	_response& (0+255),b	;volatile
  3516                           
  3517                           ;libs/modbus.c: 472:           response[1] = 0x05;
  3518   00194C  0E05               	movlw	5
  3519   00194E  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  3520   001950                     
  3521                           ; BSR set to: 1
  3522                           ;libs/modbus.c: 473:           response[2] = AddressHigh;
  3523   001950  C018  F102         	movff	WriteCoil@AddressHigh,_response+2	;volatile
  3524   001954                     
  3525                           ; BSR set to: 1
  3526                           ;libs/modbus.c: 474:           response[3] = AddressLow;
  3527   001954  C01A  F103         	movff	WriteCoil@AddressLow,_response+3	;volatile
  3528   001958                     
  3529                           ; BSR set to: 1
  3530                           ;libs/modbus.c: 475:           response[4] = WriteValueHigh;
  3531   001958  C01E  F104         	movff	WriteCoil@WriteValueHigh,_response+4	;volatile
  3532   00195C                     
  3533                           ; BSR set to: 1
  3534                           ;libs/modbus.c: 476:           response[5] = WriteValueLow;
  3535   00195C  C01C  F105         	movff	WriteCoil@WriteValueLow,_response+5	;volatile
  3536   001960                     l3388:
  3537                           
  3538                           ;libs/modbus.c: 481:      CRC = CalculateCRC(response, 6);
  3539   001960  0E00               	movlw	low _response
  3540   001962  6E0C               	movwf	CalculateCRC@string^0,c
  3541   001964  0E01               	movlw	high _response
  3542   001966  6E0D               	movwf	(CalculateCRC@string+1)^0,c
  3543   001968  0E00               	movlw	0
  3544   00196A  6E0F               	movwf	(CalculateCRC@_long+1)^0,c
  3545   00196C  0E06               	movlw	6
  3546   00196E  6E0E               	movwf	CalculateCRC@_long^0,c
  3547   001970  ECCB  F00F         	call	_CalculateCRC	;wreg free
  3548   001974  C00C  F020         	movff	?_CalculateCRC,WriteCoil@CRC
  3549   001978  C00D  F021         	movff	?_CalculateCRC+1,WriteCoil@CRC+1
  3550   00197C                     
  3551                           ;libs/modbus.c: 482:      response[6] = CRC << 8;
  3552   00197C  0E00               	movlw	0
  3553   00197E  0101               	movlb	1	; () banked
  3554   001980  6F06               	movwf	(_response+6)& (0+255),b	;volatile
  3555   001982                     
  3556                           ; BSR set to: 1
  3557                           ;libs/modbus.c: 483:      response[7] = CRC;
  3558   001982  C020  F107         	movff	WriteCoil@CRC,_response+7	;volatile
  3559   001986                     
  3560                           ; BSR set to: 1
  3561                           ;libs/modbus.c: 484:      for(i = 0; i != 9; i++){
  3562   001986  0E00               	movlw	0
  3563   001988  6E26               	movwf	WriteCoil@i^0,c
  3564   00198A                     l3400:
  3565                           
  3566                           ;libs/modbus.c: 485:           TX1REG = response[i];
  3567   00198A  0E00               	movlw	low _response
  3568   00198C  2426               	addwf	WriteCoil@i^0,w,c
  3569   00198E  6ED9               	movwf	fsr2l,c
  3570   001990  6ADA               	clrf	fsr2h,c
  3571   001992  0E01               	movlw	high _response
  3572   001994  22DA               	addwfc	fsr2h,f,c
  3573   001996  50DF               	movf	indf2,w,c
  3574   001998  6E9A               	movwf	154,c	;volatile
  3575   00199A                     
  3576                           ;libs/modbus.c: 486:      }
  3577   00199A  2A26               	incf	WriteCoil@i^0,f,c
  3578   00199C  0E09               	movlw	9
  3579   00199E  1826               	xorwf	WriteCoil@i^0,w,c
  3580   0019A0  A4D8               	btfss	status,2,c
  3581   0019A2  EFD5  F00C         	goto	u1611
  3582   0019A6  EFD7  F00C         	goto	u1610
  3583   0019AA                     u1611:
  3584   0019AA  EFC5  F00C         	goto	l3400
  3585   0019AE                     u1610:
  3586   0019AE                     
  3587                           ;libs/modbus.c: 487:      ClearResponse();
  3588   0019AE  EC1B  F012         	call	_ClearResponse	;wreg free
  3589   0019B2  0012               	return		;funcret
  3590   0019B4                     __end_of_WriteCoil:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _ReadIR *****************
  3594 ;; Defined at:
  3595 ;;		line 177 in file "libs/modbus.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  QtAddresses     2   29[COMRAM] unsigned short 
  3600 ;;  StartingAddr    2   27[COMRAM] unsigned short 
  3601 ;;  CRC             2   25[COMRAM] unsigned short 
  3602 ;;  j               1   32[COMRAM] unsigned char 
  3603 ;;  i               1   31[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;Total ram usage:       12 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 5
  3620 ;; This function calls:
  3621 ;;		_CalculateCRC
  3622 ;;		_ClearResponse
  3623 ;; This function is called by:
  3624 ;;		_DecodePacket
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text26
  3629   00155E                     __ptext26:
  3630                           	callstack 0
  3631   00155E                     _ReadIR:
  3632                           	callstack 24
  3633   00155E                     
  3634                           ;libs/modbus.c: 180:      uint16_t QtAddresses = 0;
  3635   00155E  0E00               	movlw	0
  3636   001560  6E1F               	movwf	(ReadIR@QtAddresses+1)^0,c
  3637   001562  0E00               	movlw	0
  3638   001564  6E1E               	movwf	ReadIR@QtAddresses^0,c
  3639                           
  3640                           ;libs/modbus.c: 182:      uint16_t CRC = 0;
  3641   001566  0E00               	movlw	0
  3642   001568  6E1B               	movwf	(ReadIR@CRC+1)^0,c
  3643   00156A  0E00               	movlw	0
  3644   00156C  6E1A               	movwf	ReadIR@CRC^0,c
  3645                           
  3646                           ;libs/modbus.c: 183:      uint8_t j = 3;
  3647   00156E  0E03               	movlw	3
  3648   001570  6E21               	movwf	ReadIR@j^0,c
  3649                           
  3650                           ;libs/modbus.c: 184:      uint8_t i = 0;
  3651   001572  0E00               	movlw	0
  3652   001574  6E20               	movwf	ReadIR@i^0,c
  3653   001576                     
  3654                           ;libs/modbus.c: 186:      StartingAddress = received[2];
  3655   001576  C202  F01C         	movff	_received+2,ReadIR@StartingAddress	;volatile
  3656   00157A  6A1D               	clrf	(ReadIR@StartingAddress+1)^0,c
  3657                           
  3658                           ;libs/modbus.c: 187:      StartingAddress <<= 8;
  3659   00157C  501C               	movf	ReadIR@StartingAddress^0,w,c
  3660   00157E  6E1D               	movwf	(ReadIR@StartingAddress+1)^0,c
  3661   001580  6A1C               	clrf	ReadIR@StartingAddress^0,c
  3662   001582                     
  3663                           ;libs/modbus.c: 188:      StartingAddress |= received[3];
  3664   001582  0102               	movlb	2	; () banked
  3665   001584  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  3666   001586  121C               	iorwf	ReadIR@StartingAddress^0,f,c
  3667   001588                     
  3668                           ; BSR set to: 2
  3669                           ;libs/modbus.c: 190:      QtAddresses = received[4];
  3670   001588  C204  F01E         	movff	_received+4,ReadIR@QtAddresses	;volatile
  3671   00158C  6A1F               	clrf	(ReadIR@QtAddresses+1)^0,c
  3672   00158E                     
  3673                           ; BSR set to: 2
  3674                           ;libs/modbus.c: 191:      QtAddresses <<= 8;
  3675   00158E  501E               	movf	ReadIR@QtAddresses^0,w,c
  3676   001590  6E1F               	movwf	(ReadIR@QtAddresses+1)^0,c
  3677   001592  6A1E               	clrf	ReadIR@QtAddresses^0,c
  3678                           
  3679                           ;libs/modbus.c: 192:      QtAddresses |= received[5];
  3680   001594  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  3681   001596  121E               	iorwf	ReadIR@QtAddresses^0,f,c
  3682   001598                     
  3683                           ; BSR set to: 2
  3684                           ;libs/modbus.c: 194:      response[0] = 0x25;
  3685   001598  0E25               	movlw	37
  3686   00159A  0101               	movlb	1	; () banked
  3687   00159C  6F00               	movwf	_response& (0+255),b	;volatile
  3688   00159E                     
  3689                           ; BSR set to: 1
  3690                           ;libs/modbus.c: 195:      response[1] = 0x04;
  3691   00159E  0E04               	movlw	4
  3692   0015A0  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  3693                           
  3694                           ;libs/modbus.c: 196:      response[2] = QtAddresses*2;
  3695   0015A2  501E               	movf	ReadIR@QtAddresses^0,w,c
  3696   0015A4  241E               	addwf	ReadIR@QtAddresses^0,w,c
  3697   0015A6  6F02               	movwf	(_response+2)& (0+255),b	;volatile
  3698   0015A8                     
  3699                           ; BSR set to: 1
  3700                           ;libs/modbus.c: 198:      for(i = StartingAddress; i < (StartingAddress + QtAddresses); 
      +                          i++){
  3701   0015A8  C01C  F020         	movff	ReadIR@StartingAddress,ReadIR@i
  3702   0015AC  EF30  F00B         	goto	l3334
  3703   0015B0                     l3316:
  3704                           
  3705                           ;libs/modbus.c: 199:           if(InputRegister[i] > 255){
  3706   0015B0  5020               	movf	ReadIR@i^0,w,c
  3707   0015B2  0D02               	mullw	2
  3708   0015B4  0E84               	movlw	low _InputRegister
  3709   0015B6  24F3               	addwf	243,w,c
  3710   0015B8  6ED9               	movwf	fsr2l,c
  3711   0015BA  0E03               	movlw	high _InputRegister
  3712   0015BC  20F4               	addwfc	prodh,w,c
  3713   0015BE  6EDA               	movwf	fsr2h,c
  3714   0015C0  0E00               	movlw	0
  3715   0015C2  5CDE               	subwf	postinc2,w,c
  3716   0015C4  0E01               	movlw	1
  3717   0015C6  58DE               	subwfb	postinc2,w,c
  3718   0015C8  A0D8               	btfss	status,0,c
  3719   0015CA  EFE9  F00A         	goto	u1561
  3720   0015CE  EFEB  F00A         	goto	u1560
  3721   0015D2                     u1561:
  3722   0015D2  EF16  F00B         	goto	l3324
  3723   0015D6                     u1560:
  3724   0015D6                     
  3725                           ;libs/modbus.c: 200:                response[j] = InputRegister[i] >> 8;
  3726   0015D6  0E00               	movlw	low _response
  3727   0015D8  2421               	addwf	ReadIR@j^0,w,c
  3728   0015DA  6ED9               	movwf	fsr2l,c
  3729   0015DC  6ADA               	clrf	fsr2h,c
  3730   0015DE  0E01               	movlw	high _response
  3731   0015E0  22DA               	addwfc	fsr2h,f,c
  3732   0015E2  5020               	movf	ReadIR@i^0,w,c
  3733   0015E4  0D02               	mullw	2
  3734   0015E6  0E84               	movlw	low _InputRegister
  3735   0015E8  24F3               	addwf	243,w,c
  3736   0015EA  6EE1               	movwf	fsr1l,c
  3737   0015EC  0E03               	movlw	high _InputRegister
  3738   0015EE  20F4               	addwfc	prodh,w,c
  3739   0015F0  6EE2               	movwf	fsr1h,c
  3740   0015F2  CFE6 F016          	movff	postinc1,??_ReadIR
  3741   0015F6  CFE5 F017          	movff	postdec1,??_ReadIR+1
  3742   0015FA  C017  F016         	movff	??_ReadIR+1,??_ReadIR
  3743   0015FE  6A17               	clrf	(??_ReadIR+1)^0,c
  3744   001600  5016               	movf	??_ReadIR^0,w,c
  3745   001602  6EDF               	movwf	indf2,c
  3746   001604                     
  3747                           ;libs/modbus.c: 201:                j++;
  3748   001604  2A21               	incf	ReadIR@j^0,f,c
  3749   001606                     
  3750                           ;libs/modbus.c: 202:                response[j] = InputRegister[i];
  3751   001606  5020               	movf	ReadIR@i^0,w,c
  3752   001608  0D02               	mullw	2
  3753   00160A  0E84               	movlw	low _InputRegister
  3754   00160C  24F3               	addwf	243,w,c
  3755   00160E  6ED9               	movwf	fsr2l,c
  3756   001610  0E03               	movlw	high _InputRegister
  3757   001612  20F4               	addwfc	prodh,w,c
  3758   001614  6EDA               	movwf	fsr2h,c
  3759   001616  0E00               	movlw	low _response
  3760   001618  2421               	addwf	ReadIR@j^0,w,c
  3761   00161A  6EE1               	movwf	fsr1l,c
  3762   00161C  6AE2               	clrf	fsr1h,c
  3763   00161E  0E01               	movlw	high _response
  3764   001620  22E2               	addwfc	fsr1h,f,c
  3765   001622  CFDF FFE7          	movff	indf2,indf1
  3766                           
  3767                           ;libs/modbus.c: 203:                j++;
  3768   001626  2A21               	incf	ReadIR@j^0,f,c
  3769                           
  3770                           ;libs/modbus.c: 204:           }
  3771   001628  EF2F  F00B         	goto	l3332
  3772   00162C                     l3324:
  3773                           
  3774                           ;libs/modbus.c: 206:                response[j] = 0x00;
  3775   00162C  0E00               	movlw	low _response
  3776   00162E  2421               	addwf	ReadIR@j^0,w,c
  3777   001630  6ED9               	movwf	fsr2l,c
  3778   001632  6ADA               	clrf	fsr2h,c
  3779   001634  0E01               	movlw	high _response
  3780   001636  22DA               	addwfc	fsr2h,f,c
  3781   001638  6ADF               	clrf	indf2,c
  3782   00163A                     
  3783                           ;libs/modbus.c: 207:                j++;
  3784   00163A  2A21               	incf	ReadIR@j^0,f,c
  3785   00163C                     
  3786                           ;libs/modbus.c: 208:                response[j] = InputRegister[i];
  3787   00163C  5020               	movf	ReadIR@i^0,w,c
  3788   00163E  0D02               	mullw	2
  3789   001640  0E84               	movlw	low _InputRegister
  3790   001642  24F3               	addwf	243,w,c
  3791   001644  6ED9               	movwf	fsr2l,c
  3792   001646  0E03               	movlw	high _InputRegister
  3793   001648  20F4               	addwfc	prodh,w,c
  3794   00164A  6EDA               	movwf	fsr2h,c
  3795   00164C  0E00               	movlw	low _response
  3796   00164E  2421               	addwf	ReadIR@j^0,w,c
  3797   001650  6EE1               	movwf	fsr1l,c
  3798   001652  6AE2               	clrf	fsr1h,c
  3799   001654  0E01               	movlw	high _response
  3800   001656  22E2               	addwfc	fsr1h,f,c
  3801   001658  CFDF FFE7          	movff	indf2,indf1
  3802   00165C                     
  3803                           ;libs/modbus.c: 209:                j++;
  3804   00165C  2A21               	incf	ReadIR@j^0,f,c
  3805   00165E                     l3332:
  3806                           
  3807                           ;libs/modbus.c: 211:      }
  3808   00165E  2A20               	incf	ReadIR@i^0,f,c
  3809   001660                     l3334:
  3810   001660  501E               	movf	ReadIR@QtAddresses^0,w,c
  3811   001662  241C               	addwf	ReadIR@StartingAddress^0,w,c
  3812   001664  6E16               	movwf	??_ReadIR^0,c
  3813   001666  501F               	movf	(ReadIR@QtAddresses+1)^0,w,c
  3814   001668  201D               	addwfc	(ReadIR@StartingAddress+1)^0,w,c
  3815   00166A  6E17               	movwf	(??_ReadIR+1)^0,c
  3816   00166C  5020               	movf	ReadIR@i^0,w,c
  3817   00166E  6E18               	movwf	(??_ReadIR+2)^0,c
  3818   001670  6A19               	clrf	(??_ReadIR+3)^0,c
  3819   001672  5016               	movf	??_ReadIR^0,w,c
  3820   001674  5C18               	subwf	(??_ReadIR+2)^0,w,c
  3821   001676  5017               	movf	(??_ReadIR+1)^0,w,c
  3822   001678  5819               	subwfb	(??_ReadIR+3)^0,w,c
  3823   00167A  A0D8               	btfss	status,0,c
  3824   00167C  EF42  F00B         	goto	u1571
  3825   001680  EF44  F00B         	goto	u1570
  3826   001684                     u1571:
  3827   001684  EFD8  F00A         	goto	l3316
  3828   001688                     u1570:
  3829   001688                     
  3830                           ;libs/modbus.c: 212:      CRC = CalculateCRC(response, j);
  3831   001688  0E00               	movlw	low _response
  3832   00168A  6E0C               	movwf	CalculateCRC@string^0,c
  3833   00168C  0E01               	movlw	high _response
  3834   00168E  6E0D               	movwf	(CalculateCRC@string+1)^0,c
  3835   001690  C021  F00E         	movff	ReadIR@j,CalculateCRC@_long
  3836   001694  6A0F               	clrf	(CalculateCRC@_long+1)^0,c
  3837   001696  ECCB  F00F         	call	_CalculateCRC	;wreg free
  3838   00169A  C00C  F01A         	movff	?_CalculateCRC,ReadIR@CRC
  3839   00169E  C00D  F01B         	movff	?_CalculateCRC+1,ReadIR@CRC+1
  3840   0016A2                     
  3841                           ;libs/modbus.c: 213:      response[j] = CRC << 8;
  3842   0016A2  0E00               	movlw	low _response
  3843   0016A4  2421               	addwf	ReadIR@j^0,w,c
  3844   0016A6  6ED9               	movwf	fsr2l,c
  3845   0016A8  6ADA               	clrf	fsr2h,c
  3846   0016AA  0E01               	movlw	high _response
  3847   0016AC  22DA               	addwfc	fsr2h,f,c
  3848   0016AE  6ADF               	clrf	indf2,c
  3849   0016B0                     
  3850                           ;libs/modbus.c: 214:      response[j+1] = CRC;
  3851   0016B0  0E01               	movlw	low (_response+1)
  3852   0016B2  2421               	addwf	ReadIR@j^0,w,c
  3853   0016B4  6ED9               	movwf	fsr2l,c
  3854   0016B6  6ADA               	clrf	fsr2h,c
  3855   0016B8  0E01               	movlw	high (_response+1)
  3856   0016BA  22DA               	addwfc	fsr2h,f,c
  3857   0016BC  C01A  FFDF         	movff	ReadIR@CRC,indf2
  3858   0016C0                     
  3859                           ;libs/modbus.c: 215:      j += 3;
  3860   0016C0  0E03               	movlw	3
  3861   0016C2  2621               	addwf	ReadIR@j^0,f,c
  3862   0016C4                     
  3863                           ;libs/modbus.c: 216:      for(i = 0; i != j; i++){
  3864   0016C4  0E00               	movlw	0
  3865   0016C6  6E20               	movwf	ReadIR@i^0,c
  3866   0016C8  EF6F  F00B         	goto	l3350
  3867   0016CC                     l3346:
  3868                           
  3869                           ;libs/modbus.c: 217:           TX1REG = response[i];
  3870   0016CC  0E00               	movlw	low _response
  3871   0016CE  2420               	addwf	ReadIR@i^0,w,c
  3872   0016D0  6ED9               	movwf	fsr2l,c
  3873   0016D2  6ADA               	clrf	fsr2h,c
  3874   0016D4  0E01               	movlw	high _response
  3875   0016D6  22DA               	addwfc	fsr2h,f,c
  3876   0016D8  50DF               	movf	indf2,w,c
  3877   0016DA  6E9A               	movwf	154,c	;volatile
  3878   0016DC                     
  3879                           ;libs/modbus.c: 218:      }
  3880   0016DC  2A20               	incf	ReadIR@i^0,f,c
  3881   0016DE                     l3350:
  3882   0016DE  5021               	movf	ReadIR@j^0,w,c
  3883   0016E0  1820               	xorwf	ReadIR@i^0,w,c
  3884   0016E2  A4D8               	btfss	status,2,c
  3885   0016E4  EF76  F00B         	goto	u1581
  3886   0016E8  EF78  F00B         	goto	u1580
  3887   0016EC                     u1581:
  3888   0016EC  EF66  F00B         	goto	l3346
  3889   0016F0                     u1580:
  3890   0016F0                     
  3891                           ;libs/modbus.c: 220:      ClearResponse();
  3892   0016F0  EC1B  F012         	call	_ClearResponse	;wreg free
  3893   0016F4  0012               	return		;funcret
  3894   0016F6                     __end_of_ReadIR:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _ReadHR *****************
  3898 ;; Defined at:
  3899 ;;		line 122 in file "libs/modbus.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  i               2   29[COMRAM] unsigned short 
  3904 ;;  QtAddresses     2   27[COMRAM] unsigned short 
  3905 ;;  StartingAddr    2   25[COMRAM] unsigned short 
  3906 ;;  CRC             2   23[COMRAM] unsigned short 
  3907 ;;  j               1   31[COMRAM] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;Total ram usage:       11 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 5
  3924 ;; This function calls:
  3925 ;;		_CalculateCRC
  3926 ;;		_ClearResponse
  3927 ;; This function is called by:
  3928 ;;		_DecodePacket
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text27
  3933   0013A8                     __ptext27:
  3934                           	callstack 0
  3935   0013A8                     _ReadHR:
  3936                           	callstack 24
  3937   0013A8                     
  3938                           ;libs/modbus.c: 125:      uint16_t QtAddresses = 0;
  3939   0013A8  0E00               	movlw	0
  3940   0013AA  6E1D               	movwf	(ReadHR@QtAddresses+1)^0,c
  3941   0013AC  0E00               	movlw	0
  3942   0013AE  6E1C               	movwf	ReadHR@QtAddresses^0,c
  3943                           
  3944                           ;libs/modbus.c: 127:      uint16_t CRC = 0;
  3945   0013B0  0E00               	movlw	0
  3946   0013B2  6E19               	movwf	(ReadHR@CRC+1)^0,c
  3947   0013B4  0E00               	movlw	0
  3948   0013B6  6E18               	movwf	ReadHR@CRC^0,c
  3949                           
  3950                           ;libs/modbus.c: 128:      uint8_t j = 3;
  3951   0013B8  0E03               	movlw	3
  3952   0013BA  6E20               	movwf	ReadHR@j^0,c
  3953                           
  3954                           ;libs/modbus.c: 129:      uint16_t i = 0;
  3955   0013BC  0E00               	movlw	0
  3956   0013BE  6E1F               	movwf	(ReadHR@i+1)^0,c
  3957   0013C0  0E00               	movlw	0
  3958   0013C2  6E1E               	movwf	ReadHR@i^0,c
  3959   0013C4                     
  3960                           ;libs/modbus.c: 131:      StartingAddress = received[2];
  3961   0013C4  C202  F01A         	movff	_received+2,ReadHR@StartingAddress	;volatile
  3962   0013C8  6A1B               	clrf	(ReadHR@StartingAddress+1)^0,c
  3963                           
  3964                           ;libs/modbus.c: 132:      StartingAddress <<= 8;
  3965   0013CA  501A               	movf	ReadHR@StartingAddress^0,w,c
  3966   0013CC  6E1B               	movwf	(ReadHR@StartingAddress+1)^0,c
  3967   0013CE  6A1A               	clrf	ReadHR@StartingAddress^0,c
  3968   0013D0                     
  3969                           ;libs/modbus.c: 133:      StartingAddress |= received[3];
  3970   0013D0  0102               	movlb	2	; () banked
  3971   0013D2  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  3972   0013D4  121A               	iorwf	ReadHR@StartingAddress^0,f,c
  3973   0013D6                     
  3974                           ; BSR set to: 2
  3975                           ;libs/modbus.c: 135:      QtAddresses = received[4];
  3976   0013D6  C204  F01C         	movff	_received+4,ReadHR@QtAddresses	;volatile
  3977   0013DA  6A1D               	clrf	(ReadHR@QtAddresses+1)^0,c
  3978   0013DC                     
  3979                           ; BSR set to: 2
  3980                           ;libs/modbus.c: 136:      QtAddresses <<= 8;
  3981   0013DC  501C               	movf	ReadHR@QtAddresses^0,w,c
  3982   0013DE  6E1D               	movwf	(ReadHR@QtAddresses+1)^0,c
  3983   0013E0  6A1C               	clrf	ReadHR@QtAddresses^0,c
  3984                           
  3985                           ;libs/modbus.c: 137:      QtAddresses |= received[5];
  3986   0013E2  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  3987   0013E4  121C               	iorwf	ReadHR@QtAddresses^0,f,c
  3988   0013E6                     
  3989                           ; BSR set to: 2
  3990                           ;libs/modbus.c: 139:      response[0] = 0x25;
  3991   0013E6  0E25               	movlw	37
  3992   0013E8  0101               	movlb	1	; () banked
  3993   0013EA  6F00               	movwf	_response& (0+255),b	;volatile
  3994   0013EC                     
  3995                           ; BSR set to: 1
  3996                           ;libs/modbus.c: 140:      response[1] = 0x03;
  3997   0013EC  0E03               	movlw	3
  3998   0013EE  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  3999                           
  4000                           ;libs/modbus.c: 141:      response[2] = QtAddresses*2;
  4001   0013F0  501C               	movf	ReadHR@QtAddresses^0,w,c
  4002   0013F2  241C               	addwf	ReadHR@QtAddresses^0,w,c
  4003   0013F4  6F02               	movwf	(_response+2)& (0+255),b	;volatile
  4004   0013F6                     
  4005                           ; BSR set to: 1
  4006                           ;libs/modbus.c: 143:      for(i = StartingAddress; i < (StartingAddress + QtAddresses); 
      +                          i++){
  4007   0013F6  C01A  F01E         	movff	ReadHR@StartingAddress,ReadHR@i
  4008   0013FA  C01B  F01F         	movff	ReadHR@StartingAddress+1,ReadHR@i+1
  4009   0013FE  EF5E  F00A         	goto	l3278
  4010   001402                     l3260:
  4011                           
  4012                           ;libs/modbus.c: 144:           if(HoldingRegister[i] > 255){
  4013   001402  90D8               	bcf	status,0,c
  4014   001404  341E               	rlcf	ReadHR@i^0,w,c
  4015   001406  6ED9               	movwf	fsr2l,c
  4016   001408  341F               	rlcf	(ReadHR@i+1)^0,w,c
  4017   00140A  6EDA               	movwf	fsr2h,c
  4018   00140C  0E00               	movlw	low _HoldingRegister
  4019   00140E  26D9               	addwf	fsr2l,f,c
  4020   001410  0E03               	movlw	high _HoldingRegister
  4021   001412  22DA               	addwfc	fsr2h,f,c
  4022   001414  0E00               	movlw	0
  4023   001416  5CDE               	subwf	postinc2,w,c
  4024   001418  0E01               	movlw	1
  4025   00141A  58DE               	subwfb	postinc2,w,c
  4026   00141C  A0D8               	btfss	status,0,c
  4027   00141E  EF13  F00A         	goto	u1531
  4028   001422  EF15  F00A         	goto	u1530
  4029   001426                     u1531:
  4030   001426  EF42  F00A         	goto	l3268
  4031   00142A                     u1530:
  4032   00142A                     
  4033                           ;libs/modbus.c: 145:                response[j] = HoldingRegister[i] >> 8;
  4034   00142A  0E00               	movlw	low _response
  4035   00142C  2420               	addwf	ReadHR@j^0,w,c
  4036   00142E  6ED9               	movwf	fsr2l,c
  4037   001430  6ADA               	clrf	fsr2h,c
  4038   001432  0E01               	movlw	high _response
  4039   001434  22DA               	addwfc	fsr2h,f,c
  4040   001436  90D8               	bcf	status,0,c
  4041   001438  341E               	rlcf	ReadHR@i^0,w,c
  4042   00143A  6EE1               	movwf	fsr1l,c
  4043   00143C  341F               	rlcf	(ReadHR@i+1)^0,w,c
  4044   00143E  6EE2               	movwf	fsr1h,c
  4045   001440  0E00               	movlw	low _HoldingRegister
  4046   001442  26E1               	addwf	fsr1l,f,c
  4047   001444  0E03               	movlw	high _HoldingRegister
  4048   001446  22E2               	addwfc	fsr1h,f,c
  4049   001448  CFE6 F016          	movff	postinc1,??_ReadHR
  4050   00144C  CFE5 F017          	movff	postdec1,??_ReadHR+1
  4051   001450  C017  F016         	movff	??_ReadHR+1,??_ReadHR
  4052   001454  6A17               	clrf	(??_ReadHR+1)^0,c
  4053   001456  5016               	movf	??_ReadHR^0,w,c
  4054   001458  6EDF               	movwf	indf2,c
  4055   00145A                     
  4056                           ;libs/modbus.c: 146:                j++;
  4057   00145A  2A20               	incf	ReadHR@j^0,f,c
  4058   00145C                     
  4059                           ;libs/modbus.c: 147:                response[j] = HoldingRegister[i];
  4060   00145C  90D8               	bcf	status,0,c
  4061   00145E  341E               	rlcf	ReadHR@i^0,w,c
  4062   001460  6ED9               	movwf	fsr2l,c
  4063   001462  341F               	rlcf	(ReadHR@i+1)^0,w,c
  4064   001464  6EDA               	movwf	fsr2h,c
  4065   001466  0E00               	movlw	low _HoldingRegister
  4066   001468  26D9               	addwf	fsr2l,f,c
  4067   00146A  0E03               	movlw	high _HoldingRegister
  4068   00146C  22DA               	addwfc	fsr2h,f,c
  4069   00146E  0E00               	movlw	low _response
  4070   001470  2420               	addwf	ReadHR@j^0,w,c
  4071   001472  6EE1               	movwf	fsr1l,c
  4072   001474  6AE2               	clrf	fsr1h,c
  4073   001476  0E01               	movlw	high _response
  4074   001478  22E2               	addwfc	fsr1h,f,c
  4075   00147A  CFDF FFE7          	movff	indf2,indf1
  4076                           
  4077                           ;libs/modbus.c: 148:                j++;
  4078   00147E  2A20               	incf	ReadHR@j^0,f,c
  4079                           
  4080                           ;libs/modbus.c: 149:           }
  4081   001480  EF5C  F00A         	goto	l3276
  4082   001484                     l3268:
  4083                           
  4084                           ;libs/modbus.c: 151:                response[j] = 0x00;
  4085   001484  0E00               	movlw	low _response
  4086   001486  2420               	addwf	ReadHR@j^0,w,c
  4087   001488  6ED9               	movwf	fsr2l,c
  4088   00148A  6ADA               	clrf	fsr2h,c
  4089   00148C  0E01               	movlw	high _response
  4090   00148E  22DA               	addwfc	fsr2h,f,c
  4091   001490  6ADF               	clrf	indf2,c
  4092   001492                     
  4093                           ;libs/modbus.c: 152:                j++;
  4094   001492  2A20               	incf	ReadHR@j^0,f,c
  4095   001494                     
  4096                           ;libs/modbus.c: 153:                response[j] = HoldingRegister[i];
  4097   001494  90D8               	bcf	status,0,c
  4098   001496  341E               	rlcf	ReadHR@i^0,w,c
  4099   001498  6ED9               	movwf	fsr2l,c
  4100   00149A  341F               	rlcf	(ReadHR@i+1)^0,w,c
  4101   00149C  6EDA               	movwf	fsr2h,c
  4102   00149E  0E00               	movlw	low _HoldingRegister
  4103   0014A0  26D9               	addwf	fsr2l,f,c
  4104   0014A2  0E03               	movlw	high _HoldingRegister
  4105   0014A4  22DA               	addwfc	fsr2h,f,c
  4106   0014A6  0E00               	movlw	low _response
  4107   0014A8  2420               	addwf	ReadHR@j^0,w,c
  4108   0014AA  6EE1               	movwf	fsr1l,c
  4109   0014AC  6AE2               	clrf	fsr1h,c
  4110   0014AE  0E01               	movlw	high _response
  4111   0014B0  22E2               	addwfc	fsr1h,f,c
  4112   0014B2  CFDF FFE7          	movff	indf2,indf1
  4113   0014B6                     
  4114                           ;libs/modbus.c: 154:                j++;
  4115   0014B6  2A20               	incf	ReadHR@j^0,f,c
  4116   0014B8                     l3276:
  4117                           
  4118                           ;libs/modbus.c: 156:      }
  4119   0014B8  4A1E               	infsnz	ReadHR@i^0,f,c
  4120   0014BA  2A1F               	incf	(ReadHR@i+1)^0,f,c
  4121   0014BC                     l3278:
  4122   0014BC  501C               	movf	ReadHR@QtAddresses^0,w,c
  4123   0014BE  241A               	addwf	ReadHR@StartingAddress^0,w,c
  4124   0014C0  6E16               	movwf	??_ReadHR^0,c
  4125   0014C2  501D               	movf	(ReadHR@QtAddresses+1)^0,w,c
  4126   0014C4  201B               	addwfc	(ReadHR@StartingAddress+1)^0,w,c
  4127   0014C6  6E17               	movwf	(??_ReadHR+1)^0,c
  4128   0014C8  5016               	movf	??_ReadHR^0,w,c
  4129   0014CA  5C1E               	subwf	ReadHR@i^0,w,c
  4130   0014CC  5017               	movf	(??_ReadHR+1)^0,w,c
  4131   0014CE  581F               	subwfb	(ReadHR@i+1)^0,w,c
  4132   0014D0  A0D8               	btfss	status,0,c
  4133   0014D2  EF6D  F00A         	goto	u1541
  4134   0014D6  EF6F  F00A         	goto	u1540
  4135   0014DA                     u1541:
  4136   0014DA  EF01  F00A         	goto	l3260
  4137   0014DE                     u1540:
  4138   0014DE                     
  4139                           ;libs/modbus.c: 158:      CRC = CalculateCRC(response, j);
  4140   0014DE  0E00               	movlw	low _response
  4141   0014E0  6E0C               	movwf	CalculateCRC@string^0,c
  4142   0014E2  0E01               	movlw	high _response
  4143   0014E4  6E0D               	movwf	(CalculateCRC@string+1)^0,c
  4144   0014E6  C020  F00E         	movff	ReadHR@j,CalculateCRC@_long
  4145   0014EA  6A0F               	clrf	(CalculateCRC@_long+1)^0,c
  4146   0014EC  ECCB  F00F         	call	_CalculateCRC	;wreg free
  4147   0014F0  C00C  F018         	movff	?_CalculateCRC,ReadHR@CRC
  4148   0014F4  C00D  F019         	movff	?_CalculateCRC+1,ReadHR@CRC+1
  4149   0014F8                     
  4150                           ;libs/modbus.c: 159:      response[j] = CRC << 8;
  4151   0014F8  0E00               	movlw	low _response
  4152   0014FA  2420               	addwf	ReadHR@j^0,w,c
  4153   0014FC  6ED9               	movwf	fsr2l,c
  4154   0014FE  6ADA               	clrf	fsr2h,c
  4155   001500  0E01               	movlw	high _response
  4156   001502  22DA               	addwfc	fsr2h,f,c
  4157   001504  6ADF               	clrf	indf2,c
  4158   001506                     
  4159                           ;libs/modbus.c: 160:      response[j+1] = CRC;
  4160   001506  0E01               	movlw	low (_response+1)
  4161   001508  2420               	addwf	ReadHR@j^0,w,c
  4162   00150A  6ED9               	movwf	fsr2l,c
  4163   00150C  6ADA               	clrf	fsr2h,c
  4164   00150E  0E01               	movlw	high (_response+1)
  4165   001510  22DA               	addwfc	fsr2h,f,c
  4166   001512  C018  FFDF         	movff	ReadHR@CRC,indf2
  4167   001516                     
  4168                           ;libs/modbus.c: 161:      j += 3;
  4169   001516  0E03               	movlw	3
  4170   001518  2620               	addwf	ReadHR@j^0,f,c
  4171   00151A                     
  4172                           ;libs/modbus.c: 162:      for(i = 0; i != j; i++){
  4173   00151A  0E00               	movlw	0
  4174   00151C  6E1F               	movwf	(ReadHR@i+1)^0,c
  4175   00151E  0E00               	movlw	0
  4176   001520  6E1E               	movwf	ReadHR@i^0,c
  4177   001522  EF9D  F00A         	goto	l3294
  4178   001526                     l3290:
  4179                           
  4180                           ;libs/modbus.c: 163:           TX1REG = response[i];
  4181   001526  0E00               	movlw	low _response
  4182   001528  241E               	addwf	ReadHR@i^0,w,c
  4183   00152A  6ED9               	movwf	fsr2l,c
  4184   00152C  0E01               	movlw	high _response
  4185   00152E  201F               	addwfc	(ReadHR@i+1)^0,w,c
  4186   001530  6EDA               	movwf	fsr2h,c
  4187   001532  50DF               	movf	indf2,w,c
  4188   001534  6E9A               	movwf	154,c	;volatile
  4189   001536                     
  4190                           ;libs/modbus.c: 164:      }
  4191   001536  4A1E               	infsnz	ReadHR@i^0,f,c
  4192   001538  2A1F               	incf	(ReadHR@i+1)^0,f,c
  4193   00153A                     l3294:
  4194   00153A  5020               	movf	ReadHR@j^0,w,c
  4195   00153C  6E16               	movwf	??_ReadHR^0,c
  4196   00153E  6A17               	clrf	(??_ReadHR+1)^0,c
  4197   001540  501E               	movf	ReadHR@i^0,w,c
  4198   001542  1816               	xorwf	??_ReadHR^0,w,c
  4199   001544  E107               	bnz	u1551
  4200   001546  501F               	movf	(ReadHR@i+1)^0,w,c
  4201   001548  1817               	xorwf	(??_ReadHR+1)^0,w,c
  4202   00154A  A4D8               	btfss	status,2,c
  4203   00154C  EFAA  F00A         	goto	u1551
  4204   001550  EFAC  F00A         	goto	u1550
  4205   001554                     u1551:
  4206   001554  EF93  F00A         	goto	l3290
  4207   001558                     u1550:
  4208   001558                     
  4209                           ;libs/modbus.c: 166:      ClearResponse();
  4210   001558  EC1B  F012         	call	_ClearResponse	;wreg free
  4211   00155C  0012               	return		;funcret
  4212   00155E                     __end_of_ReadHR:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _ReadDI *****************
  4216 ;; Defined at:
  4217 ;;		line 361 in file "libs/modbus.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  QtDI            2   30[COMRAM] unsigned short 
  4222 ;;  StartingAddr    2   27[COMRAM] unsigned short 
  4223 ;;  CRC             2   25[COMRAM] unsigned short 
  4224 ;;  k               1   37[COMRAM] unsigned char 
  4225 ;;  j               1   36[COMRAM] unsigned char 
  4226 ;;  i               1   35[COMRAM] unsigned char 
  4227 ;;  lsb             1   34[COMRAM] unsigned char 
  4228 ;;  l               1   33[COMRAM] unsigned char 
  4229 ;;  QtBytes         1   32[COMRAM] unsigned char 
  4230 ;;  udRemaining     1   29[COMRAM] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4241 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4243 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;Total ram usage:       17 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 5
  4247 ;; This function calls:
  4248 ;;		_CalculateCRC
  4249 ;;		_ClearResponse
  4250 ;; This function is called by:
  4251 ;;		_DecodePacket
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text28
  4256   001190                     __ptext28:
  4257                           	callstack 0
  4258   001190                     _ReadDI:
  4259                           	callstack 24
  4260   001190                     
  4261                           ;libs/modbus.c: 364:      uint16_t QtDI = 0;
  4262   001190  0E00               	movlw	0
  4263   001192  6E20               	movwf	(ReadDI@QtDI+1)^0,c
  4264   001194  0E00               	movlw	0
  4265   001196  6E1F               	movwf	ReadDI@QtDI^0,c
  4266                           
  4267                           ;libs/modbus.c: 366:      uint8_t QtBytes = 0;
  4268   001198  0E00               	movlw	0
  4269   00119A  6E21               	movwf	ReadDI@QtBytes^0,c
  4270                           
  4271                           ;libs/modbus.c: 367:      uint8_t udRemaining = 0;
  4272   00119C  0E00               	movlw	0
  4273   00119E  6E1E               	movwf	ReadDI@udRemaining^0,c
  4274                           
  4275                           ;libs/modbus.c: 368:      uint8_t lsb = 0;
  4276   0011A0  0E00               	movlw	0
  4277   0011A2  6E23               	movwf	ReadDI@lsb^0,c
  4278                           
  4279                           ;libs/modbus.c: 370:      uint16_t CRC = 0;
  4280   0011A4  0E00               	movlw	0
  4281   0011A6  6E1B               	movwf	(ReadDI@CRC+1)^0,c
  4282   0011A8  0E00               	movlw	0
  4283   0011AA  6E1A               	movwf	ReadDI@CRC^0,c
  4284                           
  4285                           ;libs/modbus.c: 371:      uint8_t i,j,k,l = 0;
  4286   0011AC  0E00               	movlw	0
  4287   0011AE  6E22               	movwf	ReadDI@l^0,c
  4288   0011B0                     
  4289                           ;libs/modbus.c: 373:      StartingAddress = received[2];
  4290   0011B0  C202  F01C         	movff	_received+2,ReadDI@StartingAddress	;volatile
  4291   0011B4  6A1D               	clrf	(ReadDI@StartingAddress+1)^0,c
  4292                           
  4293                           ;libs/modbus.c: 374:      StartingAddress <<= 8;
  4294   0011B6  501C               	movf	ReadDI@StartingAddress^0,w,c
  4295   0011B8  6E1D               	movwf	(ReadDI@StartingAddress+1)^0,c
  4296   0011BA  6A1C               	clrf	ReadDI@StartingAddress^0,c
  4297   0011BC                     
  4298                           ;libs/modbus.c: 375:      StartingAddress != received[3];
  4299   0011BC  0102               	movlb	2	; () banked
  4300   0011BE  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  4301   0011C0                     
  4302                           ; BSR set to: 2
  4303                           ;libs/modbus.c: 377:      QtDI = received[4];
  4304   0011C0  C204  F01F         	movff	_received+4,ReadDI@QtDI	;volatile
  4305   0011C4  6A20               	clrf	(ReadDI@QtDI+1)^0,c
  4306   0011C6                     
  4307                           ; BSR set to: 2
  4308                           ;libs/modbus.c: 378:      QtDI <<= 8;
  4309   0011C6  501F               	movf	ReadDI@QtDI^0,w,c
  4310   0011C8  6E20               	movwf	(ReadDI@QtDI+1)^0,c
  4311   0011CA  6A1F               	clrf	ReadDI@QtDI^0,c
  4312   0011CC                     
  4313                           ; BSR set to: 2
  4314                           ;libs/modbus.c: 379:      QtDI |= received[5];
  4315   0011CC  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  4316   0011CE  121F               	iorwf	ReadDI@QtDI^0,f,c
  4317   0011D0                     
  4318                           ; BSR set to: 2
  4319                           ;libs/modbus.c: 381:      QtBytes = QtDI / 8;
  4320   0011D0  C01F  F016         	movff	ReadDI@QtDI,??_ReadDI
  4321   0011D4  C020  F017         	movff	ReadDI@QtDI+1,??_ReadDI+1
  4322   0011D8  90D8               	bcf	status,0,c
  4323   0011DA  3217               	rrcf	(??_ReadDI+1)^0,f,c
  4324   0011DC  3216               	rrcf	??_ReadDI^0,f,c
  4325   0011DE  90D8               	bcf	status,0,c
  4326   0011E0  3217               	rrcf	(??_ReadDI+1)^0,f,c
  4327   0011E2  3216               	rrcf	??_ReadDI^0,f,c
  4328   0011E4  90D8               	bcf	status,0,c
  4329   0011E6  3217               	rrcf	(??_ReadDI+1)^0,f,c
  4330   0011E8  3216               	rrcf	??_ReadDI^0,f,c
  4331   0011EA  5016               	movf	??_ReadDI^0,w,c
  4332   0011EC  6E21               	movwf	ReadDI@QtBytes^0,c
  4333   0011EE                     
  4334                           ; BSR set to: 2
  4335                           ;libs/modbus.c: 382:      udRemaining = QtDI % 8;
  4336   0011EE  501F               	movf	ReadDI@QtDI^0,w,c
  4337   0011F0  0B07               	andlw	7
  4338   0011F2  6E1E               	movwf	ReadDI@udRemaining^0,c
  4339   0011F4                     
  4340                           ; BSR set to: 2
  4341                           ;libs/modbus.c: 383:      if(udRemaining){
  4342   0011F4  501E               	movf	ReadDI@udRemaining^0,w,c
  4343   0011F6  B4D8               	btfsc	status,2,c
  4344   0011F8  EF00  F009         	goto	u1431
  4345   0011FC  EF02  F009         	goto	u1430
  4346   001200                     u1431:
  4347   001200  EF03  F009         	goto	l3168
  4348   001204                     u1430:
  4349   001204                     
  4350                           ; BSR set to: 2
  4351                           ;libs/modbus.c: 384:           QtBytes += 1;
  4352   001204  2A21               	incf	ReadDI@QtBytes^0,f,c
  4353   001206                     l3168:
  4354                           
  4355                           ; BSR set to: 2
  4356                           ;libs/modbus.c: 387:      response[0] = 0x25;
  4357   001206  0E25               	movlw	37
  4358   001208  0101               	movlb	1	; () banked
  4359   00120A  6F00               	movwf	_response& (0+255),b	;volatile
  4360   00120C                     
  4361                           ; BSR set to: 1
  4362                           ;libs/modbus.c: 388:      response[1] = 0x02;
  4363   00120C  0E02               	movlw	2
  4364   00120E  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  4365   001210                     
  4366                           ; BSR set to: 1
  4367                           ;libs/modbus.c: 389:      response[2] = QtBytes;
  4368   001210  C021  F102         	movff	ReadDI@QtBytes,_response+2	;volatile
  4369   001214                     
  4370                           ; BSR set to: 1
  4371                           ;libs/modbus.c: 391:      l = StartingAddress;
  4372   001214  C01C  F022         	movff	ReadDI@StartingAddress,ReadDI@l
  4373   001218                     
  4374                           ; BSR set to: 1
  4375                           ;libs/modbus.c: 392:      k = 3;
  4376   001218  0E03               	movlw	3
  4377   00121A  6E26               	movwf	ReadDI@k^0,c
  4378   00121C                     
  4379                           ; BSR set to: 1
  4380                           ;libs/modbus.c: 393:      for(i = QtBytes; i != 0; i--){
  4381   00121C  C021  F024         	movff	ReadDI@QtBytes,ReadDI@i
  4382   001220                     l3180:
  4383   001220  5024               	movf	ReadDI@i^0,w,c
  4384   001222  A4D8               	btfss	status,2,c
  4385   001224  EF16  F009         	goto	u1441
  4386   001228  EF18  F009         	goto	u1440
  4387   00122C                     u1441:
  4388   00122C  EF1A  F009         	goto	l3184
  4389   001230                     u1440:
  4390   001230  EF92  F009         	goto	l3228
  4391   001234                     l3184:
  4392                           
  4393                           ;libs/modbus.c: 394:           if(i > 1){
  4394   001234  0E01               	movlw	1
  4395   001236  6424               	cpfsgt	ReadDI@i^0,c
  4396   001238  EF20  F009         	goto	u1451
  4397   00123C  EF22  F009         	goto	u1450
  4398   001240                     u1451:
  4399   001240  EF58  F009         	goto	l3208
  4400   001244                     u1450:
  4401   001244                     
  4402                           ;libs/modbus.c: 395:                for(j = 0; j != 8; j++){
  4403   001244  0E00               	movlw	0
  4404   001246  6E25               	movwf	ReadDI@j^0,c
  4405   001248                     l3192:
  4406                           
  4407                           ;libs/modbus.c: 396:                     if(DiscreteInput[l]){
  4408   001248  5022               	movf	ReadDI@l^0,w,c
  4409   00124A  0F60               	addlw	low _DiscreteInput
  4410   00124C  6ED9               	movwf	fsr2l,c
  4411   00124E  6ADA               	clrf	fsr2h,c
  4412   001250  50DF               	movf	indf2,w,c
  4413   001252  B4D8               	btfsc	status,2,c
  4414   001254  EF2E  F009         	goto	u1461
  4415   001258  EF30  F009         	goto	u1460
  4416   00125C                     u1461:
  4417   00125C  EF34  F009         	goto	l3196
  4418   001260                     u1460:
  4419   001260                     
  4420                           ;libs/modbus.c: 397:                          lsb = 1;
  4421   001260  0E01               	movlw	1
  4422   001262  6E23               	movwf	ReadDI@lsb^0,c
  4423                           
  4424                           ;libs/modbus.c: 398:                     }
  4425   001264  EF36  F009         	goto	l3198
  4426   001268                     l3196:
  4427                           
  4428                           ;libs/modbus.c: 400:                          lsb = 0;
  4429   001268  0E00               	movlw	0
  4430   00126A  6E23               	movwf	ReadDI@lsb^0,c
  4431   00126C                     l3198:
  4432                           
  4433                           ;libs/modbus.c: 402:                     response[k] ^= (lsb << j);
  4434   00126C  C025  F016         	movff	ReadDI@j,??_ReadDI
  4435   001270  C023  F017         	movff	ReadDI@lsb,??_ReadDI+1
  4436   001274  2A16               	incf	??_ReadDI^0,f,c
  4437   001276  EF3F  F009         	goto	u1474
  4438   00127A                     u1475:
  4439   00127A  90D8               	bcf	status,0,c
  4440   00127C  3617               	rlcf	(??_ReadDI+1)^0,f,c
  4441   00127E                     u1474:
  4442   00127E  2E16               	decfsz	??_ReadDI^0,f,c
  4443   001280  EF3D  F009         	goto	u1475
  4444   001284  0E00               	movlw	low _response
  4445   001286  2426               	addwf	ReadDI@k^0,w,c
  4446   001288  6ED9               	movwf	fsr2l,c
  4447   00128A  6ADA               	clrf	fsr2h,c
  4448   00128C  0E01               	movlw	high _response
  4449   00128E  22DA               	addwfc	fsr2h,f,c
  4450   001290  5017               	movf	(??_ReadDI+1)^0,w,c
  4451   001292  1ADF               	xorwf	indf2,f,c
  4452   001294                     
  4453                           ;libs/modbus.c: 403:                     l++;
  4454   001294  2A22               	incf	ReadDI@l^0,f,c
  4455   001296                     
  4456                           ;libs/modbus.c: 404:                }
  4457   001296  2A25               	incf	ReadDI@j^0,f,c
  4458   001298  0E08               	movlw	8
  4459   00129A  1825               	xorwf	ReadDI@j^0,w,c
  4460   00129C  A4D8               	btfss	status,2,c
  4461   00129E  EF53  F009         	goto	u1481
  4462   0012A2  EF55  F009         	goto	u1480
  4463   0012A6                     u1481:
  4464   0012A6  EF24  F009         	goto	l3192
  4465   0012AA                     u1480:
  4466   0012AA                     l3206:
  4467                           
  4468                           ;libs/modbus.c: 405:                k++;
  4469   0012AA  2A26               	incf	ReadDI@k^0,f,c
  4470                           
  4471                           ;libs/modbus.c: 406:           }
  4472   0012AC  EF8F  F009         	goto	l142
  4473   0012B0                     l3208:
  4474                           
  4475                           ;libs/modbus.c: 408:                for(j = 0; j != udRemaining; j++){
  4476   0012B0  0E00               	movlw	0
  4477   0012B2  6E25               	movwf	ReadDI@j^0,c
  4478   0012B4  EF84  F009         	goto	l3222
  4479   0012B8                     l3210:
  4480                           
  4481                           ;libs/modbus.c: 409:                     if(DiscreteInput[l]){
  4482   0012B8  5022               	movf	ReadDI@l^0,w,c
  4483   0012BA  0F60               	addlw	low _DiscreteInput
  4484   0012BC  6ED9               	movwf	fsr2l,c
  4485   0012BE  6ADA               	clrf	fsr2h,c
  4486   0012C0  50DF               	movf	indf2,w,c
  4487   0012C2  B4D8               	btfsc	status,2,c
  4488   0012C4  EF66  F009         	goto	u1491
  4489   0012C8  EF68  F009         	goto	u1490
  4490   0012CC                     u1491:
  4491   0012CC  EF6C  F009         	goto	l3214
  4492   0012D0                     u1490:
  4493   0012D0                     
  4494                           ;libs/modbus.c: 410:                          lsb = 1;
  4495   0012D0  0E01               	movlw	1
  4496   0012D2  6E23               	movwf	ReadDI@lsb^0,c
  4497                           
  4498                           ;libs/modbus.c: 411:                     }
  4499   0012D4  EF6E  F009         	goto	l3216
  4500   0012D8                     l3214:
  4501                           
  4502                           ;libs/modbus.c: 413:                          lsb = 0;
  4503   0012D8  0E00               	movlw	0
  4504   0012DA  6E23               	movwf	ReadDI@lsb^0,c
  4505   0012DC                     l3216:
  4506                           
  4507                           ;libs/modbus.c: 415:                     response[k] ^= (lsb << j);
  4508   0012DC  C025  F016         	movff	ReadDI@j,??_ReadDI
  4509   0012E0  C023  F017         	movff	ReadDI@lsb,??_ReadDI+1
  4510   0012E4  2A16               	incf	??_ReadDI^0,f,c
  4511   0012E6  EF77  F009         	goto	u1504
  4512   0012EA                     u1505:
  4513   0012EA  90D8               	bcf	status,0,c
  4514   0012EC  3617               	rlcf	(??_ReadDI+1)^0,f,c
  4515   0012EE                     u1504:
  4516   0012EE  2E16               	decfsz	??_ReadDI^0,f,c
  4517   0012F0  EF75  F009         	goto	u1505
  4518   0012F4  0E00               	movlw	low _response
  4519   0012F6  2426               	addwf	ReadDI@k^0,w,c
  4520   0012F8  6ED9               	movwf	fsr2l,c
  4521   0012FA  6ADA               	clrf	fsr2h,c
  4522   0012FC  0E01               	movlw	high _response
  4523   0012FE  22DA               	addwfc	fsr2h,f,c
  4524   001300  5017               	movf	(??_ReadDI+1)^0,w,c
  4525   001302  1ADF               	xorwf	indf2,f,c
  4526   001304                     
  4527                           ;libs/modbus.c: 416:                     l++;
  4528   001304  2A22               	incf	ReadDI@l^0,f,c
  4529   001306                     
  4530                           ;libs/modbus.c: 417:                }
  4531   001306  2A25               	incf	ReadDI@j^0,f,c
  4532   001308                     l3222:
  4533   001308  501E               	movf	ReadDI@udRemaining^0,w,c
  4534   00130A  1825               	xorwf	ReadDI@j^0,w,c
  4535   00130C  A4D8               	btfss	status,2,c
  4536   00130E  EF8B  F009         	goto	u1511
  4537   001312  EF8D  F009         	goto	u1510
  4538   001316                     u1511:
  4539   001316  EF5C  F009         	goto	l3210
  4540   00131A                     u1510:
  4541   00131A  EF55  F009         	goto	l3206
  4542   00131E                     l142:
  4543                           
  4544                           ;libs/modbus.c: 420:      }
  4545   00131E  0624               	decf	ReadDI@i^0,f,c
  4546   001320  EF10  F009         	goto	l3180
  4547   001324                     l3228:
  4548                           
  4549                           ;libs/modbus.c: 421:      CRC = CalculateCRC(response,k);
  4550   001324  0E00               	movlw	low _response
  4551   001326  6E0C               	movwf	CalculateCRC@string^0,c
  4552   001328  0E01               	movlw	high _response
  4553   00132A  6E0D               	movwf	(CalculateCRC@string+1)^0,c
  4554   00132C  C026  F00E         	movff	ReadDI@k,CalculateCRC@_long
  4555   001330  6A0F               	clrf	(CalculateCRC@_long+1)^0,c
  4556   001332  ECCB  F00F         	call	_CalculateCRC	;wreg free
  4557   001336  C00C  F01A         	movff	?_CalculateCRC,ReadDI@CRC
  4558   00133A  C00D  F01B         	movff	?_CalculateCRC+1,ReadDI@CRC+1
  4559   00133E                     
  4560                           ;libs/modbus.c: 422:      response[k] = CRC << 8;
  4561   00133E  0E00               	movlw	low _response
  4562   001340  2426               	addwf	ReadDI@k^0,w,c
  4563   001342  6ED9               	movwf	fsr2l,c
  4564   001344  6ADA               	clrf	fsr2h,c
  4565   001346  0E01               	movlw	high _response
  4566   001348  22DA               	addwfc	fsr2h,f,c
  4567   00134A  6ADF               	clrf	indf2,c
  4568   00134C                     
  4569                           ;libs/modbus.c: 423:      response[k+1] = CRC;
  4570   00134C  0E01               	movlw	low (_response+1)
  4571   00134E  2426               	addwf	ReadDI@k^0,w,c
  4572   001350  6ED9               	movwf	fsr2l,c
  4573   001352  6ADA               	clrf	fsr2h,c
  4574   001354  0E01               	movlw	high (_response+1)
  4575   001356  22DA               	addwfc	fsr2h,f,c
  4576   001358  C01A  FFDF         	movff	ReadDI@CRC,indf2
  4577   00135C                     
  4578                           ;libs/modbus.c: 424:      for(i = 0; i != (k + 3); i++){
  4579   00135C  0E00               	movlw	0
  4580   00135E  6E24               	movwf	ReadDI@i^0,c
  4581   001360  EFBB  F009         	goto	l3240
  4582   001364                     l3236:
  4583                           
  4584                           ;libs/modbus.c: 425:           TX1REG = response[k];
  4585   001364  0E00               	movlw	low _response
  4586   001366  2426               	addwf	ReadDI@k^0,w,c
  4587   001368  6ED9               	movwf	fsr2l,c
  4588   00136A  6ADA               	clrf	fsr2h,c
  4589   00136C  0E01               	movlw	high _response
  4590   00136E  22DA               	addwfc	fsr2h,f,c
  4591   001370  50DF               	movf	indf2,w,c
  4592   001372  6E9A               	movwf	154,c	;volatile
  4593   001374                     
  4594                           ;libs/modbus.c: 426:      }
  4595   001374  2A24               	incf	ReadDI@i^0,f,c
  4596   001376                     l3240:
  4597   001376  5024               	movf	ReadDI@i^0,w,c
  4598   001378  6E16               	movwf	??_ReadDI^0,c
  4599   00137A  6A17               	clrf	(??_ReadDI+1)^0,c
  4600   00137C  5026               	movf	ReadDI@k^0,w,c
  4601   00137E  6E18               	movwf	(??_ReadDI+2)^0,c
  4602   001380  6A19               	clrf	(??_ReadDI+3)^0,c
  4603   001382  0E03               	movlw	3
  4604   001384  2618               	addwf	(??_ReadDI+2)^0,f,c
  4605   001386  0E00               	movlw	0
  4606   001388  2219               	addwfc	(??_ReadDI+3)^0,f,c
  4607   00138A  5016               	movf	??_ReadDI^0,w,c
  4608   00138C  1818               	xorwf	(??_ReadDI+2)^0,w,c
  4609   00138E  E107               	bnz	u1521
  4610   001390  5017               	movf	(??_ReadDI+1)^0,w,c
  4611   001392  1819               	xorwf	(??_ReadDI+3)^0,w,c
  4612   001394  A4D8               	btfss	status,2,c
  4613   001396  EFCF  F009         	goto	u1521
  4614   00139A  EFD1  F009         	goto	u1520
  4615   00139E                     u1521:
  4616   00139E  EFB2  F009         	goto	l3236
  4617   0013A2                     u1520:
  4618   0013A2                     
  4619                           ;libs/modbus.c: 427:      ClearResponse();
  4620   0013A2  EC1B  F012         	call	_ClearResponse	;wreg free
  4621   0013A6  0012               	return		;funcret
  4622   0013A8                     __end_of_ReadDI:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _ReadCoil *****************
  4626 ;; Defined at:
  4627 ;;		line 286 in file "libs/modbus.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  QtCoils         2   30[COMRAM] unsigned short 
  4632 ;;  StartingAddr    2   27[COMRAM] unsigned short 
  4633 ;;  CRC             2   25[COMRAM] unsigned short 
  4634 ;;  k               1   37[COMRAM] unsigned char 
  4635 ;;  j               1   36[COMRAM] unsigned char 
  4636 ;;  i               1   35[COMRAM] unsigned char 
  4637 ;;  lsb             1   34[COMRAM] unsigned char 
  4638 ;;  l               1   33[COMRAM] unsigned char 
  4639 ;;  QtBytes         1   32[COMRAM] unsigned char 
  4640 ;;  udRemaining     1   29[COMRAM] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4651 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4653 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4654 ;;Total ram usage:       17 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 5
  4657 ;; This function calls:
  4658 ;;		_CalculateCRC
  4659 ;;		_ClearResponse
  4660 ;; This function is called by:
  4661 ;;		_DecodePacket
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text29
  4666   000F76                     __ptext29:
  4667                           	callstack 0
  4668   000F76                     _ReadCoil:
  4669                           	callstack 24
  4670   000F76                     
  4671                           ;libs/modbus.c: 289:      uint16_t QtCoils = 0;
  4672   000F76  0E00               	movlw	0
  4673   000F78  6E20               	movwf	(ReadCoil@QtCoils+1)^0,c
  4674   000F7A  0E00               	movlw	0
  4675   000F7C  6E1F               	movwf	ReadCoil@QtCoils^0,c
  4676                           
  4677                           ;libs/modbus.c: 291:      uint8_t QtBytes = 0;
  4678   000F7E  0E00               	movlw	0
  4679   000F80  6E21               	movwf	ReadCoil@QtBytes^0,c
  4680                           
  4681                           ;libs/modbus.c: 292:      uint8_t udRemaining = 0;
  4682   000F82  0E00               	movlw	0
  4683   000F84  6E1E               	movwf	ReadCoil@udRemaining^0,c
  4684                           
  4685                           ;libs/modbus.c: 293:      uint8_t lsb = 0;
  4686   000F86  0E00               	movlw	0
  4687   000F88  6E23               	movwf	ReadCoil@lsb^0,c
  4688                           
  4689                           ;libs/modbus.c: 295:      uint16_t CRC = 0;
  4690   000F8A  0E00               	movlw	0
  4691   000F8C  6E1B               	movwf	(ReadCoil@CRC+1)^0,c
  4692   000F8E  0E00               	movlw	0
  4693   000F90  6E1A               	movwf	ReadCoil@CRC^0,c
  4694                           
  4695                           ;libs/modbus.c: 296:      uint8_t i,j,k,l = 0;
  4696   000F92  0E00               	movlw	0
  4697   000F94  6E22               	movwf	ReadCoil@l^0,c
  4698   000F96                     
  4699                           ;libs/modbus.c: 298:      StartingAddress = received[2];
  4700   000F96  C202  F01C         	movff	_received+2,ReadCoil@StartingAddress	;volatile
  4701   000F9A  6A1D               	clrf	(ReadCoil@StartingAddress+1)^0,c
  4702                           
  4703                           ;libs/modbus.c: 299:      StartingAddress <<= 8;
  4704   000F9C  501C               	movf	ReadCoil@StartingAddress^0,w,c
  4705   000F9E  6E1D               	movwf	(ReadCoil@StartingAddress+1)^0,c
  4706   000FA0  6A1C               	clrf	ReadCoil@StartingAddress^0,c
  4707   000FA2                     
  4708                           ;libs/modbus.c: 300:      StartingAddress |= received[3];
  4709   000FA2  0102               	movlb	2	; () banked
  4710   000FA4  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  4711   000FA6  121C               	iorwf	ReadCoil@StartingAddress^0,f,c
  4712   000FA8                     
  4713                           ; BSR set to: 2
  4714                           ;libs/modbus.c: 302:      QtCoils = received[4];
  4715   000FA8  C204  F01F         	movff	_received+4,ReadCoil@QtCoils	;volatile
  4716   000FAC  6A20               	clrf	(ReadCoil@QtCoils+1)^0,c
  4717   000FAE                     
  4718                           ; BSR set to: 2
  4719                           ;libs/modbus.c: 303:      QtCoils <<= 8;
  4720   000FAE  501F               	movf	ReadCoil@QtCoils^0,w,c
  4721   000FB0  6E20               	movwf	(ReadCoil@QtCoils+1)^0,c
  4722   000FB2  6A1F               	clrf	ReadCoil@QtCoils^0,c
  4723                           
  4724                           ;libs/modbus.c: 304:      QtCoils |= received[5];
  4725   000FB4  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  4726   000FB6  121F               	iorwf	ReadCoil@QtCoils^0,f,c
  4727                           
  4728                           ;libs/modbus.c: 306:      QtBytes = QtCoils / 8;
  4729   000FB8  C01F  F016         	movff	ReadCoil@QtCoils,??_ReadCoil
  4730   000FBC  C020  F017         	movff	ReadCoil@QtCoils+1,??_ReadCoil+1
  4731   000FC0  90D8               	bcf	status,0,c
  4732   000FC2  3217               	rrcf	(??_ReadCoil+1)^0,f,c
  4733   000FC4  3216               	rrcf	??_ReadCoil^0,f,c
  4734   000FC6  90D8               	bcf	status,0,c
  4735   000FC8  3217               	rrcf	(??_ReadCoil+1)^0,f,c
  4736   000FCA  3216               	rrcf	??_ReadCoil^0,f,c
  4737   000FCC  90D8               	bcf	status,0,c
  4738   000FCE  3217               	rrcf	(??_ReadCoil+1)^0,f,c
  4739   000FD0  3216               	rrcf	??_ReadCoil^0,f,c
  4740   000FD2  5016               	movf	??_ReadCoil^0,w,c
  4741   000FD4  6E21               	movwf	ReadCoil@QtBytes^0,c
  4742                           
  4743                           ;libs/modbus.c: 307:      udRemaining = QtCoils % 8;
  4744   000FD6  501F               	movf	ReadCoil@QtCoils^0,w,c
  4745   000FD8  0B07               	andlw	7
  4746   000FDA  6E1E               	movwf	ReadCoil@udRemaining^0,c
  4747   000FDC                     
  4748                           ; BSR set to: 2
  4749                           ;libs/modbus.c: 308:      if(udRemaining){QtBytes += 1;}
  4750   000FDC  501E               	movf	ReadCoil@udRemaining^0,w,c
  4751   000FDE  B4D8               	btfsc	status,2,c
  4752   000FE0  EFF4  F007         	goto	u1331
  4753   000FE4  EFF6  F007         	goto	u1330
  4754   000FE8                     u1331:
  4755   000FE8  EFF7  F007         	goto	l3072
  4756   000FEC                     u1330:
  4757   000FEC                     
  4758                           ; BSR set to: 2
  4759   000FEC  2A21               	incf	ReadCoil@QtBytes^0,f,c
  4760   000FEE                     l3072:
  4761                           
  4762                           ; BSR set to: 2
  4763                           ;libs/modbus.c: 310:      response[0] = 0x25;
  4764   000FEE  0E25               	movlw	37
  4765   000FF0  0101               	movlb	1	; () banked
  4766   000FF2  6F00               	movwf	_response& (0+255),b	;volatile
  4767   000FF4                     
  4768                           ; BSR set to: 1
  4769                           ;libs/modbus.c: 311:      response[1] = 0x01;
  4770   000FF4  0E01               	movlw	1
  4771   000FF6  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  4772   000FF8                     
  4773                           ; BSR set to: 1
  4774                           ;libs/modbus.c: 312:      response[2] = QtBytes;
  4775   000FF8  C021  F102         	movff	ReadCoil@QtBytes,_response+2	;volatile
  4776   000FFC                     
  4777                           ; BSR set to: 1
  4778                           ;libs/modbus.c: 314:      l = StartingAddress;
  4779   000FFC  C01C  F022         	movff	ReadCoil@StartingAddress,ReadCoil@l
  4780   001000                     
  4781                           ; BSR set to: 1
  4782                           ;libs/modbus.c: 315:      k = 3;
  4783   001000  0E03               	movlw	3
  4784   001002  6E26               	movwf	ReadCoil@k^0,c
  4785   001004                     
  4786                           ; BSR set to: 1
  4787                           ;libs/modbus.c: 316:      for(i = QtBytes; i != 0; i--){
  4788   001004  C021  F024         	movff	ReadCoil@QtBytes,ReadCoil@i
  4789   001008                     l3084:
  4790   001008  5024               	movf	ReadCoil@i^0,w,c
  4791   00100A  A4D8               	btfss	status,2,c
  4792   00100C  EF0A  F008         	goto	u1341
  4793   001010  EF0C  F008         	goto	u1340
  4794   001014                     u1341:
  4795   001014  EF0E  F008         	goto	l3088
  4796   001018                     u1340:
  4797   001018  EF86  F008         	goto	l3132
  4798   00101C                     l3088:
  4799                           
  4800                           ;libs/modbus.c: 317:           if(i > 1){
  4801   00101C  0E01               	movlw	1
  4802   00101E  6424               	cpfsgt	ReadCoil@i^0,c
  4803   001020  EF14  F008         	goto	u1351
  4804   001024  EF16  F008         	goto	u1350
  4805   001028                     u1351:
  4806   001028  EF4C  F008         	goto	l3112
  4807   00102C                     u1350:
  4808   00102C                     
  4809                           ;libs/modbus.c: 318:                for(j = 0; j != 8; j++){
  4810   00102C  0E00               	movlw	0
  4811   00102E  6E25               	movwf	ReadCoil@j^0,c
  4812   001030                     l3096:
  4813                           
  4814                           ;libs/modbus.c: 319:                     if(Coils[l]){
  4815   001030  5022               	movf	ReadCoil@l^0,w,c
  4816   001032  0F92               	addlw	low _Coils
  4817   001034  6ED9               	movwf	fsr2l,c
  4818   001036  6ADA               	clrf	fsr2h,c
  4819   001038  50DF               	movf	indf2,w,c
  4820   00103A  B4D8               	btfsc	status,2,c
  4821   00103C  EF22  F008         	goto	u1361
  4822   001040  EF24  F008         	goto	u1360
  4823   001044                     u1361:
  4824   001044  EF28  F008         	goto	l3100
  4825   001048                     u1360:
  4826   001048                     
  4827                           ;libs/modbus.c: 320:                          lsb = 1;
  4828   001048  0E01               	movlw	1
  4829   00104A  6E23               	movwf	ReadCoil@lsb^0,c
  4830                           
  4831                           ;libs/modbus.c: 321:                     }
  4832   00104C  EF2A  F008         	goto	l3102
  4833   001050                     l3100:
  4834                           
  4835                           ;libs/modbus.c: 323:                          lsb = 0;
  4836   001050  0E00               	movlw	0
  4837   001052  6E23               	movwf	ReadCoil@lsb^0,c
  4838   001054                     l3102:
  4839                           
  4840                           ;libs/modbus.c: 325:                     response[k] ^= (lsb << j);
  4841   001054  C025  F016         	movff	ReadCoil@j,??_ReadCoil
  4842   001058  C023  F017         	movff	ReadCoil@lsb,??_ReadCoil+1
  4843   00105C  2A16               	incf	??_ReadCoil^0,f,c
  4844   00105E  EF33  F008         	goto	u1374
  4845   001062                     u1375:
  4846   001062  90D8               	bcf	status,0,c
  4847   001064  3617               	rlcf	(??_ReadCoil+1)^0,f,c
  4848   001066                     u1374:
  4849   001066  2E16               	decfsz	??_ReadCoil^0,f,c
  4850   001068  EF31  F008         	goto	u1375
  4851   00106C  0E00               	movlw	low _response
  4852   00106E  2426               	addwf	ReadCoil@k^0,w,c
  4853   001070  6ED9               	movwf	fsr2l,c
  4854   001072  6ADA               	clrf	fsr2h,c
  4855   001074  0E01               	movlw	high _response
  4856   001076  22DA               	addwfc	fsr2h,f,c
  4857   001078  5017               	movf	(??_ReadCoil+1)^0,w,c
  4858   00107A  1ADF               	xorwf	indf2,f,c
  4859   00107C                     
  4860                           ;libs/modbus.c: 326:                     l++;
  4861   00107C  2A22               	incf	ReadCoil@l^0,f,c
  4862   00107E                     
  4863                           ;libs/modbus.c: 327:                }
  4864   00107E  2A25               	incf	ReadCoil@j^0,f,c
  4865   001080  0E08               	movlw	8
  4866   001082  1825               	xorwf	ReadCoil@j^0,w,c
  4867   001084  A4D8               	btfss	status,2,c
  4868   001086  EF47  F008         	goto	u1381
  4869   00108A  EF49  F008         	goto	u1380
  4870   00108E                     u1381:
  4871   00108E  EF18  F008         	goto	l3096
  4872   001092                     u1380:
  4873   001092                     l3110:
  4874                           
  4875                           ;libs/modbus.c: 328:                k++;
  4876   001092  2A26               	incf	ReadCoil@k^0,f,c
  4877                           
  4878                           ;libs/modbus.c: 329:           }
  4879   001094  EF83  F008         	goto	l122
  4880   001098                     l3112:
  4881                           
  4882                           ;libs/modbus.c: 331:                for(j = 0; j != udRemaining; j++){
  4883   001098  0E00               	movlw	0
  4884   00109A  6E25               	movwf	ReadCoil@j^0,c
  4885   00109C  EF78  F008         	goto	l3126
  4886   0010A0                     l3114:
  4887                           
  4888                           ;libs/modbus.c: 332:                     if(Coils[l]){
  4889   0010A0  5022               	movf	ReadCoil@l^0,w,c
  4890   0010A2  0F92               	addlw	low _Coils
  4891   0010A4  6ED9               	movwf	fsr2l,c
  4892   0010A6  6ADA               	clrf	fsr2h,c
  4893   0010A8  50DF               	movf	indf2,w,c
  4894   0010AA  B4D8               	btfsc	status,2,c
  4895   0010AC  EF5A  F008         	goto	u1391
  4896   0010B0  EF5C  F008         	goto	u1390
  4897   0010B4                     u1391:
  4898   0010B4  EF60  F008         	goto	l3118
  4899   0010B8                     u1390:
  4900   0010B8                     
  4901                           ;libs/modbus.c: 333:                          lsb = 1;
  4902   0010B8  0E01               	movlw	1
  4903   0010BA  6E23               	movwf	ReadCoil@lsb^0,c
  4904                           
  4905                           ;libs/modbus.c: 334:                     }
  4906   0010BC  EF62  F008         	goto	l3120
  4907   0010C0                     l3118:
  4908                           
  4909                           ;libs/modbus.c: 336:                          lsb = 0;
  4910   0010C0  0E00               	movlw	0
  4911   0010C2  6E23               	movwf	ReadCoil@lsb^0,c
  4912   0010C4                     l3120:
  4913                           
  4914                           ;libs/modbus.c: 338:                     response[k] ^= (lsb << j);
  4915   0010C4  C025  F016         	movff	ReadCoil@j,??_ReadCoil
  4916   0010C8  C023  F017         	movff	ReadCoil@lsb,??_ReadCoil+1
  4917   0010CC  2A16               	incf	??_ReadCoil^0,f,c
  4918   0010CE  EF6B  F008         	goto	u1404
  4919   0010D2                     u1405:
  4920   0010D2  90D8               	bcf	status,0,c
  4921   0010D4  3617               	rlcf	(??_ReadCoil+1)^0,f,c
  4922   0010D6                     u1404:
  4923   0010D6  2E16               	decfsz	??_ReadCoil^0,f,c
  4924   0010D8  EF69  F008         	goto	u1405
  4925   0010DC  0E00               	movlw	low _response
  4926   0010DE  2426               	addwf	ReadCoil@k^0,w,c
  4927   0010E0  6ED9               	movwf	fsr2l,c
  4928   0010E2  6ADA               	clrf	fsr2h,c
  4929   0010E4  0E01               	movlw	high _response
  4930   0010E6  22DA               	addwfc	fsr2h,f,c
  4931   0010E8  5017               	movf	(??_ReadCoil+1)^0,w,c
  4932   0010EA  1ADF               	xorwf	indf2,f,c
  4933   0010EC                     
  4934                           ;libs/modbus.c: 339:                     l++;
  4935   0010EC  2A22               	incf	ReadCoil@l^0,f,c
  4936   0010EE                     
  4937                           ;libs/modbus.c: 340:                }
  4938   0010EE  2A25               	incf	ReadCoil@j^0,f,c
  4939   0010F0                     l3126:
  4940   0010F0  501E               	movf	ReadCoil@udRemaining^0,w,c
  4941   0010F2  1825               	xorwf	ReadCoil@j^0,w,c
  4942   0010F4  A4D8               	btfss	status,2,c
  4943   0010F6  EF7F  F008         	goto	u1411
  4944   0010FA  EF81  F008         	goto	u1410
  4945   0010FE                     u1411:
  4946   0010FE  EF50  F008         	goto	l3114
  4947   001102                     u1410:
  4948   001102  EF49  F008         	goto	l3110
  4949   001106                     l122:
  4950                           
  4951                           ;libs/modbus.c: 343:      }
  4952   001106  0624               	decf	ReadCoil@i^0,f,c
  4953   001108  EF04  F008         	goto	l3084
  4954   00110C                     l3132:
  4955                           
  4956                           ;libs/modbus.c: 344:      CRC = CalculateCRC(response,k);
  4957   00110C  0E00               	movlw	low _response
  4958   00110E  6E0C               	movwf	CalculateCRC@string^0,c
  4959   001110  0E01               	movlw	high _response
  4960   001112  6E0D               	movwf	(CalculateCRC@string+1)^0,c
  4961   001114  C026  F00E         	movff	ReadCoil@k,CalculateCRC@_long
  4962   001118  6A0F               	clrf	(CalculateCRC@_long+1)^0,c
  4963   00111A  ECCB  F00F         	call	_CalculateCRC	;wreg free
  4964   00111E  C00C  F01A         	movff	?_CalculateCRC,ReadCoil@CRC
  4965   001122  C00D  F01B         	movff	?_CalculateCRC+1,ReadCoil@CRC+1
  4966   001126                     
  4967                           ;libs/modbus.c: 345:      response[k] = CRC << 8;
  4968   001126  0E00               	movlw	low _response
  4969   001128  2426               	addwf	ReadCoil@k^0,w,c
  4970   00112A  6ED9               	movwf	fsr2l,c
  4971   00112C  6ADA               	clrf	fsr2h,c
  4972   00112E  0E01               	movlw	high _response
  4973   001130  22DA               	addwfc	fsr2h,f,c
  4974   001132  6ADF               	clrf	indf2,c
  4975   001134                     
  4976                           ;libs/modbus.c: 346:      response[k+1] = CRC;
  4977   001134  0E01               	movlw	low (_response+1)
  4978   001136  2426               	addwf	ReadCoil@k^0,w,c
  4979   001138  6ED9               	movwf	fsr2l,c
  4980   00113A  6ADA               	clrf	fsr2h,c
  4981   00113C  0E01               	movlw	high (_response+1)
  4982   00113E  22DA               	addwfc	fsr2h,f,c
  4983   001140  C01A  FFDF         	movff	ReadCoil@CRC,indf2
  4984   001144                     
  4985                           ;libs/modbus.c: 347:      for(i = 0; i != (k + 3); i++){
  4986   001144  0E00               	movlw	0
  4987   001146  6E24               	movwf	ReadCoil@i^0,c
  4988   001148  EFAF  F008         	goto	l3144
  4989   00114C                     l3140:
  4990                           
  4991                           ;libs/modbus.c: 348:           TX1REG = response[i];
  4992   00114C  0E00               	movlw	low _response
  4993   00114E  2424               	addwf	ReadCoil@i^0,w,c
  4994   001150  6ED9               	movwf	fsr2l,c
  4995   001152  6ADA               	clrf	fsr2h,c
  4996   001154  0E01               	movlw	high _response
  4997   001156  22DA               	addwfc	fsr2h,f,c
  4998   001158  50DF               	movf	indf2,w,c
  4999   00115A  6E9A               	movwf	154,c	;volatile
  5000   00115C                     
  5001                           ;libs/modbus.c: 349:      }
  5002   00115C  2A24               	incf	ReadCoil@i^0,f,c
  5003   00115E                     l3144:
  5004   00115E  5024               	movf	ReadCoil@i^0,w,c
  5005   001160  6E16               	movwf	??_ReadCoil^0,c
  5006   001162  6A17               	clrf	(??_ReadCoil+1)^0,c
  5007   001164  5026               	movf	ReadCoil@k^0,w,c
  5008   001166  6E18               	movwf	(??_ReadCoil+2)^0,c
  5009   001168  6A19               	clrf	(??_ReadCoil+3)^0,c
  5010   00116A  0E03               	movlw	3
  5011   00116C  2618               	addwf	(??_ReadCoil+2)^0,f,c
  5012   00116E  0E00               	movlw	0
  5013   001170  2219               	addwfc	(??_ReadCoil+3)^0,f,c
  5014   001172  5016               	movf	??_ReadCoil^0,w,c
  5015   001174  1818               	xorwf	(??_ReadCoil+2)^0,w,c
  5016   001176  E107               	bnz	u1421
  5017   001178  5017               	movf	(??_ReadCoil+1)^0,w,c
  5018   00117A  1819               	xorwf	(??_ReadCoil+3)^0,w,c
  5019   00117C  A4D8               	btfss	status,2,c
  5020   00117E  EFC3  F008         	goto	u1421
  5021   001182  EFC5  F008         	goto	u1420
  5022   001186                     u1421:
  5023   001186  EFA6  F008         	goto	l3140
  5024   00118A                     u1420:
  5025   00118A                     
  5026                           ;libs/modbus.c: 350:      ClearResponse();
  5027   00118A  EC1B  F012         	call	_ClearResponse	;wreg free
  5028   00118E  0012               	return		;funcret
  5029   001190                     __end_of_ReadCoil:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function _PresetSR *****************
  5033 ;; Defined at:
  5034 ;;		line 231 in file "libs/modbus.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  i               2   37[COMRAM] unsigned short 
  5039 ;;  PresetValue     2   35[COMRAM] unsigned short 
  5040 ;;  Address         2   33[COMRAM] unsigned short 
  5041 ;;  CRC             2   31[COMRAM] unsigned short 
  5042 ;;  PresetValueH    2   29[COMRAM] unsigned short 
  5043 ;;  PresetValueL    2   27[COMRAM] unsigned short 
  5044 ;;  AddressHigh     2   25[COMRAM] unsigned short 
  5045 ;;  AddressLow      2   23[COMRAM] unsigned short 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;Total ram usage:       18 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 5
  5062 ;; This function calls:
  5063 ;;		_CalculateCRC
  5064 ;;		_ClearResponse
  5065 ;; This function is called by:
  5066 ;;		_DecodePacket
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text30
  5071   0019B4                     __ptext30:
  5072                           	callstack 0
  5073   0019B4                     _PresetSR:
  5074                           	callstack 24
  5075   0019B4                     
  5076                           ;libs/modbus.c: 234:      uint16_t AddressHigh = 0;
  5077   0019B4  0E00               	movlw	0
  5078   0019B6  6E1B               	movwf	(PresetSR@AddressHigh+1)^0,c
  5079   0019B8  0E00               	movlw	0
  5080   0019BA  6E1A               	movwf	PresetSR@AddressHigh^0,c
  5081                           
  5082                           ;libs/modbus.c: 235:      uint16_t Address = 0;
  5083   0019BC  0E00               	movlw	0
  5084   0019BE  6E23               	movwf	(PresetSR@Address+1)^0,c
  5085   0019C0  0E00               	movlw	0
  5086   0019C2  6E22               	movwf	PresetSR@Address^0,c
  5087                           
  5088                           ;libs/modbus.c: 237:      uint16_t PresetValue = 0;
  5089   0019C4  0E00               	movlw	0
  5090   0019C6  6E25               	movwf	(PresetSR@PresetValue+1)^0,c
  5091   0019C8  0E00               	movlw	0
  5092   0019CA  6E24               	movwf	PresetSR@PresetValue^0,c
  5093                           
  5094                           ;libs/modbus.c: 238:      uint16_t PresetValueLow = 0;
  5095   0019CC  0E00               	movlw	0
  5096   0019CE  6E1D               	movwf	(PresetSR@PresetValueLow+1)^0,c
  5097   0019D0  0E00               	movlw	0
  5098   0019D2  6E1C               	movwf	PresetSR@PresetValueLow^0,c
  5099                           
  5100                           ;libs/modbus.c: 239:      uint16_t PresetValueHigh = 0;
  5101   0019D4  0E00               	movlw	0
  5102   0019D6  6E1F               	movwf	(PresetSR@PresetValueHigh+1)^0,c
  5103   0019D8  0E00               	movlw	0
  5104   0019DA  6E1E               	movwf	PresetSR@PresetValueHigh^0,c
  5105                           
  5106                           ;libs/modbus.c: 241:      uint16_t CRC = 0;
  5107   0019DC  0E00               	movlw	0
  5108   0019DE  6E21               	movwf	(PresetSR@CRC+1)^0,c
  5109   0019E0  0E00               	movlw	0
  5110   0019E2  6E20               	movwf	PresetSR@CRC^0,c
  5111                           
  5112                           ;libs/modbus.c: 242:      uint16_t i = 0;
  5113   0019E4  0E00               	movlw	0
  5114   0019E6  6E27               	movwf	(PresetSR@i+1)^0,c
  5115   0019E8  0E00               	movlw	0
  5116   0019EA  6E26               	movwf	PresetSR@i^0,c
  5117   0019EC                     
  5118                           ;libs/modbus.c: 244:      Address = received[2];
  5119   0019EC  C202  F022         	movff	_received+2,PresetSR@Address	;volatile
  5120   0019F0  6A23               	clrf	(PresetSR@Address+1)^0,c
  5121                           
  5122                           ;libs/modbus.c: 245:      Address <<= 8;
  5123   0019F2  5022               	movf	PresetSR@Address^0,w,c
  5124   0019F4  6E23               	movwf	(PresetSR@Address+1)^0,c
  5125   0019F6  6A22               	clrf	PresetSR@Address^0,c
  5126   0019F8                     
  5127                           ;libs/modbus.c: 246:      Address |= received[3];
  5128   0019F8  0102               	movlb	2	; () banked
  5129   0019FA  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  5130   0019FC  1222               	iorwf	PresetSR@Address^0,f,c
  5131   0019FE                     
  5132                           ; BSR set to: 2
  5133                           ;libs/modbus.c: 247:      AddressLow = received[3];
  5134   0019FE  C203  F018         	movff	_received+3,PresetSR@AddressLow	;volatile
  5135   001A02  6A19               	clrf	(PresetSR@AddressLow+1)^0,c
  5136   001A04                     
  5137                           ; BSR set to: 2
  5138                           ;libs/modbus.c: 248:      AddressHigh = received[2];
  5139   001A04  C202  F01A         	movff	_received+2,PresetSR@AddressHigh	;volatile
  5140   001A08  6A1B               	clrf	(PresetSR@AddressHigh+1)^0,c
  5141   001A0A                     
  5142                           ; BSR set to: 2
  5143                           ;libs/modbus.c: 250:      PresetValue = received[4];
  5144   001A0A  C204  F024         	movff	_received+4,PresetSR@PresetValue	;volatile
  5145   001A0E  6A25               	clrf	(PresetSR@PresetValue+1)^0,c
  5146   001A10                     
  5147                           ; BSR set to: 2
  5148                           ;libs/modbus.c: 251:      PresetValue <<= 8;
  5149   001A10  5024               	movf	PresetSR@PresetValue^0,w,c
  5150   001A12  6E25               	movwf	(PresetSR@PresetValue+1)^0,c
  5151   001A14  6A24               	clrf	PresetSR@PresetValue^0,c
  5152                           
  5153                           ;libs/modbus.c: 252:      PresetValue |= received[5];
  5154   001A16  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  5155   001A18  1224               	iorwf	PresetSR@PresetValue^0,f,c
  5156   001A1A                     
  5157                           ; BSR set to: 2
  5158                           ;libs/modbus.c: 253:      PresetValueLow = received[5];
  5159   001A1A  C205  F01C         	movff	_received+5,PresetSR@PresetValueLow	;volatile
  5160   001A1E  6A1D               	clrf	(PresetSR@PresetValueLow+1)^0,c
  5161   001A20                     
  5162                           ; BSR set to: 2
  5163                           ;libs/modbus.c: 254:      PresetValueHigh = received[4];
  5164   001A20  C204  F01E         	movff	_received+4,PresetSR@PresetValueHigh	;volatile
  5165   001A24  6A1F               	clrf	(PresetSR@PresetValueHigh+1)^0,c
  5166   001A26                     
  5167                           ; BSR set to: 2
  5168                           ;libs/modbus.c: 256:      InputRegister[Address] = PresetValue;
  5169   001A26  90D8               	bcf	status,0,c
  5170   001A28  3422               	rlcf	PresetSR@Address^0,w,c
  5171   001A2A  6ED9               	movwf	fsr2l,c
  5172   001A2C  3423               	rlcf	(PresetSR@Address+1)^0,w,c
  5173   001A2E  6EDA               	movwf	fsr2h,c
  5174   001A30  0E84               	movlw	low _InputRegister
  5175   001A32  26D9               	addwf	fsr2l,f,c
  5176   001A34  0E03               	movlw	high _InputRegister
  5177   001A36  22DA               	addwfc	fsr2h,f,c
  5178   001A38  C024  FFDE         	movff	PresetSR@PresetValue,postinc2
  5179   001A3C  C025  FFDD         	movff	PresetSR@PresetValue+1,postdec2
  5180   001A40                     
  5181                           ; BSR set to: 2
  5182                           ;libs/modbus.c: 257:      if(InputRegister[Address] == PresetValue){
  5183   001A40  90D8               	bcf	status,0,c
  5184   001A42  3422               	rlcf	PresetSR@Address^0,w,c
  5185   001A44  6ED9               	movwf	fsr2l,c
  5186   001A46  3423               	rlcf	(PresetSR@Address+1)^0,w,c
  5187   001A48  6EDA               	movwf	fsr2h,c
  5188   001A4A  0E84               	movlw	low _InputRegister
  5189   001A4C  26D9               	addwf	fsr2l,f,c
  5190   001A4E  0E03               	movlw	high _InputRegister
  5191   001A50  22DA               	addwfc	fsr2h,f,c
  5192   001A52  5024               	movf	PresetSR@PresetValue^0,w,c
  5193   001A54  18DE               	xorwf	postinc2,w,c
  5194   001A56  E107               	bnz	u1621
  5195   001A58  5025               	movf	(PresetSR@PresetValue+1)^0,w,c
  5196   001A5A  18DE               	xorwf	postinc2,w,c
  5197   001A5C  A4D8               	btfss	status,2,c
  5198   001A5E  EF33  F00D         	goto	u1621
  5199   001A62  EF35  F00D         	goto	u1620
  5200   001A66                     u1621:
  5201   001A66  EF55  F00D         	goto	l3446
  5202   001A6A                     u1620:
  5203   001A6A                     
  5204                           ; BSR set to: 2
  5205                           ;libs/modbus.c: 259:           response[0] = 0x25;
  5206   001A6A  0E25               	movlw	37
  5207   001A6C  0101               	movlb	1	; () banked
  5208   001A6E  6F00               	movwf	_response& (0+255),b	;volatile
  5209                           
  5210                           ;libs/modbus.c: 260:           response[1] = 0x06;
  5211   001A70  0E06               	movlw	6
  5212   001A72  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  5213   001A74                     
  5214                           ; BSR set to: 1
  5215                           ;libs/modbus.c: 261:           response[2] = AddressHigh;
  5216   001A74  C01A  F102         	movff	PresetSR@AddressHigh,_response+2	;volatile
  5217   001A78                     
  5218                           ; BSR set to: 1
  5219                           ;libs/modbus.c: 262:           response[3] = AddressLow;
  5220   001A78  C018  F103         	movff	PresetSR@AddressLow,_response+3	;volatile
  5221   001A7C                     
  5222                           ; BSR set to: 1
  5223                           ;libs/modbus.c: 263:           response[4] = PresetValueHigh;
  5224   001A7C  C01E  F104         	movff	PresetSR@PresetValueHigh,_response+4	;volatile
  5225   001A80                     
  5226                           ; BSR set to: 1
  5227                           ;libs/modbus.c: 264:           response[5] = PresetValueLow;
  5228   001A80  C01C  F105         	movff	PresetSR@PresetValueLow,_response+5	;volatile
  5229   001A84                     
  5230                           ; BSR set to: 1
  5231                           ;libs/modbus.c: 265:           CRC = CalculateCRC(response, 6);
  5232   001A84  0E00               	movlw	low _response
  5233   001A86  6E0C               	movwf	CalculateCRC@string^0,c
  5234   001A88  0E01               	movlw	high _response
  5235   001A8A  6E0D               	movwf	(CalculateCRC@string+1)^0,c
  5236   001A8C  0E00               	movlw	0
  5237   001A8E  6E0F               	movwf	(CalculateCRC@_long+1)^0,c
  5238   001A90  0E06               	movlw	6
  5239   001A92  6E0E               	movwf	CalculateCRC@_long^0,c
  5240   001A94  ECCB  F00F         	call	_CalculateCRC	;wreg free
  5241   001A98  C00C  F020         	movff	?_CalculateCRC,PresetSR@CRC
  5242   001A9C  C00D  F021         	movff	?_CalculateCRC+1,PresetSR@CRC+1
  5243   001AA0                     
  5244                           ;libs/modbus.c: 266:           response[6] = CRC << 8;
  5245   001AA0  0E00               	movlw	0
  5246   001AA2  0101               	movlb	1	; () banked
  5247   001AA4  6F06               	movwf	(_response+6)& (0+255),b	;volatile
  5248   001AA6                     
  5249                           ; BSR set to: 1
  5250                           ;libs/modbus.c: 267:           response[7] = CRC;
  5251   001AA6  C020  F107         	movff	PresetSR@CRC,_response+7	;volatile
  5252   001AAA                     l3446:
  5253                           
  5254                           ;libs/modbus.c: 272:      for(i = 0; i != 9; i++){
  5255   001AAA  0E00               	movlw	0
  5256   001AAC  6E27               	movwf	(PresetSR@i+1)^0,c
  5257   001AAE  0E00               	movlw	0
  5258   001AB0  6E26               	movwf	PresetSR@i^0,c
  5259   001AB2                     l3452:
  5260                           
  5261                           ;libs/modbus.c: 273:           TX1REG = response[i];
  5262   001AB2  0E00               	movlw	low _response
  5263   001AB4  2426               	addwf	PresetSR@i^0,w,c
  5264   001AB6  6ED9               	movwf	fsr2l,c
  5265   001AB8  0E01               	movlw	high _response
  5266   001ABA  2027               	addwfc	(PresetSR@i+1)^0,w,c
  5267   001ABC  6EDA               	movwf	fsr2h,c
  5268   001ABE  50DF               	movf	indf2,w,c
  5269   001AC0  6E9A               	movwf	154,c	;volatile
  5270   001AC2                     
  5271                           ;libs/modbus.c: 274:      }
  5272   001AC2  4A26               	infsnz	PresetSR@i^0,f,c
  5273   001AC4  2A27               	incf	(PresetSR@i+1)^0,f,c
  5274   001AC6  0E09               	movlw	9
  5275   001AC8  1826               	xorwf	PresetSR@i^0,w,c
  5276   001ACA  1027               	iorwf	(PresetSR@i+1)^0,w,c
  5277   001ACC  A4D8               	btfss	status,2,c
  5278   001ACE  EF6B  F00D         	goto	u1631
  5279   001AD2  EF6D  F00D         	goto	u1630
  5280   001AD6                     u1631:
  5281   001AD6  EF59  F00D         	goto	l3452
  5282   001ADA                     u1630:
  5283   001ADA                     
  5284                           ;libs/modbus.c: 275:      ClearResponse();
  5285   001ADA  EC1B  F012         	call	_ClearResponse	;wreg free
  5286   001ADE  0012               	return		;funcret
  5287   001AE0                     __end_of_PresetSR:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _ClearResponse *****************
  5291 ;; Defined at:
  5292 ;;		line 64 in file "libs/modbus.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  i               2   11[COMRAM] unsigned int 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        2 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; Hardware stack levels required when called: 4
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_ReadHR
  5317 ;;		_ReadIR
  5318 ;;		_PresetSR
  5319 ;;		_ReadCoil
  5320 ;;		_ReadDI
  5321 ;;		_WriteCoil
  5322 ;;		_WriteMultiCoil
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text31
  5327   002436                     __ptext31:
  5328                           	callstack 0
  5329   002436                     _ClearResponse:
  5330                           	callstack 24
  5331   002436                     
  5332                           ;libs/modbus.c: 65:      unsigned int i;;libs/modbus.c: 66:      for(i = 0; i < 256; i++
      +                          ){
  5333   002436  0E00               	movlw	0
  5334   002438  6E0D               	movwf	(ClearResponse@i+1)^0,c
  5335   00243A  0E00               	movlw	0
  5336   00243C  6E0C               	movwf	ClearResponse@i^0,c
  5337   00243E                     l2904:
  5338                           
  5339                           ;libs/modbus.c: 67:           response[i] = 0;
  5340   00243E  0E00               	movlw	low _response
  5341   002440  240C               	addwf	ClearResponse@i^0,w,c
  5342   002442  6ED9               	movwf	fsr2l,c
  5343   002444  0E01               	movlw	high _response
  5344   002446  200D               	addwfc	(ClearResponse@i+1)^0,w,c
  5345   002448  6EDA               	movwf	fsr2h,c
  5346   00244A  6ADF               	clrf	indf2,c
  5347   00244C                     
  5348                           ;libs/modbus.c: 68:      }
  5349   00244C  4A0C               	infsnz	ClearResponse@i^0,f,c
  5350   00244E  2A0D               	incf	(ClearResponse@i+1)^0,f,c
  5351   002450  040D               	decf	(ClearResponse@i+1)^0,w,c
  5352   002452  A0D8               	btfss	status,0,c
  5353   002454  EF2E  F012         	goto	u1141
  5354   002458  EF30  F012         	goto	u1140
  5355   00245C                     u1141:
  5356   00245C  EF1F  F012         	goto	l2904
  5357   002460                     u1140:
  5358   002460  0012               	return		;funcret
  5359   002462                     __end_of_ClearResponse:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function _CalculateCRC *****************
  5363 ;; Defined at:
  5364 ;;		line 552 in file "libs/modbus.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  string          2   11[COMRAM] PTR unsigned char 
  5367 ;;		 -> response(256), 
  5368 ;;  _long           2   13[COMRAM] unsigned short 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  i               2   19[COMRAM] unsigned short 
  5371 ;;  CRC_TEMP        2   17[COMRAM] unsigned short 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  2   11[COMRAM] unsigned short 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5384 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5385 ;;Total ram usage:       10 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 4
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_ReadHR
  5392 ;;		_ReadIR
  5393 ;;		_PresetSR
  5394 ;;		_ReadCoil
  5395 ;;		_ReadDI
  5396 ;;		_WriteCoil
  5397 ;;		_WriteMultiCoil
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text32
  5402   001F96                     __ptext32:
  5403                           	callstack 0
  5404   001F96                     _CalculateCRC:
  5405                           	callstack 24
  5406   001F96                     
  5407                           ;libs/modbus.c: 553:      uint16_t CRC_TEMP;;libs/modbus.c: 554:      uint16_t i;;libs/m
      +                          odbus.c: 556:      CRCCON0bits.CRCEN = 1;
  5408   001F96  8E7C               	bsf	124,7,c	;volatile
  5409   001F98                     
  5410                           ;libs/modbus.c: 557:      CRCACCL = 0x00;
  5411   001F98  0E00               	movlw	0
  5412   001F9A  6E76               	movwf	118,c	;volatile
  5413                           
  5414                           ;libs/modbus.c: 558:      CRCACCH = 0x00;
  5415   001F9C  0E00               	movlw	0
  5416   001F9E  6E77               	movwf	119,c	;volatile
  5417                           
  5418                           ;libs/modbus.c: 559:      CRCXORL = 0x05;
  5419   001FA0  0E05               	movlw	5
  5420   001FA2  6E7A               	movwf	122,c	;volatile
  5421                           
  5422                           ;libs/modbus.c: 560:      CRCXORH = 0x80;
  5423   001FA4  0E80               	movlw	128
  5424   001FA6  6E7B               	movwf	123,c	;volatile
  5425                           
  5426                           ;libs/modbus.c: 561:      CRCCON1 = 0x7F;
  5427   001FA8  0E7F               	movlw	127
  5428   001FAA  6E7D               	movwf	125,c	;volatile
  5429   001FAC                     
  5430                           ;libs/modbus.c: 562:      CRCCON0bits.ACCM = 1;
  5431   001FAC  887C               	bsf	124,4,c	;volatile
  5432   001FAE                     
  5433                           ;libs/modbus.c: 563:      CRCCON0bits.SHIFTM = 0;
  5434   001FAE  927C               	bcf	124,1,c	;volatile
  5435   001FB0                     
  5436                           ;libs/modbus.c: 564:      CRCCON0bits.CRCGO = 1;
  5437   001FB0  8C7C               	bsf	124,6,c	;volatile
  5438                           
  5439                           ;libs/modbus.c: 566:      for(i = 0; i < _long; i++){
  5440   001FB2  0E00               	movlw	0
  5441   001FB4  6E15               	movwf	(CalculateCRC@i+1)^0,c
  5442   001FB6  0E00               	movlw	0
  5443   001FB8  6E14               	movwf	CalculateCRC@i^0,c
  5444   001FBA  EFF2  F00F         	goto	l2926
  5445   001FBE                     l178:
  5446   001FBE  B07C               	btfsc	124,0,c	;volatile
  5447   001FC0  EFE4  F00F         	goto	u1151
  5448   001FC4  EFE6  F00F         	goto	u1150
  5449   001FC8                     u1151:
  5450   001FC8  EFDF  F00F         	goto	l178
  5451   001FCC                     u1150:
  5452   001FCC                     
  5453                           ;libs/modbus.c: 568:           CRCDATH = 0x00;
  5454   001FCC  0E00               	movlw	0
  5455   001FCE  6E75               	movwf	117,c	;volatile
  5456   001FD0                     
  5457                           ;libs/modbus.c: 569:           CRCDATL = string[i] & 0xFF;
  5458   001FD0  5014               	movf	CalculateCRC@i^0,w,c
  5459   001FD2  240C               	addwf	CalculateCRC@string^0,w,c
  5460   001FD4  6ED9               	movwf	fsr2l,c
  5461   001FD6  5015               	movf	(CalculateCRC@i+1)^0,w,c
  5462   001FD8  200D               	addwfc	(CalculateCRC@string+1)^0,w,c
  5463   001FDA  6EDA               	movwf	fsr2h,c
  5464   001FDC  50DF               	movf	indf2,w,c
  5465   001FDE  6E74               	movwf	116,c	;volatile
  5466   001FE0                     
  5467                           ;libs/modbus.c: 570:      }
  5468   001FE0  4A14               	infsnz	CalculateCRC@i^0,f,c
  5469   001FE2  2A15               	incf	(CalculateCRC@i+1)^0,f,c
  5470   001FE4                     l2926:
  5471   001FE4  500E               	movf	CalculateCRC@_long^0,w,c
  5472   001FE6  5C14               	subwf	CalculateCRC@i^0,w,c
  5473   001FE8  500F               	movf	(CalculateCRC@_long+1)^0,w,c
  5474   001FEA  5815               	subwfb	(CalculateCRC@i+1)^0,w,c
  5475   001FEC  A0D8               	btfss	status,0,c
  5476   001FEE  EFFB  F00F         	goto	u1161
  5477   001FF2  EFFD  F00F         	goto	u1160
  5478   001FF6                     u1161:
  5479   001FF6  EFDF  F00F         	goto	l178
  5480   001FFA                     u1160:
  5481   001FFA                     l182:
  5482   001FFA  BA7C               	btfsc	124,5,c	;volatile
  5483   001FFC  EF02  F010         	goto	u1171
  5484   002000  EF04  F010         	goto	u1170
  5485   002004                     u1171:
  5486   002004  EFFD  F00F         	goto	l182
  5487   002008                     u1170:
  5488   002008                     
  5489                           ;libs/modbus.c: 573:      CRC_TEMP = ((CRCACCH << 8) | CRCACCL);
  5490   002008  5076               	movf	118,w,c	;volatile
  5491   00200A  CF77 F010          	movff	3959,??_CalculateCRC	;volatile
  5492   00200E  6A11               	clrf	(??_CalculateCRC+1)^0,c
  5493   002010  C010  F011         	movff	??_CalculateCRC,??_CalculateCRC+1
  5494   002014  6A10               	clrf	??_CalculateCRC^0,c
  5495   002016  1010               	iorwf	??_CalculateCRC^0,w,c
  5496   002018  6E12               	movwf	CalculateCRC@CRC_TEMP^0,c
  5497   00201A  5011               	movf	(??_CalculateCRC+1)^0,w,c
  5498   00201C  6E13               	movwf	(CalculateCRC@CRC_TEMP+1)^0,c
  5499   00201E                     
  5500                           ;libs/modbus.c: 575:      return CRC_TEMP;
  5501   00201E  C012  F00C         	movff	CalculateCRC@CRC_TEMP,?_CalculateCRC
  5502   002022  C013  F00D         	movff	CalculateCRC@CRC_TEMP+1,?_CalculateCRC+1
  5503   002026  0012               	return		;funcret
  5504   002028                     __end_of_CalculateCRC:
  5505                           	callstack 0
  5506                           
  5507 ;; *************** function _CheckCRC *****************
  5508 ;; Defined at:
  5509 ;;		line 587 in file "libs/modbus.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;		None
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  i               2   17[COMRAM] unsigned short 
  5514 ;;  CRC_Temp        2   15[COMRAM] unsigned short 
  5515 ;;  CRCL            1   14[COMRAM] unsigned char 
  5516 ;;  CRCH            1   13[COMRAM] unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      unsigned char 
  5519 ;; Registers used:
  5520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5530 ;;Total ram usage:        8 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 4
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_DecodePacket
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text33
  5541   001AE0                     __ptext33:
  5542                           	callstack 0
  5543   001AE0                     _CheckCRC:
  5544                           	callstack 25
  5545   001AE0                     
  5546                           ;libs/modbus.c: 588:      uint16_t CRC_Temp;;libs/modbus.c: 589:      uint8_t CRCH,CRCL;
      +                          ;libs/modbus.c: 590:      uint16_t i;;libs/modbus.c: 592:      CRCCON0bits.CRCEN = 1;
  5547   001AE0  8E7C               	bsf	124,7,c	;volatile
  5548   001AE2                     
  5549                           ;libs/modbus.c: 593:      CRCACCL = 0x00;
  5550   001AE2  0E00               	movlw	0
  5551   001AE4  6E76               	movwf	118,c	;volatile
  5552                           
  5553                           ;libs/modbus.c: 594:      CRCACCH = 0x00;
  5554   001AE6  0E00               	movlw	0
  5555   001AE8  6E77               	movwf	119,c	;volatile
  5556                           
  5557                           ;libs/modbus.c: 595:      CRCXORL = 0x05;
  5558   001AEA  0E05               	movlw	5
  5559   001AEC  6E7A               	movwf	122,c	;volatile
  5560                           
  5561                           ;libs/modbus.c: 596:      CRCXORH = 0x80;
  5562   001AEE  0E80               	movlw	128
  5563   001AF0  6E7B               	movwf	123,c	;volatile
  5564                           
  5565                           ;libs/modbus.c: 597:      CRCCON1 = 0x7F;
  5566   001AF2  0E7F               	movlw	127
  5567   001AF4  6E7D               	movwf	125,c	;volatile
  5568   001AF6                     
  5569                           ;libs/modbus.c: 598:      CRCCON0bits.ACCM = 0;
  5570   001AF6  987C               	bcf	124,4,c	;volatile
  5571   001AF8                     
  5572                           ;libs/modbus.c: 599:      CRCCON0bits.SHIFTM = 0;
  5573   001AF8  927C               	bcf	124,1,c	;volatile
  5574   001AFA                     
  5575                           ;libs/modbus.c: 600:      CRCCON0bits.CRCGO = 1;
  5576   001AFA  8C7C               	bsf	124,6,c	;volatile
  5577                           
  5578                           ;libs/modbus.c: 602:      for(i = 0; i < (MessageLength - 2); i++){
  5579   001AFC  0E00               	movlw	0
  5580   001AFE  6E13               	movwf	(CheckCRC@i+1)^0,c
  5581   001B00  0E00               	movlw	0
  5582   001B02  6E12               	movwf	CheckCRC@i^0,c
  5583   001B04  EF97  F00D         	goto	l3036
  5584   001B08                     l190:
  5585   001B08  B07C               	btfsc	124,0,c	;volatile
  5586   001B0A  EF89  F00D         	goto	u1281
  5587   001B0E  EF8B  F00D         	goto	u1280
  5588   001B12                     u1281:
  5589   001B12  EF84  F00D         	goto	l190
  5590   001B16                     u1280:
  5591   001B16                     
  5592                           ;libs/modbus.c: 604:           CRCDATH = 0x00;
  5593   001B16  0E00               	movlw	0
  5594   001B18  6E75               	movwf	117,c	;volatile
  5595   001B1A                     
  5596                           ;libs/modbus.c: 605:           CRCDATL = received[i] & 0xFF;
  5597   001B1A  0E00               	movlw	low _received
  5598   001B1C  2412               	addwf	CheckCRC@i^0,w,c
  5599   001B1E  6ED9               	movwf	fsr2l,c
  5600   001B20  0E02               	movlw	high _received
  5601   001B22  2013               	addwfc	(CheckCRC@i+1)^0,w,c
  5602   001B24  6EDA               	movwf	fsr2h,c
  5603   001B26  50DF               	movf	indf2,w,c
  5604   001B28  6E74               	movwf	116,c	;volatile
  5605   001B2A                     
  5606                           ;libs/modbus.c: 606:      }
  5607   001B2A  4A12               	infsnz	CheckCRC@i^0,f,c
  5608   001B2C  2A13               	incf	(CheckCRC@i+1)^0,f,c
  5609   001B2E                     l3036:
  5610   001B2E  0EFE               	movlw	254
  5611   001B30  244D               	addwf	_MessageLength^0,w,c	;volatile
  5612   001B32  6E0C               	movwf	??_CheckCRC^0,c
  5613   001B34  6A0D               	clrf	(??_CheckCRC+1)^0,c
  5614   001B36  0EFF               	movlw	255
  5615   001B38  220D               	addwfc	(??_CheckCRC+1)^0,f,c
  5616   001B3A  500C               	movf	??_CheckCRC^0,w,c
  5617   001B3C  5C12               	subwf	CheckCRC@i^0,w,c
  5618   001B3E  500D               	movf	(??_CheckCRC+1)^0,w,c
  5619   001B40  5813               	subwfb	(CheckCRC@i+1)^0,w,c
  5620   001B42  A0D8               	btfss	status,0,c
  5621   001B44  EFA6  F00D         	goto	u1291
  5622   001B48  EFA8  F00D         	goto	u1290
  5623   001B4C                     u1291:
  5624   001B4C  EF84  F00D         	goto	l190
  5625   001B50                     u1290:
  5626   001B50                     l194:
  5627   001B50  BA7C               	btfsc	124,5,c	;volatile
  5628   001B52  EFAD  F00D         	goto	u1301
  5629   001B56  EFAF  F00D         	goto	u1300
  5630   001B5A                     u1301:
  5631   001B5A  EFA8  F00D         	goto	l194
  5632   001B5E                     u1300:
  5633   001B5E                     
  5634                           ;libs/modbus.c: 608:      CRC_Temp = ((CRCACCH << 8) | CRCACCL);
  5635   001B5E  5076               	movf	118,w,c	;volatile
  5636   001B60  CF77 F00C          	movff	3959,??_CheckCRC	;volatile
  5637   001B64  6A0D               	clrf	(??_CheckCRC+1)^0,c
  5638   001B66  C00C  F00D         	movff	??_CheckCRC,??_CheckCRC+1
  5639   001B6A  6A0C               	clrf	??_CheckCRC^0,c
  5640   001B6C  100C               	iorwf	??_CheckCRC^0,w,c
  5641   001B6E  6E10               	movwf	CheckCRC@CRC_Temp^0,c
  5642   001B70  500D               	movf	(??_CheckCRC+1)^0,w,c
  5643   001B72  6E11               	movwf	(CheckCRC@CRC_Temp+1)^0,c
  5644   001B74                     
  5645                           ;libs/modbus.c: 609:      CRCH = CRC_Temp >> 8;
  5646   001B74  5011               	movf	(CheckCRC@CRC_Temp+1)^0,w,c
  5647   001B76  6E0E               	movwf	CheckCRC@CRCH^0,c
  5648   001B78                     
  5649                           ;libs/modbus.c: 610:      CRCL = CRC_Temp & 255;
  5650   001B78  C010  F00F         	movff	CheckCRC@CRC_Temp,CheckCRC@CRCL
  5651   001B7C                     
  5652                           ;libs/modbus.c: 611:      if((CRCL == received[i]) && (CRCH == received[i+1])){
  5653   001B7C  0E00               	movlw	low _received
  5654   001B7E  2412               	addwf	CheckCRC@i^0,w,c
  5655   001B80  6ED9               	movwf	fsr2l,c
  5656   001B82  0E02               	movlw	high _received
  5657   001B84  2013               	addwfc	(CheckCRC@i+1)^0,w,c
  5658   001B86  6EDA               	movwf	fsr2h,c
  5659   001B88  500F               	movf	CheckCRC@CRCL^0,w,c
  5660   001B8A  18DE               	xorwf	postinc2,w,c
  5661   001B8C  A4D8               	btfss	status,2,c
  5662   001B8E  EFCB  F00D         	goto	u1311
  5663   001B92  EFCD  F00D         	goto	u1310
  5664   001B96                     u1311:
  5665   001B96  EFDF  F00D         	goto	l3054
  5666   001B9A                     u1310:
  5667   001B9A  0E01               	movlw	low (_received+1)
  5668   001B9C  2412               	addwf	CheckCRC@i^0,w,c
  5669   001B9E  6ED9               	movwf	fsr2l,c
  5670   001BA0  0E02               	movlw	high (_received+1)
  5671   001BA2  2013               	addwfc	(CheckCRC@i+1)^0,w,c
  5672   001BA4  6EDA               	movwf	fsr2h,c
  5673   001BA6  500E               	movf	CheckCRC@CRCH^0,w,c
  5674   001BA8  18DE               	xorwf	postinc2,w,c
  5675   001BAA  A4D8               	btfss	status,2,c
  5676   001BAC  EFDA  F00D         	goto	u1321
  5677   001BB0  EFDC  F00D         	goto	u1320
  5678   001BB4                     u1321:
  5679   001BB4  EFDF  F00D         	goto	l3054
  5680   001BB8                     u1320:
  5681   001BB8                     
  5682                           ;libs/modbus.c: 612:           return 1;
  5683   001BB8  0E01               	movlw	1
  5684   001BBA  EFE0  F00D         	goto	l198
  5685   001BBE                     l3054:
  5686                           
  5687                           ;libs/modbus.c: 615:           return 0;
  5688   001BBE  0E00               	movlw	0
  5689   001BC0                     l198:
  5690   001BC0  0012               	return		;funcret
  5691   001BC2                     __end_of_CheckCRC:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function _INTERRUPT_InterruptManager *****************
  5695 ;; Defined at:
  5696 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5712 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5714 ;;Total ram usage:        6 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 3
  5717 ;; This function calls:
  5718 ;;		NULL
  5719 ;;		_EUSART1_ReceiveISR
  5720 ;;		_PIN_MANAGER_IOC
  5721 ;;		_TMR0_OverflowISR
  5722 ;;		_rxfunc
  5723 ;; This function is called by:
  5724 ;;		Interrupt level 2
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	intcode
  5729   000008                     __pintcode:
  5730                           	callstack 0
  5731   000008                     _INTERRUPT_InterruptManager:
  5732                           	callstack 21
  5733                           
  5734                           ;incstack = 0
  5735   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5736   00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  5737   00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5738   000012  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5739   000016  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5740   00001A  CFF3 F00A          	movff	prodl,??_INTERRUPT_InterruptManager+4
  5741   00001E  CFF4 F00B          	movff	prodh,??_INTERRUPT_InterruptManager+5
  5742   000022                     
  5743                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  5744   000022  010E               	movlb	14	; () banked
  5745   000024  A9C2               	btfss	194,4,b	;volatile
  5746   000026  EF17  F000         	goto	i2u312_41
  5747   00002A  EF19  F000         	goto	i2u312_40
  5748   00002E                     i2u312_41:
  5749   00002E  EF24  F000         	goto	i2l507
  5750   000032                     i2u312_40:
  5751   000032                     
  5752                           ; BSR set to: 14
  5753   000032  A9CA               	btfss	202,4,b	;volatile
  5754   000034  EF1E  F000         	goto	i2u313_41
  5755   000038  EF20  F000         	goto	i2u313_40
  5756   00003C                     i2u313_41:
  5757   00003C  EF24  F000         	goto	i2l507
  5758   000040                     i2u313_40:
  5759   000040                     
  5760                           ; BSR set to: 14
  5761                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
  5762   000040  ECE7  F012         	call	_PIN_MANAGER_IOC	;wreg free
  5763                           
  5764                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
  5765   000044  EF5A  F000         	goto	i2l515
  5766   000048                     i2l507:
  5767                           
  5768                           ; BSR set to: 14
  5769   000048  ACF2               	btfss	242,6,c	;volatile
  5770   00004A  EF29  F000         	goto	i2u314_41
  5771   00004E  EF2B  F000         	goto	i2u314_40
  5772   000052                     i2u314_41:
  5773   000052  EF5A  F000         	goto	i2l515
  5774   000056                     i2u314_40:
  5775   000056                     
  5776                           ; BSR set to: 14
  5777                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  5778   000056  ABC2               	btfss	194,5,b	;volatile
  5779   000058  EF30  F000         	goto	i2u315_41
  5780   00005C  EF32  F000         	goto	i2u315_40
  5781   000060                     i2u315_41:
  5782   000060  EF3D  F000         	goto	i2l510
  5783   000064                     i2u315_40:
  5784   000064                     
  5785                           ; BSR set to: 14
  5786   000064  ABCA               	btfss	202,5,b	;volatile
  5787   000066  EF37  F000         	goto	i2u316_41
  5788   00006A  EF39  F000         	goto	i2u316_40
  5789   00006E                     i2u316_41:
  5790   00006E  EF3D  F000         	goto	i2l510
  5791   000072                     i2u316_40:
  5792   000072                     
  5793                           ; BSR set to: 14
  5794                           ;mcc_generated_files/system/src/interrupt.c: 90:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 91:             TMR0_OverflowISR();
  5795   000072  ECE3  F011         	call	_TMR0_OverflowISR	;wreg free
  5796                           
  5797                           ;mcc_generated_files/system/src/interrupt.c: 92:         }
  5798   000076  EF5A  F000         	goto	i2l515
  5799   00007A                     i2l510:
  5800                           
  5801                           ; BSR set to: 14
  5802   00007A  ABC5               	btfss	197,5,b	;volatile
  5803   00007C  EF42  F000         	goto	i2u317_41
  5804   000080  EF44  F000         	goto	i2u317_40
  5805   000084                     i2u317_41:
  5806   000084  EF5A  F000         	goto	i2l514
  5807   000088                     i2u317_40:
  5808   000088                     
  5809                           ; BSR set to: 14
  5810   000088  ABCD               	btfss	205,5,b	;volatile
  5811   00008A  EF49  F000         	goto	i2u318_41
  5812   00008E  EF4B  F000         	goto	i2u318_40
  5813   000092                     i2u318_41:
  5814   000092  EF5A  F000         	goto	i2l514
  5815   000096                     i2u318_40:
  5816   000096                     
  5817                           ; BSR set to: 14
  5818                           ;mcc_generated_files/system/src/interrupt.c: 94:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 95:             EUSART1_RxInterruptHandler();
  5819   000096  D802               	call	i2u319_48
  5820   000098  EF58  F000         	goto	i2u319_49
  5821   00009C                     i2u319_48:
  5822   00009C  0005               	push	
  5823   00009E  6EFA               	movwf	pclath,c
  5824   0000A0  503B               	movf	_EUSART1_RxInterruptHandler^0,w,c
  5825   0000A2  6EFD               	movwf	tosl,c
  5826   0000A4  503C               	movf	(_EUSART1_RxInterruptHandler+1)^0,w,c
  5827   0000A6  6EFE               	movwf	tosh,c
  5828   0000A8  503D               	movf	(_EUSART1_RxInterruptHandler+2)^0,w,c
  5829   0000AA  6EFF               	movwf	tosu,c
  5830   0000AC  50FA               	movf	pclath,w,c
  5831   0000AE  0012               	return		;indir
  5832   0000B0                     i2u319_49:
  5833                           
  5834                           ;mcc_generated_files/system/src/interrupt.c: 96:         }
  5835   0000B0  EF5A  F000         	goto	i2l515
  5836   0000B4                     i2l514:
  5837   0000B4                     i2l515:
  5838   0000B4  C00B  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  5839   0000B8  C00A  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  5840   0000BC  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5841   0000C0  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5842   0000C4  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5843   0000C8  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5844   0000CC  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5845   0000CE  0011               	retfie		f
  5846   0000D0                     __end_of_INTERRUPT_InterruptManager:
  5847                           	callstack 0
  5848                           
  5849 ;; *************** function _EUSART1_ReceiveISR *****************
  5850 ;; Defined at:
  5851 ;;		line 267 in file "mcc_generated_files/uart/src/eusart1.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  tempRxHead      1    1[COMRAM] unsigned char 
  5856 ;;  regValue        1    0[COMRAM] unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5870 ;;Total ram usage:        2 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; Hardware stack levels required when called: 1
  5873 ;; This function calls:
  5874 ;;		NULL
  5875 ;;		_EUSART1_DefaultFramingErrorCallback
  5876 ;;		_EUSART1_DefaultOverrunErrorCallback
  5877 ;; This function is called by:
  5878 ;;		_EUSART1_Initialize
  5879 ;;		_INTERRUPT_InterruptManager
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text35
  5884   001BC2                     __ptext35:
  5885                           	callstack 0
  5886   001BC2                     _EUSART1_ReceiveISR:
  5887                           	callstack 22
  5888   001BC2                     
  5889                           ;mcc_generated_files/uart/src/eusart1.c: 269:     uint8_t regValue;;mcc_generated_files/
      +                          uart/src/eusart1.c: 270:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart1.c: 27
      +                          3:     eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  5890   001BC2  504C               	movf	_eusart1RxHead^0,w,c
  5891   001BC4  0D02               	mullw	2
  5892   001BC6  50F3               	movf	243,w,c
  5893   001BC8  0FC4               	addlw	low _eusart1RxStatusBuffer
  5894   001BCA  6ED9               	movwf	fsr2l,c
  5895   001BCC  6ADA               	clrf	fsr2h,c
  5896   001BCE  6ADE               	clrf	postinc2,c
  5897   001BD0  6ADD               	clrf	postdec2,c
  5898   001BD2                     
  5899                           ;mcc_generated_files/uart/src/eusart1.c: 275:     if(RC1STAbits.OERR)
  5900   001BD2  A29D               	btfss	157,1,c	;volatile
  5901   001BD4  EFEE  F00D         	goto	i2u305_41
  5902   001BD8  EFF0  F00D         	goto	i2u305_40
  5903   001BDC                     i2u305_41:
  5904   001BDC  EF0F  F00E         	goto	i2l4396
  5905   001BE0                     i2u305_40:
  5906   001BE0                     
  5907                           ;mcc_generated_files/uart/src/eusart1.c: 276:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 277:         eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  5908   001BE0  504C               	movf	_eusart1RxHead^0,w,c
  5909   001BE2  0D02               	mullw	2
  5910   001BE4  50F3               	movf	243,w,c
  5911   001BE6  0FC4               	addlw	low _eusart1RxStatusBuffer
  5912   001BE8  6ED9               	movwf	fsr2l,c
  5913   001BEA  6ADA               	clrf	fsr2h,c
  5914   001BEC  0100               	movlb	0	; () banked
  5915   001BEE  84DF               	bsf	indf2,2,c
  5916   001BF0                     
  5917                           ; BSR set to: 0
  5918                           ;mcc_generated_files/uart/src/eusart1.c: 278:         if(((void*)0) != EUSART1_OverrunEr
      +                          rorHandler)
  5919   001BF0  5029               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  5920   001BF2  102A               	iorwf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  5921   001BF4  102B               	iorwf	(_EUSART1_OverrunErrorHandler+2)^0,w,c
  5922   001BF6  B4D8               	btfsc	status,2,c
  5923   001BF8  EF00  F00E         	goto	i2u306_41
  5924   001BFC  EF02  F00E         	goto	i2u306_40
  5925   001C00                     i2u306_41:
  5926   001C00  EF0F  F00E         	goto	i2l4396
  5927   001C04                     i2u306_40:
  5928   001C04                     
  5929                           ; BSR set to: 0
  5930                           ;mcc_generated_files/uart/src/eusart1.c: 279:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 280:             EUSART1_OverrunErrorHandler();
  5931   001C04  D802               	call	i2u307_48
  5932   001C06  EF0F  F00E         	goto	i2u307_49
  5933   001C0A                     i2u307_48:
  5934   001C0A  0005               	push	
  5935   001C0C  6EFA               	movwf	pclath,c
  5936   001C0E  5029               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  5937   001C10  6EFD               	movwf	tosl,c
  5938   001C12  502A               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  5939   001C14  6EFE               	movwf	tosh,c
  5940   001C16  502B               	movf	(_EUSART1_OverrunErrorHandler+2)^0,w,c
  5941   001C18  6EFF               	movwf	tosu,c
  5942   001C1A  50FA               	movf	pclath,w,c
  5943   001C1C  0012               	return		;indir
  5944   001C1E                     i2u307_49:
  5945   001C1E                     i2l4396:
  5946                           
  5947                           ;mcc_generated_files/uart/src/eusart1.c: 283:     if(RC1STAbits.FERR)
  5948   001C1E  A49D               	btfss	157,2,c	;volatile
  5949   001C20  EF14  F00E         	goto	i2u308_41
  5950   001C24  EF16  F00E         	goto	i2u308_40
  5951   001C28                     i2u308_41:
  5952   001C28  EF35  F00E         	goto	i2l4404
  5953   001C2C                     i2u308_40:
  5954   001C2C                     
  5955                           ;mcc_generated_files/uart/src/eusart1.c: 284:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 285:         eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  5956   001C2C  504C               	movf	_eusart1RxHead^0,w,c
  5957   001C2E  0D02               	mullw	2
  5958   001C30  50F3               	movf	243,w,c
  5959   001C32  0FC4               	addlw	low _eusart1RxStatusBuffer
  5960   001C34  6ED9               	movwf	fsr2l,c
  5961   001C36  6ADA               	clrf	fsr2h,c
  5962   001C38  0100               	movlb	0	; () banked
  5963   001C3A  82DF               	bsf	indf2,1,c
  5964   001C3C                     
  5965                           ; BSR set to: 0
  5966                           ;mcc_generated_files/uart/src/eusart1.c: 286:         if(((void*)0) != EUSART1_FramingEr
      +                          rorHandler)
  5967   001C3C  502C               	movf	_EUSART1_FramingErrorHandler^0,w,c
  5968   001C3E  102D               	iorwf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  5969   001C40  102E               	iorwf	(_EUSART1_FramingErrorHandler+2)^0,w,c
  5970   001C42  B4D8               	btfsc	status,2,c
  5971   001C44  EF26  F00E         	goto	i2u309_41
  5972   001C48  EF28  F00E         	goto	i2u309_40
  5973   001C4C                     i2u309_41:
  5974   001C4C  EF35  F00E         	goto	i2l4404
  5975   001C50                     i2u309_40:
  5976   001C50                     
  5977                           ; BSR set to: 0
  5978                           ;mcc_generated_files/uart/src/eusart1.c: 287:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 288:             EUSART1_FramingErrorHandler();
  5979   001C50  D802               	call	i2u310_48
  5980   001C52  EF35  F00E         	goto	i2u310_49
  5981   001C56                     i2u310_48:
  5982   001C56  0005               	push	
  5983   001C58  6EFA               	movwf	pclath,c
  5984   001C5A  502C               	movf	_EUSART1_FramingErrorHandler^0,w,c
  5985   001C5C  6EFD               	movwf	tosl,c
  5986   001C5E  502D               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  5987   001C60  6EFE               	movwf	tosh,c
  5988   001C62  502E               	movf	(_EUSART1_FramingErrorHandler+2)^0,w,c
  5989   001C64  6EFF               	movwf	tosu,c
  5990   001C66  50FA               	movf	pclath,w,c
  5991   001C68  0012               	return		;indir
  5992   001C6A                     i2u310_49:
  5993   001C6A                     i2l4404:
  5994                           
  5995                           ;mcc_generated_files/uart/src/eusart1.c: 292:     regValue = RC1REG;
  5996   001C6A  CF99 F001          	movff	3993,EUSART1_ReceiveISR@regValue	;volatile
  5997   001C6E                     
  5998                           ;mcc_generated_files/uart/src/eusart1.c: 294:     tempRxHead = (eusart1RxHead + 1) & ((8
      +                          ) - 1);
  5999   001C6E  284C               	incf	_eusart1RxHead^0,w,c	;volatile
  6000   001C70  0B07               	andlw	7
  6001   001C72  6E02               	movwf	EUSART1_ReceiveISR@tempRxHead^0,c
  6002   001C74                     
  6003                           ;mcc_generated_files/uart/src/eusart1.c: 295:     if (tempRxHead == eusart1RxTail)
  6004   001C74  504B               	movf	_eusart1RxTail^0,w,c	;volatile
  6005   001C76  1802               	xorwf	EUSART1_ReceiveISR@tempRxHead^0,w,c
  6006   001C78  A4D8               	btfss	status,2,c
  6007   001C7A  EF41  F00E         	goto	i2u311_41
  6008   001C7E  EF43  F00E         	goto	i2u311_40
  6009   001C82                     i2u311_41:
  6010   001C82  EF45  F00E         	goto	i2l4412
  6011   001C86                     i2u311_40:
  6012   001C86  EF4E  F00E         	goto	i2l823
  6013   001C8A                     i2l4412:
  6014                           
  6015                           ;mcc_generated_files/uart/src/eusart1.c: 300:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 301:         eusart1RxBuffer[eusart1RxHead] = regValue;
  6016   001C8A  504C               	movf	_eusart1RxHead^0,w,c
  6017   001C8C  0FD4               	addlw	low _eusart1RxBuffer
  6018   001C8E  6ED9               	movwf	fsr2l,c
  6019   001C90  6ADA               	clrf	fsr2h,c
  6020   001C92  C001  FFDF         	movff	EUSART1_ReceiveISR@regValue,indf2
  6021   001C96                     
  6022                           ;mcc_generated_files/uart/src/eusart1.c: 302:   eusart1RxHead = tempRxHead;
  6023   001C96  C002  F04C         	movff	EUSART1_ReceiveISR@tempRxHead,_eusart1RxHead	;volatile
  6024   001C9A                     
  6025                           ;mcc_generated_files/uart/src/eusart1.c: 303:   eusart1RxCount++;
  6026   001C9A  2A4A               	incf	_eusart1RxCount^0,f,c	;volatile
  6027   001C9C                     i2l823:
  6028   001C9C  0012               	return		;funcret
  6029   001C9E                     __end_of_EUSART1_ReceiveISR:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _rxfunc *****************
  6033 ;; Defined at:
  6034 ;;		line 105 in file "main.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;Total ram usage:        0 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 2
  6055 ;; This function calls:
  6056 ;;		i2_TMR0_Initialize
  6057 ;; This function is called by:
  6058 ;;		_main
  6059 ;;		_INTERRUPT_InterruptManager
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text36
  6064   002028                     __ptext36:
  6065                           	callstack 0
  6066   002028                     _rxfunc:
  6067                           	callstack 21
  6068   002028                     
  6069                           ;main.c: 106:     if((!EndOfMessage) && (!NewMessage)){
  6070   002028  5049               	movf	_EndOfMessage^0,w,c	;volatile
  6071   00202A  A4D8               	btfss	status,2,c
  6072   00202C  EF1A  F010         	goto	i2u184_41
  6073   002030  EF1C  F010         	goto	i2u184_40
  6074   002034                     i2u184_41:
  6075   002034  EF37  F010         	goto	i2l3764
  6076   002038                     i2u184_40:
  6077   002038  504F               	movf	_NewMessage^0,w,c	;volatile
  6078   00203A  A4D8               	btfss	status,2,c
  6079   00203C  EF22  F010         	goto	i2u185_41
  6080   002040  EF24  F010         	goto	i2u185_40
  6081   002044                     i2u185_41:
  6082   002044  EF37  F010         	goto	i2l3764
  6083   002048                     i2u185_40:
  6084   002048                     
  6085                           ;main.c: 107:         if(TX1IF){
  6086   002048  010E               	movlb	14	; () banked
  6087   00204A  A9CD               	btfss	205,4,b	;volatile
  6088   00204C  EF2A  F010         	goto	i2u186_41
  6089   002050  EF2C  F010         	goto	i2u186_40
  6090   002054                     i2u186_41:
  6091   002054  EF37  F010         	goto	i2l3764
  6092   002058                     i2u186_40:
  6093   002058                     
  6094                           ; BSR set to: 14
  6095                           ;main.c: 108:             received[z] = RC1REG;
  6096   002058  0E00               	movlw	low _received
  6097   00205A  2447               	addwf	_z^0,w,c	;volatile
  6098   00205C  6ED9               	movwf	fsr2l,c
  6099   00205E  6ADA               	clrf	fsr2h,c
  6100   002060  0E02               	movlw	high _received
  6101   002062  22DA               	addwfc	fsr2h,f,c
  6102   002064  CF99 FFDF          	movff	3993,indf2	;volatile
  6103   002068                     
  6104                           ; BSR set to: 14
  6105                           ;main.c: 109:             z++;
  6106   002068  2A47               	incf	_z^0,f,c	;volatile
  6107   00206A                     
  6108                           ; BSR set to: 14
  6109                           ;main.c: 110:             TimerCount = 0;
  6110   00206A  0E00               	movlw	0
  6111   00206C  6E48               	movwf	_TimerCount^0,c	;volatile
  6112   00206E                     i2l3764:
  6113                           
  6114                           ;main.c: 113:     if(NewMessage){
  6115   00206E  504F               	movf	_NewMessage^0,w,c	;volatile
  6116   002070  B4D8               	btfsc	status,2,c
  6117   002072  EF3D  F010         	goto	i2u187_41
  6118   002076  EF3F  F010         	goto	i2u187_40
  6119   00207A                     i2u187_41:
  6120   00207A  EF5C  F010         	goto	i2l953
  6121   00207E                     i2u187_40:
  6122   00207E                     
  6123                           ;main.c: 114:         TMR0_Initialize();
  6124   00207E  EC01  F012         	call	i2_TMR0_Initialize	;wreg free
  6125   002082                     
  6126                           ;main.c: 115:         if(TX1IF){
  6127   002082  010E               	movlb	14	; () banked
  6128   002084  A9CD               	btfss	205,4,b	;volatile
  6129   002086  EF47  F010         	goto	i2u188_41
  6130   00208A  EF49  F010         	goto	i2u188_40
  6131   00208E                     i2u188_41:
  6132   00208E  EF5C  F010         	goto	i2l953
  6133   002092                     i2u188_40:
  6134   002092                     
  6135                           ; BSR set to: 14
  6136                           ;main.c: 116:             received[z] = RC1REG;
  6137   002092  0E00               	movlw	low _received
  6138   002094  2447               	addwf	_z^0,w,c	;volatile
  6139   002096  6ED9               	movwf	fsr2l,c
  6140   002098  6ADA               	clrf	fsr2h,c
  6141   00209A  0E02               	movlw	high _received
  6142   00209C  22DA               	addwfc	fsr2h,f,c
  6143   00209E  CF99 FFDF          	movff	3993,indf2	;volatile
  6144   0020A2                     
  6145                           ; BSR set to: 14
  6146                           ;main.c: 117:             z++;
  6147   0020A2  2A47               	incf	_z^0,f,c	;volatile
  6148   0020A4                     
  6149                           ; BSR set to: 14
  6150                           ;main.c: 118:             NewMessage = 0;
  6151   0020A4  0E00               	movlw	0
  6152   0020A6  6E4F               	movwf	_NewMessage^0,c	;volatile
  6153   0020A8                     
  6154                           ; BSR set to: 14
  6155                           ;main.c: 119:             EndOfMessage = 0;
  6156   0020A8  0E00               	movlw	0
  6157   0020AA  6E49               	movwf	_EndOfMessage^0,c	;volatile
  6158   0020AC                     
  6159                           ; BSR set to: 14
  6160                           ;main.c: 120:             MessageLength = 0;
  6161   0020AC  0E00               	movlw	0
  6162   0020AE  6E4D               	movwf	_MessageLength^0,c	;volatile
  6163   0020B0                     
  6164                           ; BSR set to: 14
  6165                           ;main.c: 121:             ModbusMessage = 0;
  6166   0020B0  0E00               	movlw	0
  6167   0020B2  6E4E               	movwf	_ModbusMessage^0,c	;volatile
  6168   0020B4                     
  6169                           ; BSR set to: 14
  6170                           ;main.c: 122:             TimerCount = 0;
  6171   0020B4  0E00               	movlw	0
  6172   0020B6  6E48               	movwf	_TimerCount^0,c	;volatile
  6173   0020B8                     i2l953:
  6174   0020B8  0012               	return		;funcret
  6175   0020BA                     __end_of_rxfunc:
  6176                           	callstack 0
  6177                           
  6178 ;; *************** function i2_TMR0_Initialize *****************
  6179 ;; Defined at:
  6180 ;;		line 54 in file "mcc_generated_files/timer/src/tmr0.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;Total ram usage:        2 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 1
  6201 ;; This function calls:
  6202 ;;		i2_TMR0_OverflowCallbackRegister
  6203 ;; This function is called by:
  6204 ;;		_rxfunc
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text37
  6209   002402                     __ptext37:
  6210                           	callstack 0
  6211   002402                     i2_TMR0_Initialize:
  6212                           	callstack 21
  6213   002402                     
  6214                           ;mcc_generated_files/timer/src/tmr0.c: 57:     TMR0H = 0xDC;
  6215   002402  0EDC               	movlw	220
  6216   002404  6ED4               	movwf	212,c	;volatile
  6217                           
  6218                           ;mcc_generated_files/timer/src/tmr0.c: 60:     TMR0L = 0x66;
  6219   002406  0E66               	movlw	102
  6220   002408  6ED3               	movwf	211,c	;volatile
  6221                           
  6222                           ;mcc_generated_files/timer/src/tmr0.c: 63:     T0CON1 = 0x50;
  6223   00240A  0E50               	movlw	80
  6224   00240C  6ED6               	movwf	214,c	;volatile
  6225                           
  6226                           ;mcc_generated_files/timer/src/tmr0.c: 66:     timerTMR0ReloadVal16bit = ((uint16_t)TMR0
      +                          H << 8) | TMR0L;
  6227   00240E  50D4               	movf	212,w,c	;volatile
  6228   002410  6E04               	movwf	??i2_TMR0_Initialize^0,c
  6229   002412  50D3               	movf	211,w,c	;volatile
  6230   002414  6E44               	movwf	_timerTMR0ReloadVal16bit^0,c	;volatile
  6231   002416  C004  F045         	movff	??i2_TMR0_Initialize,_timerTMR0ReloadVal16bit+1	;volatile
  6232   00241A                     
  6233                           ;mcc_generated_files/timer/src/tmr0.c: 69:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
  6234   00241A  0ECC               	movlw	low _TMR0_DefaultOverflowCallback
  6235   00241C  6E01               	movwf	i2TMR0_OverflowCallbackRegister@CallbackHandler^0,c
  6236   00241E  0E25               	movlw	high _TMR0_DefaultOverflowCallback
  6237   002420  6E02               	movwf	(i2TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  6238   002422  0E00               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
  6239   002424  6E03               	movwf	(i2TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  6240   002426  ECCF  F012         	call	i2_TMR0_OverflowCallbackRegister	;wreg free
  6241   00242A                     
  6242                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIR0bits.TMR0IF = 0;
  6243   00242A  010E               	movlb	14	; () banked
  6244   00242C  9BCA               	bcf	202,5,b	;volatile
  6245   00242E                     
  6246                           ; BSR set to: 14
  6247                           ;mcc_generated_files/timer/src/tmr0.c: 75:     PIE0bits.TMR0IE = 1;
  6248   00242E  8BC2               	bsf	194,5,b	;volatile
  6249   002430                     
  6250                           ; BSR set to: 14
  6251                           ;mcc_generated_files/timer/src/tmr0.c: 78:     T0CON0 = 0x90;
  6252   002430  0E90               	movlw	144
  6253   002432  6ED5               	movwf	213,c	;volatile
  6254   002434                     
  6255                           ; BSR set to: 14
  6256   002434  0012               	return		;funcret
  6257   002436                     __end_ofi2_TMR0_Initialize:
  6258                           	callstack 0
  6259                           
  6260 ;; *************** function i2_TMR0_OverflowCallbackRegister *****************
  6261 ;; Defined at:
  6262 ;;		line 135 in file "mcc_generated_files/timer/src/tmr0.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  CallbackHand    3    0[COMRAM] PTR FTN()void 
  6265 ;;		 -> tmr0func(1), TMR0_DefaultOverflowCallback(1), 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;Total ram usage:        3 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		i2_TMR0_Initialize
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text38
  6291   00259E                     __ptext38:
  6292                           	callstack 0
  6293   00259E                     i2_TMR0_OverflowCallbackRegister:
  6294                           	callstack 21
  6295   00259E                     
  6296                           ;mcc_generated_files/timer/src/tmr0.c: 135: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 136: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 137:     TMR0_OverflowCallback = CallbackHandler;
  6297   00259E  C001  F02F         	movff	i2TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
  6298   0025A2  C002  F030         	movff	i2TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
  6299   0025A6  C003  F031         	movff	i2TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
  6300   0025AA  0012               	return		;funcret
  6301   0025AC                     __end_ofi2_TMR0_OverflowCallbackRegister:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _TMR0_OverflowISR *****************
  6305 ;; Defined at:
  6306 ;;		line 121 in file "mcc_generated_files/timer/src/tmr0.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; Hardware stack levels required when called: 2
  6327 ;; This function calls:
  6328 ;;		NULL
  6329 ;;		_TMR0_DefaultOverflowCallback
  6330 ;;		_tmr0func
  6331 ;; This function is called by:
  6332 ;;		_INTERRUPT_InterruptManager
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text39
  6337   0023C6                     __ptext39:
  6338                           	callstack 0
  6339   0023C6                     _TMR0_OverflowISR:
  6340                           	callstack 21
  6341   0023C6                     
  6342                           ;mcc_generated_files/timer/src/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  6343   0023C6  010E               	movlb	14	; () banked
  6344   0023C8  9BCA               	bcf	202,5,b	;volatile
  6345   0023CA                     
  6346                           ; BSR set to: 14
  6347                           ;mcc_generated_files/timer/src/tmr0.c: 126:     TMR0H = timerTMR0ReloadVal16bit >> 8;
  6348   0023CA  5045               	movf	(_timerTMR0ReloadVal16bit+1)^0,w,c	;volatile
  6349   0023CC  6ED4               	movwf	212,c	;volatile
  6350   0023CE                     
  6351                           ; BSR set to: 14
  6352                           ;mcc_generated_files/timer/src/tmr0.c: 127:     TMR0L = (uint8_t) timerTMR0ReloadVal16bi
      +                          t;
  6353   0023CE  C044  FFD3         	movff	_timerTMR0ReloadVal16bit,4051	;volatile
  6354   0023D2                     
  6355                           ; BSR set to: 14
  6356                           ;mcc_generated_files/timer/src/tmr0.c: 129:     if(TMR0_OverflowCallback)
  6357   0023D2  502F               	movf	_TMR0_OverflowCallback^0,w,c
  6358   0023D4  1030               	iorwf	(_TMR0_OverflowCallback+1)^0,w,c
  6359   0023D6  1031               	iorwf	(_TMR0_OverflowCallback+2)^0,w,c
  6360   0023D8  B4D8               	btfsc	status,2,c
  6361   0023DA  EFF1  F011         	goto	i2u174_41
  6362   0023DE  EFF3  F011         	goto	i2u174_40
  6363   0023E2                     i2u174_41:
  6364   0023E2  EF00  F012         	goto	i2l641
  6365   0023E6                     i2u174_40:
  6366   0023E6                     
  6367                           ; BSR set to: 14
  6368                           ;mcc_generated_files/timer/src/tmr0.c: 130:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          131:         TMR0_OverflowCallback();
  6369   0023E6  D802               	call	i2u175_48
  6370   0023E8  EF00  F012         	goto	i2u175_49
  6371   0023EC                     i2u175_48:
  6372   0023EC  0005               	push	
  6373   0023EE  6EFA               	movwf	pclath,c
  6374   0023F0  502F               	movf	_TMR0_OverflowCallback^0,w,c
  6375   0023F2  6EFD               	movwf	tosl,c
  6376   0023F4  5030               	movf	(_TMR0_OverflowCallback+1)^0,w,c
  6377   0023F6  6EFE               	movwf	tosh,c
  6378   0023F8  5031               	movf	(_TMR0_OverflowCallback+2)^0,w,c
  6379   0023FA  6EFF               	movwf	tosu,c
  6380   0023FC  50FA               	movf	pclath,w,c
  6381   0023FE  0012               	return		;indir
  6382   002400                     i2u175_49:
  6383   002400                     i2l641:
  6384   002400  0012               	return		;funcret
  6385   002402                     __end_of_TMR0_OverflowISR:
  6386                           	callstack 0
  6387                           
  6388 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  6389 ;; Defined at:
  6390 ;;		line 140 in file "mcc_generated_files/timer/src/tmr0.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		None
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_TMR0_Initialize
  6414 ;;		i2_TMR0_Initialize
  6415 ;;		_TMR0_OverflowISR
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text40
  6420   0025CC                     __ptext40:
  6421                           	callstack 0
  6422   0025CC                     _TMR0_DefaultOverflowCallback:
  6423                           	callstack 22
  6424   0025CC  0012               	return		;funcret
  6425   0025CE                     __end_of_TMR0_DefaultOverflowCallback:
  6426                           	callstack 0
  6427                           
  6428 ;; *************** function _tmr0func *****************
  6429 ;; Defined at:
  6430 ;;		line 128 in file "main.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; Hardware stack levels required when called: 1
  6451 ;; This function calls:
  6452 ;;		_ModbusDelay
  6453 ;;		_TMR0_Stop
  6454 ;; This function is called by:
  6455 ;;		_main
  6456 ;;		_TMR0_OverflowISR
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text41
  6461   002348                     __ptext41:
  6462                           	callstack 0
  6463   002348                     _tmr0func:
  6464                           	callstack 21
  6465   002348                     
  6466                           ;main.c: 129:     ModbusDelay();
  6467   002348  ECD6  F012         	call	_ModbusDelay	;wreg free
  6468   00234C                     
  6469                           ;main.c: 130:     TimerCount++;
  6470   00234C  2A48               	incf	_TimerCount^0,f,c	;volatile
  6471   00234E                     
  6472                           ;main.c: 131:     if(TimerCount > 4){
  6473   00234E  0E04               	movlw	4
  6474   002350  6448               	cpfsgt	_TimerCount^0,c	;volatile
  6475   002352  EFAD  F011         	goto	i2u169_41
  6476   002356  EFAF  F011         	goto	i2u169_40
  6477   00235A                     i2u169_41:
  6478   00235A  EFC3  F011         	goto	i2l960
  6479   00235E                     i2u169_40:
  6480   00235E                     
  6481                           ;main.c: 132:         EndOfMessage = 1;
  6482   00235E  0E01               	movlw	1
  6483   002360  6E49               	movwf	_EndOfMessage^0,c	;volatile
  6484                           
  6485                           ;main.c: 133:         NewMessage = 1;
  6486   002362  0E01               	movlw	1
  6487   002364  6E4F               	movwf	_NewMessage^0,c	;volatile
  6488   002366                     
  6489                           ;main.c: 134:         MessageLength = z;
  6490   002366  C047  F04D         	movff	_z,_MessageLength	;volatile
  6491                           
  6492                           ;main.c: 135:         ModbusMessage = 1;
  6493   00236A  0E01               	movlw	1
  6494   00236C  6E4E               	movwf	_ModbusMessage^0,c	;volatile
  6495   00236E                     
  6496                           ;main.c: 136:         for(z = MessageLength; z != 256; z++){
  6497   00236E  C04D  F047         	movff	_MessageLength,_z	;volatile
  6498   002372                     i2l3606:
  6499                           
  6500                           ;main.c: 137:             received[z] = 0;
  6501   002372  0E00               	movlw	low _received
  6502   002374  2447               	addwf	_z^0,w,c	;volatile
  6503   002376  6ED9               	movwf	fsr2l,c
  6504   002378  6ADA               	clrf	fsr2h,c
  6505   00237A  0E02               	movlw	high _received
  6506   00237C  22DA               	addwfc	fsr2h,f,c
  6507   00237E  6ADF               	clrf	indf2,c
  6508   002380                     
  6509                           ;main.c: 138:         }
  6510   002380  2A47               	incf	_z^0,f,c	;volatile
  6511   002382  EFB9  F011         	goto	i2l3606
  6512   002386                     i2l960:
  6513   002386  0012               	return		;funcret
  6514   002388                     __end_of_tmr0func:
  6515                           	callstack 0
  6516                           
  6517 ;; *************** function _TMR0_Stop *****************
  6518 ;; Defined at:
  6519 ;;		line 86 in file "mcc_generated_files/timer/src/tmr0.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		None
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_tmr0func
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text42
  6547   0025C8                     __ptext42:
  6548                           	callstack 0
  6549   0025C8                     _TMR0_Stop:
  6550                           	callstack 21
  6551   0025C8                     
  6552                           ;mcc_generated_files/timer/src/tmr0.c: 88:     T0CON0bits.T0EN = 0;
  6553   0025C8  9ED5               	bcf	213,7,c	;volatile
  6554   0025CA  0012               	return		;funcret
  6555   0025CC                     __end_of_TMR0_Stop:
  6556                           	callstack 0
  6557                           
  6558 ;; *************** function _ModbusDelay *****************
  6559 ;; Defined at:
  6560 ;;		line 51 in file "libs/modbus.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		wreg, status,2
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_tmr0func
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text43
  6588   0025AC                     __ptext43:
  6589                           	callstack 0
  6590   0025AC                     _ModbusDelay:
  6591                           	callstack 21
  6592   0025AC                     
  6593                           ;libs/modbus.c: 52:      TMR0H = 0xDC;
  6594   0025AC  0EDC               	movlw	220
  6595   0025AE  6ED4               	movwf	212,c	;volatile
  6596                           
  6597                           ;libs/modbus.c: 53:      TMR0L = 0x66;
  6598   0025B0  0E66               	movlw	102
  6599   0025B2  6ED3               	movwf	211,c	;volatile
  6600   0025B4  0012               	return		;funcret
  6601   0025B6                     __end_of_ModbusDelay:
  6602                           	callstack 0
  6603                           
  6604 ;; *************** function _PIN_MANAGER_IOC *****************
  6605 ;; Defined at:
  6606 ;;		line 131 in file "mcc_generated_files/system/src/pins.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		None
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; This function calls:
  6627 ;;		Nothing
  6628 ;; This function is called by:
  6629 ;;		_INTERRUPT_InterruptManager
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text44
  6634   0025CE                     __ptext44:
  6635                           	callstack 0
  6636   0025CE                     _PIN_MANAGER_IOC:
  6637                           	callstack 23
  6638   0025CE  0012               	return		;funcret
  6639   0025D0                     __end_of_PIN_MANAGER_IOC:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _EUSART1_DefaultOverrunErrorCallback *****************
  6643 ;; Defined at:
  6644 ;;		line 329 in file "mcc_generated_files/uart/src/eusart1.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		None
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_EUSART1_Initialize
  6668 ;;		_EUSART1_ReceiveISR
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text45
  6673   0025BE                     __ptext45:
  6674                           	callstack 0
  6675   0025BE                     _EUSART1_DefaultOverrunErrorCallback:
  6676                           	callstack 22
  6677   0025BE                     
  6678                           ;mcc_generated_files/uart/src/eusart1.c: 332:     RC1STAbits.CREN = 0;
  6679   0025BE  989D               	bcf	157,4,c	;volatile
  6680                           
  6681                           ;mcc_generated_files/uart/src/eusart1.c: 333:     RC1STAbits.CREN = 1;
  6682   0025C0  889D               	bsf	157,4,c	;volatile
  6683   0025C2  0012               	return		;funcret
  6684   0025C4                     __end_of_EUSART1_DefaultOverrunErrorCallback:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function _EUSART1_DefaultFramingErrorCallback *****************
  6688 ;; Defined at:
  6689 ;;		line 324 in file "mcc_generated_files/uart/src/eusart1.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		None
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;Total ram usage:        0 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_EUSART1_Initialize
  6713 ;;		_EUSART1_ReceiveISR
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text46
  6718   0025D0                     __ptext46:
  6719                           	callstack 0
  6720   0025D0                     _EUSART1_DefaultFramingErrorCallback:
  6721                           	callstack 22
  6722   0025D0  0012               	return		;funcret
  6723   0025D2                     __end_of_EUSART1_DefaultFramingErrorCallback:
  6724                           	callstack 0
  6725                           
  6726                           	psect	rparam
  6727   000000                     
  6728                           	psect	temp
  6729   000050                     btemp:
  6730                           	callstack 0
  6731   000050                     	ds	1
  6732   000000                     int$flags	set	btemp
  6733   000000                     wtemp8	set	btemp+1
  6734   000000                     ttemp5	set	btemp+1
  6735   000000                     ttemp6	set	btemp+4
  6736   000000                     ttemp7	set	btemp+8
  6737                           
  6738                           	psect	idloc
  6739                           
  6740                           ;Config register IDLOC0 @ 0x200000
  6741                           ;	unspecified, using default values
  6742   200000                     	org	2097152
  6743   200000  FFFF               	dw	65535
  6744                           
  6745                           ;Config register IDLOC1 @ 0x200002
  6746                           ;	unspecified, using default values
  6747   200002                     	org	2097154
  6748   200002  FFFF               	dw	65535
  6749                           
  6750                           ;Config register IDLOC2 @ 0x200004
  6751                           ;	unspecified, using default values
  6752   200004                     	org	2097156
  6753   200004  FFFF               	dw	65535
  6754                           
  6755                           ;Config register IDLOC3 @ 0x200006
  6756                           ;	unspecified, using default values
  6757   200006                     	org	2097158
  6758   200006  FFFF               	dw	65535
  6759                           
  6760                           ;Config register IDLOC4 @ 0x200008
  6761                           ;	unspecified, using default values
  6762   200008                     	org	2097160
  6763   200008  FFFF               	dw	65535
  6764                           
  6765                           ;Config register IDLOC5 @ 0x20000A
  6766                           ;	unspecified, using default values
  6767   20000A                     	org	2097162
  6768   20000A  FFFF               	dw	65535
  6769                           
  6770                           ;Config register IDLOC6 @ 0x20000C
  6771                           ;	unspecified, using default values
  6772   20000C                     	org	2097164
  6773   20000C  FFFF               	dw	65535
  6774                           
  6775                           ;Config register IDLOC7 @ 0x20000E
  6776                           ;	unspecified, using default values
  6777   20000E                     	org	2097166
  6778   20000E  FFFF               	dw	65535
  6779                           
  6780                           	psect	config
  6781                           
  6782                           ;Config register CONFIG1L @ 0x300000
  6783                           ;	External Oscillator mode Selection bits
  6784                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6785                           ;	Power-up default value for COSC bits
  6786                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  6787   300000                     	org	3145728
  6788   300000  FA                 	db	250
  6789                           
  6790                           ;Config register CONFIG1H @ 0x300001
  6791                           ;	Clock Out Enable bit
  6792                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  6793                           ;	Clock Switch Enable bit
  6794                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6795                           ;	Fail-Safe Clock Monitor Enable bit
  6796                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  6797   300001                     	org	3145729
  6798   300001  FF                 	db	255
  6799                           
  6800                           ;Config register CONFIG2L @ 0x300002
  6801                           ;	Master Clear Enable bit
  6802                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  6803                           ;	Power-up Timer Enable bit
  6804                           ;	PWRTE = OFF, Power up timer disabled
  6805                           ;	Low-power BOR enable bit
  6806                           ;	LPBOREN = OFF, ULPBOR disabled
  6807                           ;	Brown-out Reset Enable bits
  6808                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  6809   300002                     	org	3145730
  6810   300002  FF                 	db	255
  6811                           
  6812                           ;Config register CONFIG2H @ 0x300003
  6813                           ;	Brown Out Reset Voltage selection bits
  6814                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  6815                           ;	ZCD Disable bit
  6816                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  6817                           ;	PPSLOCK bit One-Way Set Enable bit
  6818                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  6819                           ;	Stack Full/Underflow Reset Enable bit
  6820                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6821                           ;	Debugger Enable bit
  6822                           ;	DEBUG = 0x1, unprogrammed default
  6823                           ;	Extended Instruction Set Enable bit
  6824                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  6825   300003                     	org	3145731
  6826   300003  FF                 	db	255
  6827                           
  6828                           ;Config register CONFIG3L @ 0x300004
  6829                           ;	WDT Period Select bits
  6830                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6831                           ;	WDT operating mode
  6832                           ;	WDTE = OFF, WDT Disabled
  6833   300004                     	org	3145732
  6834   300004  9F                 	db	159
  6835                           
  6836                           ;Config register CONFIG3H @ 0x300005
  6837                           ;	WDT Window Select bits
  6838                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6839                           ;	WDT input clock selector
  6840                           ;	WDTCCS = SC, Software Control
  6841   300005                     	org	3145733
  6842   300005  FF                 	db	255
  6843                           
  6844                           ;Config register CONFIG4L @ 0x300006
  6845                           ;	Write Protection Block 0
  6846                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6847                           ;	Write Protection Block 1
  6848                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6849                           ;	Write Protection Block 2
  6850                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6851                           ;	Write Protection Block 3
  6852                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6853                           ;	Write Protection Block 3
  6854                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  6855                           ;	Write Protection Block 3
  6856                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  6857                           ;	Write Protection Block 3
  6858                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  6859                           ;	Write Protection Block 3
  6860                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  6861   300006                     	org	3145734
  6862   300006  FF                 	db	255
  6863                           
  6864                           ;Config register CONFIG4H @ 0x300007
  6865                           ;	Configuration Register Write Protection bit
  6866                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  6867                           ;	Boot Block Write Protection bit
  6868                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6869                           ;	Data EEPROM Write Protection bit
  6870                           ;	WRTD = OFF, Data EEPROM not write-protected
  6871                           ;	Scanner Enable bit
  6872                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  6873                           ;	Low Voltage Programming Enable bit
  6874                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  6875   300007                     	org	3145735
  6876   300007  FF                 	db	255
  6877                           
  6878                           ;Config register CONFIG5L @ 0x300008
  6879                           ;	UserNVM Program Memory Code Protection bit
  6880                           ;	CP = OFF, UserNVM code protection disabled
  6881                           ;	DataNVM Memory Code Protection bit
  6882                           ;	CPD = OFF, DataNVM code protection disabled
  6883   300008                     	org	3145736
  6884   300008  FF                 	db	255
  6885                           
  6886                           ;Config register CONFIG5H @ 0x300009
  6887                           ;	unspecified, using default values
  6888   300009                     	org	3145737
  6889   300009  FF                 	db	255
  6890                           
  6891                           ;Config register CONFIG6L @ 0x30000A
  6892                           ;	Table Read Protection Block 0
  6893                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6894                           ;	Table Read Protection Block 1
  6895                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6896                           ;	Table Read Protection Block 2
  6897                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6898                           ;	Table Read Protection Block 3
  6899                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6900                           ;	Table Read Protection Block 4
  6901                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  6902                           ;	Table Read Protection Block 5
  6903                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  6904                           ;	Table Read Protection Block 6
  6905                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  6906                           ;	Table Read Protection Block 7
  6907                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  6908   30000A                     	org	3145738
  6909   30000A  FF                 	db	255
  6910                           
  6911                           ;Config register CONFIG6H @ 0x30000B
  6912                           ;	Boot Block Table Read Protection bit
  6913                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6914   30000B                     	org	3145739
  6915   30000B  FF                 	db	255
  6916                           tosu	equ	0xFFF
  6917                           tosh	equ	0xFFE
  6918                           tosl	equ	0xFFD
  6919                           stkptr	equ	0xFFC
  6920                           pclatu	equ	0xFFB
  6921                           pclath	equ	0xFFA
  6922                           pcl	equ	0xFF9
  6923                           tblptru	equ	0xFF8
  6924                           tblptrh	equ	0xFF7
  6925                           tblptrl	equ	0xFF6
  6926                           tablat	equ	0xFF5
  6927                           prodh	equ	0xFF4
  6928                           prodl	equ	0xFF3
  6929                           indf0	equ	0xFEF
  6930                           postinc0	equ	0xFEE
  6931                           postdec0	equ	0xFED
  6932                           preinc0	equ	0xFEC
  6933                           plusw0	equ	0xFEB
  6934                           fsr0h	equ	0xFEA
  6935                           fsr0l	equ	0xFE9
  6936                           wreg	equ	0xFE8
  6937                           indf1	equ	0xFE7
  6938                           postinc1	equ	0xFE6
  6939                           postdec1	equ	0xFE5
  6940                           preinc1	equ	0xFE4
  6941                           plusw1	equ	0xFE3
  6942                           fsr1h	equ	0xFE2
  6943                           fsr1l	equ	0xFE1
  6944                           bsr	equ	0xFE0
  6945                           indf2	equ	0xFDF
  6946                           postinc2	equ	0xFDE
  6947                           postdec2	equ	0xFDD
  6948                           preinc2	equ	0xFDC
  6949                           plusw2	equ	0xFDB
  6950                           fsr2h	equ	0xFDA
  6951                           fsr2l	equ	0xFD9
  6952                           status	equ	0xFD8

Data Sizes:
    Strings     25
    Constant    90
    Data        5
    BSS         911
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      79
    BANK0           160      0     133
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0     232
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    CalculateCRC@string	PTR unsigned char  size(2) Largest target is 256
		 -> response(BANK1[256]), 

    d$cp	PTR const unsigned char  size(2) Largest target is 0

    d$p	PTR unsigned char  size(2) Largest target is 0

    EUSART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), NULL(), 

    EUSART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), NULL(), 

    EUSART1_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_ReceiveISR(), rxfunc(), 

    EUSART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_ReceiveISR(), rxfunc(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    IntToString$0	PTR unsigned char  size(1) Largest target is 5
		 -> calcAD@ma420(COMRAM[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_1(CODE[25]), 

    s$cp	PTR const unsigned char  size(2) Largest target is 0

    s$p	PTR unsigned char  size(2) Largest target is 0

    S1007$18$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_ReceiveISR(), rxfunc(), 

    S1007$20$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    S1007$21$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    S1007$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    S1007$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    S1007$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    S1007$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1007$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1007$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1007$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1007$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    S1007$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    S1007$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1007$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    S1007$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    S1007$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    S1007$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    S1007$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    S1007$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    S1007$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1007$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    S1007$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    S1007$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    S1007$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    S1007$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1007$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1007$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    S2347$cp	PTR const unsigned char  size(2) Largest target is 0

    S2347$p	PTR unsigned char  size(2) Largest target is 0

    S2368$buffer	PTR unsigned char  size(2) Largest target is 0

    S2368$source	PTR const unsigned char  size(2) Largest target is 0

    S839$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), tmr0func(), 

    S839TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    S839TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_PeriodCountSet(), 

    S839TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    S839TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    S839TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S839TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    sp__memmove	PTR void  size(2) Largest target is 100
		 -> InputRegister(BANK3[100]), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> i2_TMR0_Initialize(), TMR0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> i2_TMR0_OverflowCallbackRegister(), TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), tmr0func(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), tmr0func(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_IsTxReady
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_FramingErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_OverrunErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_RxCompleteCallbackRegister
    _DecodePacket->_WriteMultiCoil
    _WriteMultiCoil->_CalculateCRC
    _WriteCoil->_CalculateCRC
    _ReadIR->_CalculateCRC
    _ReadHR->_CalculateCRC
    _ReadDI->_CalculateCRC
    _ReadCoil->_CalculateCRC
    _PresetSR->_CalculateCRC

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _rxfunc->i2_TMR0_Initialize
    i2_TMR0_Initialize->i2_TMR0_OverflowCallbackRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15392
                       _DecodePacket
 _EUSART1_RxCompleteCallbackRegister
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               4     3      1    1533
                                             31 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1405
                                             26 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                            9     5      4    1058
                                             22 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     698
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      68
                                             12 COMRAM     1     1      0
                  _EUSART1_IsTxReady
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_IsTxReady                                    1     1      0      24
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     904
                    _ADCC_Initialize
                   _CLOCK_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             14 COMRAM     2     2      0
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        3     0      3     174
                                             11 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                             11 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                             11 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                             11 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     436
_EUSART1_FramingErrorCallbackRegiste
_EUSART1_OverrunErrorCallbackRegiste
 _EUSART1_RxCompleteCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART1_RxCompleteCallbackRegister                   3     0      3     196
                                             11 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_OverrunErrorCallbackRegister                 3     0      3     120
                                             11 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_FramingErrorCallbackRegister                 3     0      3     120
                                             11 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DecodePacket                                         0     0      0   12585
                           _CheckCRC
                           _PresetSR
                           _ReadCoil
                             _ReadDI
                             _ReadHR
                             _ReadIR
                          _WriteCoil
                     _WriteMultiCoil
 ---------------------------------------------------------------------------------
 (2) _WriteMultiCoil                                      19    19      0    2117
                                             21 COMRAM    19    19      0
                       _CalculateCRC
                      _ClearResponse
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _WriteCoil                                           17    17      0    1552
                                             21 COMRAM    17    17      0
                       _CalculateCRC
                      _ClearResponse
 ---------------------------------------------------------------------------------
 (2) _ReadIR                                              12    12      0    1707
                                             21 COMRAM    12    12      0
                       _CalculateCRC
                      _ClearResponse
 ---------------------------------------------------------------------------------
 (2) _ReadHR                                              11    11      0    1707
                                             21 COMRAM    11    11      0
                       _CalculateCRC
                      _ClearResponse
 ---------------------------------------------------------------------------------
 (2) _ReadDI                                              17    17      0    1895
                                             21 COMRAM    17    17      0
                       _CalculateCRC
                      _ClearResponse
 ---------------------------------------------------------------------------------
 (2) _ReadCoil                                            17    17      0    1896
                                             21 COMRAM    17    17      0
                       _CalculateCRC
                      _ClearResponse
 ---------------------------------------------------------------------------------
 (2) _PresetSR                                            18    18      0    1530
                                             21 COMRAM    18    18      0
                       _CalculateCRC
                      _ClearResponse
 ---------------------------------------------------------------------------------
 (3) _ClearResponse                                        2     2      0      68
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalculateCRC                                        10     6      4    1177
                                             11 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _CheckCRC                                             8     8      0     181
                                             11 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           6     6      0     147
                                              5 COMRAM     6     6      0
                                NULL *
                 _EUSART1_ReceiveISR *
                    _PIN_MANAGER_IOC
                   _TMR0_OverflowISR
                             _rxfunc *
 ---------------------------------------------------------------------------------
 (8) _rxfunc                                               0     0      0      48
                  i2_TMR0_Initialize
 ---------------------------------------------------------------------------------
 (9) i2_TMR0_Initialize                                    2     2      0      48
                                              3 COMRAM     2     2      0
    i2_TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (10) i2_TMR0_OverflowCallbackRegister                     3     0      3      48
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (8) _TMR0_OverflowISR                                     0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
                           _tmr0func *
 ---------------------------------------------------------------------------------
 (9) _tmr0func                                             0     0      0       0
                        _ModbusDelay
                          _TMR0_Stop
 ---------------------------------------------------------------------------------
 (10) _TMR0_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ModbusDelay                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_ReceiveISR                                   2     2      0      99
                                              0 COMRAM     2     2      0
                                NULL *
_EUSART1_DefaultFramingErrorCallback *
_EUSART1_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DecodePacket
     _CheckCRC
     _PresetSR
       _CalculateCRC
       _ClearResponse
     _ReadCoil
       _CalculateCRC
       _ClearResponse
     _ReadDI
       _CalculateCRC
       _ClearResponse
     _ReadHR
       _CalculateCRC
       _ClearResponse
     _ReadIR
       _CalculateCRC
       _ClearResponse
     _WriteCoil
       _CalculateCRC
       _ClearResponse
     _WriteMultiCoil
       _CalculateCRC
       _ClearResponse
       ___awdiv
   _EUSART1_RxCompleteCallbackRegister
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CLOCK_Initialize
     _EUSART1_Initialize
       _EUSART1_FramingErrorCallbackRegister
       _EUSART1_OverrunErrorCallbackRegister
       _EUSART1_RxCompleteCallbackRegister
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
   _TMR0_OverflowCallbackRegister
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART1_IsTxReady
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_ReceiveISR *
     NULL(Fake) *
     _EUSART1_DefaultFramingErrorCallback *
     _EUSART1_DefaultOverrunErrorCallback *
   _PIN_MANAGER_IOC *
   _TMR0_OverflowISR *
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
     _tmr0func *
       _ModbusDelay
       _TMR0_Stop
   _rxfunc *
     i2_TMR0_Initialize
       i2_TMR0_OverflowCallbackRegister

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E8      11       90.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      85       5       83.1%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      4F       1       84.0%
BITBIGSFRlhh        33      0       0      36        0.0%
BITBIGSFRllllll     28      0       0      51        0.0%
BITBIGSFRllllll     27      0       0      41        0.0%
BITBIGSFRhlh        1B      0       0      35        0.0%
BITBIGSFRllllll     16      0       0      42        0.0%
BITBIGSFRllllll     14      0       0      43        0.0%
BITBIGSFRhh          D      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      50        0.0%
BITBIGSFRllllll      A      0       0      46        0.0%
BITBIGSFRllhhh       8      0       0      37        0.0%
BITBIGSFRllhl        5      0       0      39        0.0%
BITBIGSFRllllll      4      0       0      48        0.0%
BITBIGSFRllllll      2      0       0      49        0.0%
BITBIGSFRllhhl       2      0       0      38        0.0%
BITBIGSFRlllhl       2      0       0      40        0.0%
BITBIGSFRllllll      1      0       0      44        0.0%
BITBIGSFRllllll      1      0       0      45        0.0%
BITBIGSFRllllll      1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3BC      52        0.0%
DATA                 0      0     3BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jun 19 10:29:49 2024

                                                  _z 0047                                                   l70 1F90  
                                                 l66 2460                                                   l82 1F94  
                                                 l93 155C                                         ___awdiv@sign 0011  
                                         ReadDI@QtDI 001F                                                  l111 1ADE  
                                                l104 16F4                                                  l122 1106  
                                                l131 118E                                                  l142 131E  
                                                l151 13A6                                                  l160 19B2  
                                                l170 181A                                                  l155 1920  
                                                l173 1884                                                  l190 1B08  
                                                l182 1FFA                                                  l502 2346  
                                                l185 2026                                                  l194 1B50  
                                                l178 1FBE                                                  l274 226E  
                                                l525 259C                                                  l198 1BC0  
                                                l551 2580                                                  l456 1EE2  
                                                l538 258E                                                  l619 23C4  
                                                l571 2542                                                  l803 2488  
                                                l644 255A                                                  l804 248A  
                                                l584 2572                                                  l826 25BC  
                                                l852 24CE                                                  l749 2218  
                                                l838 250E                                                  l848 24F0  
                                                l856 24AC                           ??_INT0_SetInterruptHandler 000F  
                                                prod 0FF3                                                  tosl 0FFD  
                                                wreg 0FE8                                         _BAUD1CONbits 0F9F  
                                               l3000 2142                                                 l3002 2168  
                                               l3020 1AE0                                                 l3100 1050  
                                               l3004 2170                                                 l3012 218C  
                                               l3030 1B16                                                 l3022 1AE2  
                                               l3110 1092                                                 l3102 1054  
                                               l3006 217C                                                 l3040 1B74  
                                               l3032 1B1A                                                 l3024 1AF6  
                                               l3120 10C4                                                 l3104 107C  
                                               l3112 1098                                                 l3200 1294  
                                               l3008 2180                                                 l3042 1B78  
                                               l3034 1B2A                                                 l3026 1AF8  
                                               l3122 10EC                                                 l3114 10A0  
                                               l3106 107E                                                 l3210 12B8  
                                               l3202 1296                                                 l1194 1E2A  
                                               l3044 1B7C                                                 l3036 1B2E  
                                               l3028 1AFA                                                 l3140 114C  
                                               l3124 10EE                                                 l3116 10B8  
                                               l3108 1080                                                 l3132 110C  
                                               l3060 0F96                                                 l3220 1306  
                                               l3212 12D0                                                 l3204 1298  
                                               l3300 155E                                                 l3046 1B9A  
                                               l3054 1BBE                                                 l3038 1B5E  
                                               l3142 115C                                                 l3134 1126  
                                               l3118 10C0                                                 l3126 10F0  
                                               l3070 0FEC                                                 l3062 0FA2  
                                               l3230 133E                                                 l3214 12D8  
                                               l3222 1308                                                 l3206 12AA  
                                               l3150 11B0                                                 l3310 1598  
                                               l3302 1576                                                 l3048 1BB8  
                                               l3144 115E                                                 l3136 1134  
                                               l3080 1000                                                 l3072 0FEE  
                                               l3064 0FA8                                                 l3240 1376  
                                               l3232 134C                                                 l3216 12DC  
                                               l3208 12B0                                                 l3160 11D0  
                                               l3152 11BC                                                 l3320 1604  
                                               l3312 159E                                                 l3304 1582  
                                               l3400 198A                                                 l3410 19EC  
                                               l3146 118A                                                 l3138 1144  
                                               l3090 102C                                                 l3082 1004  
                                               l3074 0FF4                                                 l3066 0FAE  
                                               l3058 0F76                                                 l3242 13A2  
                                               l3234 135C                                                 l3218 1304  
                                               l3170 120C                                                 l3162 11EE  
                                               l3154 11C0                                                 l3250 13D6  
                                               l3330 165C                                                 l3322 1606  
                                               l3314 15A8                                                 l3306 1588  
                                               l3402 199A                                                 l1651 2528  
                                               l3420 1A10                                                 l3412 19F8  
                                               l3084 1008                                                 l3076 0FF8  
                                               l3068 0FDC                                                 l3236 1364  
                                               l3228 1324                                                 l3180 1220  
                                               l3172 1210                                                 l3164 11F4  
                                               l3156 11C6                                                 l3148 1190  
                                               l3260 1402                                                 l3252 13DC  
                                               l3244 13A8                                                 l3340 16B0  
                                               l3332 165E                                                 l3324 162C  
                                               l3316 15B0                                                 l3308 158E  
                                               l3404 199C                                                 l3430 1A6A  
                                               l3422 1A1A                                                 l3414 19FE  
                                               l3078 0FFC                                                 l3238 1374  
                                               l3174 1214                                                 l3166 1204  
                                               l3158 11CC                                                 l3270 1492  
                                               l3262 142A                                                 l3254 13E6  
                                               l3246 13C4                                                 l3350 16DE  
                                               l3342 16C0                                                 l3326 163A  
                                               l3318 15D6                                                 l3334 1660  
                                               l3406 19AE                                                 l3510 1880  
                                               l3440 1A84                                                 l3432 1A74  
                                               l3424 1A20                                                 l3416 1A04  
                                               l3408 19B4                                                 l3096 1030  
                                               l3088 101C                                                 l3192 1248  
                                               l3184 1234                                                 l3176 1218  
                                               l3168 1206                                                 l3280 14DE  
                                               l3272 1494                                                 l3264 145A  
                                               l3256 13EC                                                 l3248 13D0  
                                               l3352 16F0                                                 l3344 16C4  
                                               l3336 1688                                                 l3328 163C  
                                               l3360 18C6                                                 l3504 185C  
                                               l3512 221A                                                 l3520 1E48  
                                               l1680 2300                                                 l3442 1AA0  
                                               l3434 1A78                                                 l3426 1A26  
                                               l3418 1A0A                                                 l3098 1048  
                                               l3194 1260                                                 l3186 1244  
                                               l3178 121C                                                 l3290 1526  
                                               l3282 14F8                                                 l3274 14B6  
                                               l3266 145C                                                 l3258 13F6  
                                               l3354 16F0                                                 l3346 16CC  
                                               l3338 16A2                                                 l3370 18E8  
                                               l3362 18CC                                                 l3506 186C  
                                               l3514 2268                                                 l4330 21CC  
                                               l3530 1E94                                                 l3522 1E4A  
                                               l1674 21B6                                                 l3452 1AB2  
                                               l3444 1AA6                                                 l3436 1A7C  
                                               l3428 1A40                                                 l3196 1268  
                                               l3292 1536                                                 l3284 1506  
                                               l3276 14B8                                                 l3268 1484  
                                               l3348 16DC                                                 l3380 1950  
                                               l3372 18EE                                                 l3364 18D2  
                                               l3356 1886                                                 l3508 186E  
                                               l3460 16F6                                                 l3516 226C  
                                               l4340 21E0                                                 l4332 21D0  
                                               l3540 2302                                                 l3532 1E9A  
                                               l3524 1E8E                                                 l1692 1D66  
                                               l3620 22D8                                                 l2910 1F96  
                                               l3454 1AC2                                                 l3438 1A80  
                                               l3446 1AAA                                                 l3198 126C  
                                               l3294 153A                                                 l3286 1516  
                                               l3278 14BC                                                 l3390 197C  
                                               l3382 1954                                                 l3374 1906  
                                               l3366 18D8                                                 l3358 18BA  
                                               l3470 1784                                                 l3462 1722  
                                               l4350 2210                                                 l4342 21F0  
                                               l4334 21D4                                                 l4326 21B8  
                                               l3550 2334                                                 l3542 230A  
                                               l3534 1E9C                                                 l3526 1E90  
                                               l3518 1E2C                                                 l3622 22F8  
                                               l2920 1FCC                                                 l2912 1F98  
                                               l2904 243E                                                 l3456 1AC6  
                                               l3296 1558                                                 l3288 151A  
                                               l3392 1982                                                 l3384 1958  
                                               l3376 1916                                                 l3368 18DE  
                                               l3480 17DC                                                 l3472 1786  
                                               l3464 1736                                                 l3552 255C  
                                               l4352 2214                                                 l4344 2200  
                                               l4336 21D8                                                 l4328 21BC  
                                               l3544 231A                                                 l3536 1E9E  
                                               l3528 1E92                                                 l4360 253A  
                                               l3616 22BC                                                 l2930 201E  
                                               l2922 1FD0                                                 l2914 1FAC  
                                               l2906 244C                                                 l3458 1ADA  
                                               l3298 1558                                                 l3394 1986  
                                               l3386 195C                                                 l3378 1946  
                                               l3490 1832                                                 l3482 17E8  
                                               l3474 178E                                                 l3466 1748  
                                               l3650 1F30                                                 l3642 1F10  
                                               l4346 2208                                                 l4338 21DC  
                                               l3546 231E                                                 l3538 1EA0  
                                               l4362 253E                                                 l3618 22C4  
                                               l4450 2276                                                 l2924 1FE0  
                                               l2916 1FAE                                                 l2908 2450  
                                               l3388 1960                                                 l3492 1832  
                                               l3484 17EE                                                 l3476 17A4  
                                               l3468 1766                                                 l3652 1F38  
                                               l3644 1F18                                                 l3660 1F90  
                                               l3636 1EE4                                                 l4348 220C  
                                               l3548 2330                                                 l2940 254E  
                                               l4356 252A                                                 l4452 2298  
                                               l2926 1FE4                                                 l2918 1FB0  
                                               l3494 184E                                                 l3486 17FC  
                                               l3478 17AA                                                 l3654 1F40  
                                               l3646 1F20                                                 l3638 1EF8  
                                               l2950 24E4                                                 l2934 2590  
                                               l3590 23C0                                                 l3582 2392  
                                               l4358 2536                                                 l2862 2462  
                                               l4454 22A0                                                 l4446 2270  
                                               l2928 2008                                                 l2960 1D7A  
                                               l3496 1854                                                 l3488 17FE  
                                               l3648 1F28                                                 l2952 24AE  
                                               l2944 248C                                                 l2936 2582  
                                               l3584 23AA                                                 l2864 2466  
                                               l2872 25B8                                                 l4456 22B0  
                                               l4448 2274                                                 l2970 1DA0  
                                               l2962 1D82                                                 l3498 1858  
                                               l3658 1F48                                                 l2954 24C2  
                                               l2946 24A0                                                 l2938 2574  
                                               l3586 23BA                                                 l2866 2476  
                                               l2874 24F4                                                 l2890 1CEA  
                                               l2882 1C9E                                                 l3746 2510  
                                               l2980 1DD8                                                 l2972 1DA8  
                                               l2964 1D86                                                 l2956 1D68  
                                               l2948 24D0                                                 l3588 23BE  
                                               l2868 2484                                                 l2876 24F4  
                                               l2892 1D20                                                 l2884 1CB0  
                                               l3748 2514                                                 l2990 1E04  
                                               l2982 1DDE                                                 l2974 1DBA  
                                               l2966 1D94                                                 l2958 1D6C  
                                               l2878 2508                                                 l2886 1CC2  
                                               l2984 1DF4                                                 l2976 1DC2  
                                               l2992 1E0A                                                 l2968 1D9C  
                                               l2888 1CCC                                                 l2898 2436  
                                               l2994 1E1A                                                 l2986 1DFC  
                                               l2978 1DCA                                                 l2996 1E22  
                                               l2988 1DFE                                                 STR_1 0F5B  
                                               u1100 1CB0                                                 u1101 1CAC  
                                               u1110 1CC2                                                 u1111 1CBE  
                                               u1200 24C2                                                 u1120 1CEA  
                                               u1201 24BE                                                 u1121 1CE6  
                                               u1210 1D7A                                                 u1130 1D20  
                                               u1211 1D76                                                 u1131 1D1C  
                                               u1300 1B5E                                                 u1140 2460  
                                               u1220 1D94                                                 u1301 1B5A  
                                               u1141 245C                                                 u1221 1D90  
                                               u1310 1B9A                                                 u1150 1FCC  
                                               u1230 1DBA                                                 u1070 2476  
                                               u1311 1B96                                                 u1151 1FC8  
                                               u1231 1DB6                                                 u1071 2472  
                                               u1320 1BB8                                                 u1160 1FFA  
                                               u1240 1DD8                                                 u1080 2484  
                                               u1321 1BB4                                                 u1161 1FF6  
                                               u1241 1DD4                                                 u1081 2480  
                                               u1170 2008                                                 u1410 1102  
                                               u1330 0FEC                                                 u1250 1DF4  
                                               u1090 2508                                                 u1171 2004  
                                               u1411 10FE                                                 u1331 0FE8  
                                               u1251 1DF0                                                 u1091 2504  
                                               u1420 118A                                                 u1404 10D6  
                                               u1340 1018                                                 u1260 1E1A  
                                               u1180 24A0                                                 u1421 1186  
                                               u1405 10D2                                                 u1341 1014  
                                               u1261 1E16                                                 u1181 249C  
                                               _LATA 0F83                                                 u1350 102C  
                                               u1510 131A                                                 u1430 1204  
                                               u1190 24E4                                                 u1270 2168  
                                               _LATB 0F84                                                 u1351 1028  
                                               u1511 1316                                                 u1431 1200  
                                               u1191 24E0                                                 u1271 2164  
                                               _LATC 0F85                                                 u1280 1B16  
                                               u1360 1048                                                 u1520 13A2  
                                               u1504 12EE                                                 u1440 1230  
                                               u1600 1946                                                 _LATD 0F86  
                                               u1281 1B12                                                 u1361 1044  
                                               u1521 139E                                                 u1505 12EA  
                                               u1441 122C                                                 u1601 1942  
                                               _LATE 0F87                                                 u1290 1B50  
                                               u1450 1244                                                 u1530 142A  
                                               u1610 19AE                                                 u3210 22B0  
                                               u1291 1B4C                                                 u1451 1240  
                                               u1531 1426                                                 u1611 19AA  
                                               u3211 22AC                                                 u1620 1A6A  
                                               u1380 1092                                                 u1460 1260  
                                               u1540 14DE                                                 u1700 22F8  
                                               u1621 1A66                                                 u1381 108E  
                                               u1461 125C                                                 u1541 14DA  
                                               u1701 22F4                                                 u1630 1ADA  
                                               u1390 10B8                                                 u1374 1066  
                                               u1550 1558                                                 u1710 1EF8  
                                               u1631 1AD6                                                 u1391 10B4  
                                               u1375 1062                                                 u1551 1554  
                                               u1711 1EF4                                                 u1480 12AA  
                                               u1560 15D6                                                 u1640 1784  
                                               u1720 1F0C                                                 u1481 12A6  
                                               u1561 15D2                                                 u1641 1780  
                                               u1721 1F08                                                 u1490 12D0  
                                               u1474 127E                                                 u1570 1688  
                                               u1491 12CC                                                 u1475 127A  
                                               u1571 1684                                                 u1580 16F0  
                                               u1660 17DC                                                 u1581 16EC  
                                               u1661 17D8                                                 u1590 1906  
                                               u1670 181A                                                 u1654 17C8  
                                               u1591 1902                                                 u1671 1816  
                                               u1655 17C4                                                 u1680 1880  
                                               u1681 187C                                                 i2l61 25B4  
                                               _WPUA 0F10                                                 _WPUB 0F18  
                                               _WPUC 0F20                                                 _WPUD 0F25  
                                               _WPUE 0F2D                                        _EUSART1_Write 25B6  
                                               _dbuf 0364                                                 _main 2270  
                                               _prec 0040                                                 fsr1h 0FE2  
                                               fsr2h 0FDA                                                 indf1 0FE7  
                                               indf2 0FDF                                                 fsr1l 0FE1  
                                               fsr2l 0FD9                                                 btemp 0050  
                          ?_INT2_SetInterruptHandler 000C                                                 prodh 0FF4  
                                               prodl 0FF3                                                 start 00D0  
                                       ___param_bank 0000                                     _TMR0_OverflowISR 23C6  
                            __end_of_TMR0_Initialize 23C6                                _eusart1RxStatusBuffer 00C4  
                                              _ADACQ 0F5C                                                _ADCAP 0F5D  
                                              _ADACT 0F56                                                ?_main 0001  
                                              _ADCLK 0F57                                                _ADCNT 0F67  
                                              _ADPCH 0F5F                                                _ADREF 0F58  
                                    __end_of___awdiv 1E2C                                                _ADPRE 0F5E  
                                              _ADRPT 0F66                                      ___awdiv@divisor 000E  
                                PresetSR@PresetValue 0024                                                _IOCAF 0F0A  
                                              _IOCBF 0F12                                                _IOCCF 0F1A  
                                              _IOCAN 0F0B                                                _IOCEF 0F27  
                                              _IOCAP 0F0C                                                _IOCBN 0F13  
                                              _IOCBP 0F14                                                _IOCCN 0F1B  
                                              _IOCCP 0F1C                                                _IOCEN 0F28  
                                              _IOCEP 0F29                                                i2l510 007A  
                                              i2l514 00B4                                                i2l515 00B4  
                                              i2l507 0048                                                i2l625 25CA  
                                              i2l641 2400                                                i2l459 25CE  
                                              i2l619 2434                                                i2l644 25AA  
                                              i2l647 25CC                                                i2l823 1C9C  
                                              i2l841 25D0                                                i2l844 25C2  
                                              i2l960 2386                                                i2l953 20B8  
                                    ___awdiv@counter 0010                                          ReadCoil@CRC 001A  
                                              _OSCEN 0EDC                                                _UART1 0F01  
                                       vfpfcnvrt@fmt 0019                                                _TMR0H 0FD4  
                                              _TMR0L 0FD3                                                _TX1IF 766C  
                                              _TRISA 0F88                                                _TRISB 0F89  
                                              _TRISC 0F8A                                                _TRISD 0F8B  
                                              _TRISE 0F8C                                          ReadCoil@lsb 0023  
                                              _Coils 0092         __end_of_EUSART1_FramingErrorCallbackRegister 24F2  
             ??_EUSART1_FramingErrorCallbackRegister 000F                ?_EUSART1_FramingErrorCallbackRegister 000C  
               _EUSART1_FramingErrorCallbackRegister 24D0                              __end_of_PIN_MANAGER_IOC 25D0  
                                              _flags 0046                                                _fputc 1C9E  
                                              _width 003E                                                _putch 24F2  
                           _INT1_SetInterruptHandler 2582                                       ?_EUSART1_Write 0001  
                                              pclath 0FFA                                                pclatu 0FFB  
                                              tablat 0FF5                                        ??_ModbusDelay 0001  
                                   __end_of_CheckCRC 1BC2                                _EUSART1_AutoBaudQuery 0000  
                                              ttemp5 0051                                                ttemp6 0054  
                                              ttemp7 0058                                                status 0FD8  
                                              wtemp8 0051                                      __initialization 20BA  
                                      ReadDI@QtBytes 0021                           __end_of_EUSART1_Initialize 221A  
                                       __end_of_main 22BC                                           _NewMessage 004F  
                                       _CalculateCRC 1F96                                     __end_of_ReadCoil 1190  
                        ?_INTERRUPT_InterruptManager 0001                           __end_of_EUSART1_ReceiveISR 1C9E  
                                             ??_main 0029                                        __activetblptr 0003  
                                   __end_of_PresetSR 1AE0    EUSART1_RxCompleteCallbackRegister@callbackHandler 000C  
EUSART1_OverrunErrorCallbackRegister@callbackHandler 000C  EUSART1_FramingErrorCallbackRegister@callbackHandler 000C  
                                       _DecodePacket 1EE4                                               _ADACCH 0F71  
                                             _ADACCL 0F70                                               _ADCON0 0F60  
                                             _ADCON1 0F59                                               _ADCON2 0F5A  
                                             _ADCON3 0F5B                                               _ADERRH 0F6F  
                                             _ADERRL 0F6E                                               ?_fputc 000E  
                                             _ADLTHH 0F6B                                               _ADLTHL 0F6A  
                                             _ADRESH 0F64                                               _ADRESL 0F63  
                                             _ADSTAT 0F65                                               _ADUTHH 0F6D  
                                   ___awdiv@dividend 000C                                               _ADUTHL 0F6C  
                                             _ANSELA 0F11                                               ?_putch 0001  
                                             _ANSELB 0F19                                               _ANSELC 0F21  
                                             _ANSELD 0F26                                               _ANSELE 0F2E  
                                             _T0CON0 0FD5                                               _T0CON1 0FD6  
                                             _RC1REG 0F99                                               _RC1STA 0F9D  
                                             _RB4PPS 0EF3                                               _ODCONA 0F0F  
                                             _ODCONB 0F17                                               _ODCONC 0F1F  
                                             _ODCOND 0F24                                               _ODCONE 0F2C  
                                             i2l3018 259E                                               i2l3600 235E  
                                             i2l4400 1C3C                                               i2l3602 2366  
                                             i2l4402 1C50                                               i2l3604 236E  
                                             i2l4412 1C8A                                               i2l4404 1C6A  
                                             i2l4420 0032                                               i2l3606 2372  
                                             i2l3630 242A                                               i2l4414 1C96  
                                             i2l4406 1C6E                                               i2l4430 0088  
                                             i2l4422 0040                                               i2l3608 2380  
                                             i2l3632 242E                                               i2l4416 1C9A  
                                             i2l4408 1C74                                               i2l4432 0096  
                                             i2l4424 0056                                               i2l4354 25BE  
                                             i2l3634 2430                                               i2l3626 2402  
                                             i2l4426 0064                                               i2l4418 0022  
                                             i2l3628 241A                                               i2l4428 0072  
                                             i2l2942 25C8                                               i2l4390 1BE0  
                                             i2l3680 23D2                                               i2l3760 2068  
                                             i2l3752 2028                                               i2l4392 1BF0  
                                             _INLVLA 0F0D                                               i2l3594 2348  
                                             i2l3682 23E6                                               i2l3674 23C6  
                                             i2l3770 2092                                               i2l3762 206A  
                                             i2l3754 2038                                               i2l4394 1C04  
                                             i2l4386 1BC2                                               _INLVLB 0F15  
                                             _INLVLC 0F1D                                               i2l3596 234C  
                                             i2l3676 23CA                                               i2l3780 20B0  
                                             i2l3772 20A2                                               i2l3756 2048  
                                             i2l3764 206E                                               i2l4396 1C1E  
                                             i2l4388 1BD2                                               _INLVLD 0F22  
                                             _INLVLE 0F2A                                               i2l3598 234E  
                                             i2l3678 23CE                                               i2l3782 20B4  
                                             i2l3774 20A4                                               i2l3766 207E  
                                             i2l3758 2058                                               i2l4398 1C2C  
                                             i2l2896 25AC                                               i2l3776 20A8  
                                             i2l3768 2082                                               i2l3778 20AC  
                                             _OSCFRQ 0EDE                                               _RX1PPS 0EB5  
                                             _TX1REG 0F9A                                               _TX1STA 0F9E  
                                             _ReadDI 1190                                               _ReadHR 13A8  
                                             _ReadIR 155E                                               _Timer0 0F49  
                                       vfprintf@cfmt 001F                                  __end_of_ModbusDelay 25B6  
                                       calcAD@F10955 00DC                                         calcAD@F10957 00E1  
                               WriteMultiCoil@length 0022                                    __end_of_TMR0_Stop 25CC  
                                          ??___awdiv 0010                                           _TimerCount 0048  
                                   ?_TMR0_Initialize 0001                                               clear_0 20F2  
                                             clear_1 2100                                               clear_2 2114  
                                             clear_3 2126                                               clear_4 2132  
                                   ___awdiv@quotient 0012                                               isa$std 0001  
                                             _printf 2510                                    ?_CLOCK_Initialize 0001  
                                       _EndOfMessage 0049                                               _rxfunc 2028  
                                    _ADCC_Initialize 221A                              ReadCoil@StartingAddress 001C  
                                   __end_of_tmr0func 2388                                               fputc@c 000E  
                       _INT2_DefaultInterruptHandler 0000                                         __pdataCOMRAM 004F  
                                    _HoldingRegister 0300                                   ??_CLOCK_Initialize 000C  
                                       __mediumconst 0000                         EUSART1_ReceiveISR@tempRxHead 0002  
                                             tblptrh 0FF7                                               tblptrl 0FF6  
                                             tblptru 0FF8         __end_of_EUSART1_OverrunErrorCallbackRegister 24D0  
             ??_EUSART1_OverrunErrorCallbackRegister 000F                ?_EUSART1_OverrunErrorCallbackRegister 000C  
               _EUSART1_OverrunErrorCallbackRegister 24AE                                     __end_of_vfprintf 2302  
                                    ??_EUSART1_Write 000C             INT2_SetInterruptHandler@InterruptHandler 000C  
           INT1_SetInterruptHandler@InterruptHandler 000C             INT0_SetInterruptHandler@InterruptHandler 000C  
                                   ?_PIN_MANAGER_IOC 0001                                      _eusart1RxBuffer 00D4  
                                  _SYSTEM_Initialize 252A                                        _MessageLength 004D  
                                  ReadHR@QtAddresses 001C                                           __accesstop 0060  
                            __end_of__initialization 2138                                   ?_SYSTEM_Initialize 0001  
                                      ___rparam_used 0001                                        __end_of_UART1 0F49  
                                     __pcstackCOMRAM 0001                                         __pidataBANK0 25C4  
                                ??_SYSTEM_Initialize 0011                                        __end_of_fputc 1D68  
                                      __end_of_putch 2510                                            ?_CheckCRC 0001  
                                      _ModbusMessage 004E                     __end_of_INT2_SetInterruptHandler 2582  
                                       WriteCoil@CRC 0020                                        _InputRegister 0384  
                           __end_of_TMR0_OverflowISR 2402                                              ??_fputc 0012  
                          __end_of_SYSTEM_Initialize 2544                                              ??_putch 000D  
                                      _eusart1RxHead 004C                                        _eusart1RxTail 004B  
                                         __pbssBANK0 0060                                           __pbssBANK1 0100  
                                         __pbssBANK2 0200                                           __pbssBANK3 0300  
                                          ?_ReadCoil 0001                                _INT0_InterruptHandler 0038  
                                        _ModbusDelay 25AC                                _TMR0_OverflowCallback 002F  
                                         WriteCoil@i 0026                                              ?_ReadDI 0001  
                                            ?_ReadHR 0001                                              ?_ReadIR 0001  
                                          ?_PresetSR 0001                              __end_of_ADCC_Initialize 2270  
                              ReadHR@StartingAddress 001A                                              _ADFLTRH 0F73  
                                            _ADFLTRL 0F72                                              _ADPREVH 0F62  
                                            _ADPREVL 0F61                                     _EUSART1_IsTxDone 0000  
                                            _ADSTPTH 0F69                               _EUSART1_IsTxReady$1577 000C  
                                            _ADSTPTL 0F68                                              _CRCACCH 0F77  
                                            _CRCACCL 0F76                                              ?_printf 0020  
                                            _CRCDATH 0F75                                              _CRCDATL 0F74  
                                            _CRCCON1 0F7D                                              ?_rxfunc 0001  
                                            _CRCXORH 0F7B                                              _CRCXORL 0F7A  
                                   _EUSART1_ErrorGet 0000                                    __end_of_WriteCoil 19B4  
                                         ??_CheckCRC 000C                                   PresetSR@AddressLow 0018  
                                       CheckCRC@CRCH 000E                           ??_INT1_SetInterruptHandler 000F  
                                       CheckCRC@CRCL 000F                                              _SP1BRGH 0F9C  
                                            _SP1BRGL 0F9B                                WriteMultiCoil@Address 0024  
                                            _OSCCON1 0ED8                                              _OSCCON3 0EDA  
                                WriteCoil@AddressLow 001A                                              _OSCTUNE 0EDD  
                                            _SLRCONA 0F0E                                              _SLRCONB 0F16  
                                            _SLRCONC 0F1E                                              _SLRCOND 0F23  
                                            _SLRCONE 0F2B                                              ReadDI@i 0024  
                                            ReadDI@j 0025                                              ReadDI@k 0026  
                                            ReadDI@l 0022                                              ReadHR@i 001E  
                                            ReadHR@j 0020                                              ReadIR@i 0020  
                                            ReadIR@j 0021                                WriteMultiCoil@QtCoils 0026  
                              WriteMultiCoil@QtBytes 001C                                           ??_ReadCoil 0016  
                                  ReadIR@QtAddresses 001E                            ?_INT0_SetInterruptHandler 000C  
                               _EUSART1_Deinitialize 0000                               _EUSART1_TransmitEnable 0000  
                                            __Hparam 0000                                            ?_tmr0func 0001  
                                            __Lparam 0000                           EUSART1_ReceiveISR@regValue 0001  
                                        PresetSR@CRC 0020                                           ??_PresetSR 0016  
                                     _WriteMultiCoil 16F6                                              ___awdiv 1D68  
                                          ?_vfprintf 001B                                         __psmallconst 0F00  
                                            __pcinit 20BA                                              __ramtop 0F00  
                                            __ptext0 2270                                              __ptext1 2510  
                                            __ptext2 22BC                                              __ptext3 2142  
                                            __ptext4 1C9E                                              __ptext5 24F2  
                                            __ptext6 25B6                                              __ptext7 2462  
                                            __ptext8 252A                                              __ptext9 2388  
                                    PresetSR@Address 0022                            WriteMultiCoil@AddressHigh 001A  
                                          CheckCRC@i 0012                                       ClearResponse@i 000C  
                            PresetSR@PresetValueHigh 001E                              _timerTMR0ReloadVal16bit 0044  
                                 _EUSART1_Initialize 21B8                             ??_PIN_MANAGER_Initialize 000C  
                                 _EUSART1_ReceiveISR 1BC2                                 end_of_initialization 2138  
                                 _WriteMultiCoil$176 001F                             _INT2_SetInterruptHandler 2574  
                                ?_EUSART1_Initialize 0001                                    CalculateCRC@_long 000E  
                                            fputc@fp 0010                          _EUSART1_OverrunErrorHandler 0029  
                                ?_EUSART1_ReceiveISR 0001                                 CalculateCRC@CRC_TEMP 0012  
                             __end_of_WriteMultiCoil 1886                                           ??_tmr0func 0001  
                                  __end_of_vfpfcnvrt 21B8                                        _ClearResponse 2436  
                                            postdec1 0FE5                                              postdec2 0FDD  
                                            postinc0 0FEE                                              postinc1 0FE6  
                                            postinc2 0FDE                                     ?_ADCC_Initialize 0001  
                                         ??_vfprintf 001F                                 ??_EUSART1_Initialize 000F  
                              _INT1_InterruptHandler 0035                                            _TMR0_Stop 25C8  
                                          _PORTCbits 0F8F                                            _PORTDbits 0F90  
                               ??_EUSART1_ReceiveISR 0001              __end_ofi2_TMR0_OverflowCallbackRegister 25AC  
              __end_of_TMR0_OverflowCallbackRegister 255C                    ??i2_TMR0_OverflowCallbackRegister 0004  
                   ?i2_TMR0_OverflowCallbackRegister 0001                      i2_TMR0_OverflowCallbackRegister 259E  
                      _TMR0_OverflowCallbackRegister 2544         TMR0_OverflowCallbackRegister@CallbackHandler 000C  
     i2TMR0_OverflowCallbackRegister@CallbackHandler 0001                                      ReadCoil@QtCoils 001F  
                                    ReadCoil@QtBytes 0021                                            ReadDI@CRC 001A  
                                EUSART1_Write@txData 000C                                ReadIR@StartingAddress 001C  
                                          ReadDI@lsb 0023                                            ReadHR@CRC 0018  
                                          ReadIR@CRC 001A                                         _EUSART1_Read 0000  
               __end_of_TMR0_DefaultOverflowCallback 25CE                         _TMR0_DefaultOverflowCallback 25CC  
                                          ReadCoil@i 0024                                            ReadCoil@j 0025  
                                          ReadCoil@k 0026                                            ReadCoil@l 0022  
                                    ?_WriteMultiCoil 0001                                       ?_ClearResponse 0001  
                                     __end_of_ReadDI 13A8                                       __end_of_ReadHR 155E  
                                     __end_of_ReadIR 16F6                            _TMR0_Initialize$intlevel0 2392  
                                     __end_of_Timer0 0F5B                         __end_of_INTERRUPT_Initialize 2348  
                                ReadCoil@udRemaining 001E                         _INT0_DefaultInterruptHandler 0000  
                                        vfpfcnvrt@ap 001A                                          vfpfcnvrt@fp 0017  
                                      __pidataCOMRAM 25D2                                           ?_TMR0_Stop 0001  
                                     __end_of_printf 252A                                       __end_of_rxfunc 20BA  
                                start_initialization 20BA                                    ?_TMR0_OverflowISR 0001  
                                        putch@txData 000D                                __end_of_EUSART1_Write 25BE  
                                 ??_TMR0_OverflowISR 0001                                         ?_ModbusDelay 0001  
                                           ??_ReadDI 0016                                             ??_ReadHR 0016  
                                           ??_ReadIR 0016                        ?_TMR0_DefaultOverflowCallback 0001  
                                          PresetSR@i 0026                                          vfprintf@fmt 001D  
                                        __pdataBANK0 00E1                                  WriteCoil@WriteValue 0022  
                                           ??_printf 0021                                             ??_rxfunc 0006  
                                     _eusart1RxCount 004A                                          __pbssCOMRAM 0029  
                   __end_of_INT0_SetInterruptHandler 259E                                          _CRCCON0bits 0F7C  
                                          _WriteCoil 1886                                    i2_TMR0_Initialize 2402  
                     ?_TMR0_OverflowCallbackRegister 000C                                   ?i2_TMR0_Initialize 0001  
                                  ReadDI@udRemaining 001E                                _INT2_InterruptHandler 0032  
                                    ??_ClearResponse 000C                                  ??i2_TMR0_Initialize 0004  
                             _PIN_MANAGER_Initialize 1E2C                                            __pintcode 0008  
                                           ?___awdiv 000C                                        ?_CalculateCRC 000C  
                       ??_INTERRUPT_InterruptManager 0006                                          ??_TMR0_Stop 0001  
                                           _BAUD1CON 0F9F                                          __smallconst 0F00  
                         ??_INT2_SetInterruptHandler 000F                                      WriteMultiCoil@i 0028  
                                    WriteMultiCoil@k 0023                                      WriteMultiCoil@l 0021  
                          __end_ofi2_TMR0_Initialize 2436                                        ?_DecodePacket 0001  
                                  _EUSART1_IsRxReady 0000                                    _EUSART1_IsTxReady 2462  
                                         ?_WriteCoil 0001                                   ?_EUSART1_IsTxReady 0001  
                               _INTERRUPT_Initialize 2302                               PresetSR@PresetValueLow 001C  
                                PresetSR@AddressHigh 001A                                     _CLOCK_Initialize 255C  
                                  ??_TMR0_Initialize 000F                                             _LATAbits 0F83  
                                           _LATEbits 0F87           __end_of_EUSART1_RxCompleteCallbackRegister 24AE  
               ??_EUSART1_RxCompleteCallbackRegister 000F                  ?_EUSART1_RxCompleteCallbackRegister 000C  
                 _EUSART1_RxCompleteCallbackRegister 248C                                  ??_EUSART1_IsTxReady 000C  
                          ?_INT1_SetInterruptHandler 000C                                             _PIE0bits 0EC2  
                                           _PIE3bits 0EC5                                        _DiscreteInput 0060  
                                           i2u311_40 1C86                                             i2u310_48 1C56  
                                           i2u311_41 1C82                                             i2u310_49 1C6A  
                                           i2u312_40 0032                                             i2u312_41 002E  
                                           i2u305_40 1BE0                                             i2u313_40 0040  
                                           i2u305_41 1BDC                                             i2u313_41 003C  
                                           i2u306_40 1C04                                             i2u314_40 0056  
                                           i2u306_41 1C00                                             i2u314_41 0052  
                                           i2u315_40 0064                                             i2u315_41 0060  
                                           i2u308_40 1C2C                                             i2u307_48 1C0A  
                                           i2u316_40 0072                                             i2u308_41 1C28  
                                           i2u307_49 1C1E                                             i2u316_41 006E  
                                           i2u309_40 1C50                                             i2u317_40 0088  
                                           i2u309_41 1C4C                                             i2u317_41 0084  
                                           i2u174_40 23E6                                             i2u318_40 0096  
                                           i2u174_41 23E2                                             i2u318_41 0092  
                                           _PIR0bits 0ECA                                             i2u175_48 23EC  
                                           i2u184_40 2038                                             i2u319_48 009C  
                                           i2u175_49 2400                                             i2u184_41 2034  
                                           i2u319_49 00B0                                             i2u169_40 235E  
                                           i2u185_40 2048                                             i2u169_41 235A  
                                           i2u185_41 2044                                             _PIR1bits 0ECB  
                                           i2u186_40 2058                                             i2u186_41 2054  
                                           i2u187_40 207E                                             i2u187_41 207A  
                                           i2u188_40 2092                                             i2u188_41 208E  
                                           _PIR3bits 0ECD                                 WriteCoil@AddressHigh 0018  
                                   CheckCRC@CRC_Temp 0010                                       ??_CalculateCRC 0010  
                                  ??_PIN_MANAGER_IOC 0001                       ??_TMR0_DefaultOverflowCallback 0001  
                                          _vfpfcnvrt 2142                                           _ADCON0bits 0F60  
                                         _ADCON1bits 0F59                                           _ADCON2bits 0F5A  
                                         _ADCON3bits 0F5B                                             _CheckCRC 1AE0  
                          __end_of_EUSART1_IsTxReady 248C                                       ??_DecodePacket 0029  
                                  WriteMultiCoil@CRC 001D                                            copy_data0 20CE  
                              ?_INTERRUPT_Initialize 0001                             _INT0_SetInterruptHandler 2590  
                                _EUSART1_AutoBaudSet 0000                                     ??_WriteMultiCoil 0016  
                                           _ReadCoil 0F76                              _EUSART1_TransmitDisable 0000  
                                         _ADSTATbits 0F65                                     WriteCoil@Address 0024  
                                           __Hrparam 0000                                           vfprintf@ap 001E  
                                           __Lrparam 0000                                           vfprintf@fp 001B  
                                           _PresetSR 19B4                                           ?_vfpfcnvrt 0017  
                                _TMR0_PeriodCountSet 0000          __end_of_EUSART1_DefaultFramingErrorCallback 25D2  
              ??_EUSART1_DefaultFramingErrorCallback 0001                 ?_EUSART1_DefaultFramingErrorCallback 0001  
                _EUSART1_DefaultFramingErrorCallback 25D0                                           _T0CON0bits 0FD5  
                                        ??_WriteCoil 0016                                             __ptext10 2544  
                                           __ptext11 1E2C                                             __ptext20 255C  
                                           __ptext12 2302                                             __ptext21 221A  
                                           __ptext13 2574                                             __ptext30 19B4  
                                           __ptext22 1EE4                                             __ptext14 2582  
                                           __ptext31 2436                                             __ptext23 16F6  
                                           __ptext15 2590                                             __ptext40 25CC  
                                           __ptext32 1F96                                             __ptext24 1D68  
                                           __ptext16 21B8                                             __ptext41 2348  
                                           __ptext33 1AE0                                             __ptext25 1886  
                                           __ptext17 248C                                             __ptext42 25C8  
                                           __ptext26 155E                                             __ptext18 24AE  
                                           __ptext43 25AC                                             __ptext35 1BC2  
                                           __ptext27 13A8                                             __ptext19 24D0  
                                           __ptext44 25CE                                             __ptext36 2028  
                                           __ptext28 1190                                             __ptext45 25BE  
                                           __ptext37 2402                                             __ptext29 0F76  
                                           __ptext46 25D0                                             __ptext38 259E  
                                           __ptext39 23C6                                        CalculateCRC@i 0014  
                                           _received 0200                                             _tmr0func 2348  
                                         _RC1STAbits 0F9D                                             isa$xinst 0000  
                                           _response 0100                                             int$flags 0050  
                                           _vfprintf 22BC                   __end_of_INTERRUPT_InterruptManager 00D0  
                         _INTERRUPT_InterruptManager 0008                                            printf@fmt 0020  
                            WriteCoil@WriteValueHigh 001E                          _EUSART1_FramingErrorHandler 002C  
                       _INT1_DefaultInterruptHandler 0000                                           _INTCONbits 0FF2  
                             ??_INTERRUPT_Initialize 000F                                   CalculateCRC@string 000C  
                               __end_of_CalculateCRC 2028                                             intlevel2 0000  
                           WriteMultiCoil@AddressLow 0018                              ?_PIN_MANAGER_Initialize 0001  
                              ReadDI@StartingAddress 001C                                 __end_of_DecodePacket 1F96  
                         _EUSART1_RxInterruptHandler 003B              _TMR0_OverflowCallbackRegister$intlevel0 254E  
                    ??_TMR0_OverflowCallbackRegister 000F                                             printf@ap 0021  
                             WriteCoil@WriteValueLow 001C                                          ??_vfpfcnvrt 001B  
                                 _eusart1RxLastError 0042                             __end_of_CLOCK_Initialize 2574  
                                    _TMR0_Initialize 2388                     __end_of_INT1_SetInterruptHandler 2590  
        __end_of_EUSART1_DefaultOverrunErrorCallback 25C4                ??_EUSART1_DefaultOverrunErrorCallback 0001  
               ?_EUSART1_DefaultOverrunErrorCallback 0001                  _EUSART1_DefaultOverrunErrorCallback 25BE  
                                         _TMR0_Start 0000                                           _TX1STAbits 0F9E  
                     __end_of_PIN_MANAGER_Initialize 1EE4                                    ??_ADCC_Initialize 000C  
                                    _PIN_MANAGER_IOC 25CE                                __end_of_ClearResponse 2462  
