;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/29/2024 05:36:14 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF83  	GOTO        1286
_interrupt:
;FIRMWARE_SYA_ver_1_3_0.c,101 :: 		void interrupt(){
0x0008	0xF019C000  	MOVFF       R0, 25
0x000C	0xF018C001  	MOVFF       R1, 24
0x0010	0xF017C00B  	MOVFF       R11, 23
0x0014	0xF016C00C  	MOVFF       R12, 22
0x0018	0xF015C00D  	MOVFF       R13, 21
;FIRMWARE_SYA_ver_1_3_0.c,103 :: 		if(PIR0.TMR0IF){
0x001C	0x010E      	MOVLB       14
0x001E	0xABCA      	BTFSS       PIR0, 5, 1
0x0020	0xD01E      	BRA         L_interrupt0
;FIRMWARE_SYA_ver_1_3_0.c,104 :: 		TMR0H = 0x3C;      // Timer para cada segundo y medio?
0x0022	0x0E3C      	MOVLW       60
0x0024	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_1_3_0.c,105 :: 		TMR0L = 0xB0;      //
0x0026	0x0EB0      	MOVLW       176
0x0028	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_1_3_0.c,106 :: 		PIR0.TMR0IF = 0;
0x002A	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,107 :: 		counter++;
0x002C	0x0E01      	MOVLW       1
0x002E	0x2422      	ADDWF       _counter, 0 
0x0030	0x6E00      	MOVWF       R0 
0x0032	0x0E00      	MOVLW       0
0x0034	0x2023      	ADDWFC      _counter+1, 0 
0x0036	0x6E01      	MOVWF       R1 
0x0038	0xF022C000  	MOVFF       R0, _counter
0x003C	0xF023C001  	MOVFF       R1, _counter+1
;FIRMWARE_SYA_ver_1_3_0.c,108 :: 		if(counter >= 200){
0x0040	0x0E80      	MOVLW       128
0x0042	0x1823      	XORWF       _counter+1, 0 
0x0044	0x6E00      	MOVWF       R0 
0x0046	0x0E80      	MOVLW       128
0x0048	0x5C00      	SUBWF       R0, 0 
0x004A	0xE102      	BNZ         L__interrupt148
0x004C	0x0EC8      	MOVLW       200
0x004E	0x5C22      	SUBWF       _counter, 0 
L__interrupt148:
0x0050	0xE306      	BNC         L_interrupt1
;FIRMWARE_SYA_ver_1_3_0.c,109 :: 		LED = ~LED;
0x0052	0x7883      	BTG         LATA, 4 
;FIRMWARE_SYA_ver_1_3_0.c,110 :: 		Events();
0x0054	0xD8F6      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,111 :: 		PIE0.TMR0IE = 0;
0x0056	0x010E      	MOVLB       14
0x0058	0x9BC2      	BCF         PIE0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,112 :: 		counter = 0;
0x005A	0x6A22      	CLRF        _counter 
0x005C	0x6A23      	CLRF        _counter+1 
;FIRMWARE_SYA_ver_1_3_0.c,113 :: 		}
L_interrupt1:
;FIRMWARE_SYA_ver_1_3_0.c,114 :: 		}
L_interrupt0:
;FIRMWARE_SYA_ver_1_3_0.c,115 :: 		if(1 == IOCCF.B0){
0x005E	0x010F      	MOVLB       15
0x0060	0xA11A      	BTFSS       IOCCF, 0, 1
0x0062	0xD038      	BRA         L_interrupt2
;FIRMWARE_SYA_ver_1_3_0.c,116 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0064	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_1_3_0.c,117 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0066	0x0E01      	MOVLW       1
0x0068	0x6E20      	MOVWF       _interruptC0 
0x006A	0x0E00      	MOVLW       0
0x006C	0x6E21      	MOVWF       _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,118 :: 		Delay_ms(50);
0x006E	0x0E02      	MOVLW       2
0x0070	0x6E0B      	MOVWF       R11, 0
0x0072	0x0E45      	MOVLW       69
0x0074	0x6E0C      	MOVWF       R12, 0
0x0076	0x0EA9      	MOVLW       169
0x0078	0x6E0D      	MOVWF       R13, 0
L_interrupt3:
0x007A	0x2E0D      	DECFSZ      R13, 1, 0
0x007C	0xD7FE      	BRA         L_interrupt3
0x007E	0x2E0C      	DECFSZ      R12, 1, 0
0x0080	0xD7FC      	BRA         L_interrupt3
0x0082	0x2E0B      	DECFSZ      R11, 1, 0
0x0084	0xD7FA      	BRA         L_interrupt3
0x0086	0x0000      	NOP
0x0088	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,119 :: 		if(1 == SWITCH1){
0x008A	0xA08F      	BTFSS       PORTC, 0 
0x008C	0xD009      	BRA         L_interrupt4
;FIRMWARE_SYA_ver_1_3_0.c,120 :: 		sn_PosEdge_1 = 0;
0x008E	0x9C2A      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,121 :: 		sn_NegEdge_1 = 1;
0x0090	0x8A2A      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,122 :: 		interruptC0 = 0;
0x0092	0x6A20      	CLRF        _interruptC0 
0x0094	0x6A21      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,123 :: 		if(!SWITCH3){
0x0096	0xB48F      	BTFSC       PORTC, 2 
0x0098	0xD002      	BRA         L_interrupt5
;FIRMWARE_SYA_ver_1_3_0.c,124 :: 		next_state = s5;
0x009A	0x0E05      	MOVLW       5
0x009C	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,125 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_1_3_0.c,126 :: 		}
0x009E	0xD01A      	BRA         L_interrupt6
L_interrupt4:
;FIRMWARE_SYA_ver_1_3_0.c,128 :: 		sn_GoToGT = 1;
0x00A0	0x0E01      	MOVLW       1
0x00A2	0x6E1C      	MOVWF       _sn_GoToGT 
0x00A4	0x0E00      	MOVLW       0
0x00A6	0x6E1D      	MOVWF       _sn_GoToGT+1 
;FIRMWARE_SYA_ver_1_3_0.c,129 :: 		sn_PosEdge_1 = 1;
0x00A8	0x8C2A      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,130 :: 		sn_NegEdge_1 = 0;
0x00AA	0x9A2A      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,131 :: 		interruptC0 = 0;
0x00AC	0x6A20      	CLRF        _interruptC0 
0x00AE	0x6A21      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,132 :: 		if(!SWITCH2){
0x00B0	0xB28F      	BTFSC       PORTC, 1 
0x00B2	0xD00A      	BRA         L_interrupt7
;FIRMWARE_SYA_ver_1_3_0.c,133 :: 		next_state = s4;
0x00B4	0x0E04      	MOVLW       4
0x00B6	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,134 :: 		if(!SWITCH3){
0x00B8	0xB48F      	BTFSC       PORTC, 2 
0x00BA	0xD003      	BRA         L_interrupt8
;FIRMWARE_SYA_ver_1_3_0.c,135 :: 		next_state = s5;
0x00BC	0x0E05      	MOVLW       5
0x00BE	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,136 :: 		}
0x00C0	0xD002      	BRA         L_interrupt9
L_interrupt8:
;FIRMWARE_SYA_ver_1_3_0.c,138 :: 		next_state = s4;
0x00C2	0x0E04      	MOVLW       4
0x00C4	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,139 :: 		}
L_interrupt9:
;FIRMWARE_SYA_ver_1_3_0.c,140 :: 		}
0x00C6	0xD006      	BRA         L_interrupt10
L_interrupt7:
;FIRMWARE_SYA_ver_1_3_0.c,142 :: 		next_state = s7;
0x00C8	0x0E07      	MOVLW       7
0x00CA	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,143 :: 		if(!SWITCH3){
0x00CC	0xB48F      	BTFSC       PORTC, 2 
0x00CE	0xD002      	BRA         L_interrupt11
;FIRMWARE_SYA_ver_1_3_0.c,144 :: 		next_state = s5;
0x00D0	0x0E05      	MOVLW       5
0x00D2	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,145 :: 		}
L_interrupt11:
;FIRMWARE_SYA_ver_1_3_0.c,146 :: 		}
L_interrupt10:
;FIRMWARE_SYA_ver_1_3_0.c,147 :: 		}
L_interrupt6:
;FIRMWARE_SYA_ver_1_3_0.c,148 :: 		}
L_interrupt2:
0x00D4	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_1_3_0.c,150 :: 		if(1 == IOCCF.B1){
0x00D6	0xA31A      	BTFSS       IOCCF, 1, 1
0x00D8	0xD02D      	BRA         L_interrupt12
;FIRMWARE_SYA_ver_1_3_0.c,151 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x00DA	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_1_3_0.c,152 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x00DC	0x0E01      	MOVLW       1
0x00DE	0x6E24      	MOVWF       _interruptC1 
0x00E0	0x0E00      	MOVLW       0
0x00E2	0x6E25      	MOVWF       _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,153 :: 		Delay_ms(100);
0x00E4	0x0E03      	MOVLW       3
0x00E6	0x6E0B      	MOVWF       R11, 0
0x00E8	0x0E8A      	MOVLW       138
0x00EA	0x6E0C      	MOVWF       R12, 0
0x00EC	0x0E55      	MOVLW       85
0x00EE	0x6E0D      	MOVWF       R13, 0
L_interrupt13:
0x00F0	0x2E0D      	DECFSZ      R13, 1, 0
0x00F2	0xD7FE      	BRA         L_interrupt13
0x00F4	0x2E0C      	DECFSZ      R12, 1, 0
0x00F6	0xD7FC      	BRA         L_interrupt13
0x00F8	0x2E0B      	DECFSZ      R11, 1, 0
0x00FA	0xD7FA      	BRA         L_interrupt13
0x00FC	0x0000      	NOP
0x00FE	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,154 :: 		if(1 == SWITCH2){
0x0100	0xA28F      	BTFSS       PORTC, 1 
0x0102	0xD00B      	BRA         L_interrupt14
;FIRMWARE_SYA_ver_1_3_0.c,155 :: 		sn_PosEdge_2 = 0;
0x0104	0x922A      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,156 :: 		sn_NegEdge_2 = 1;
0x0106	0x802D      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,157 :: 		interruptC1 = 0;
0x0108	0x6A24      	CLRF        _interruptC1 
0x010A	0x6A25      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,158 :: 		if(!SWITCH1){
0x010C	0xB08F      	BTFSC       PORTC, 0 
0x010E	0xD004      	BRA         L_interrupt15
;FIRMWARE_SYA_ver_1_3_0.c,159 :: 		sn_GoToGT = 1;
0x0110	0x0E01      	MOVLW       1
0x0112	0x6E1C      	MOVWF       _sn_GoToGT 
0x0114	0x0E00      	MOVLW       0
0x0116	0x6E1D      	MOVWF       _sn_GoToGT+1 
;FIRMWARE_SYA_ver_1_3_0.c,160 :: 		}
L_interrupt15:
;FIRMWARE_SYA_ver_1_3_0.c,161 :: 		}
0x0118	0xD00D      	BRA         L_interrupt16
L_interrupt14:
;FIRMWARE_SYA_ver_1_3_0.c,163 :: 		sn_PosEdge_2 = 1;
0x011A	0x822A      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,164 :: 		sn_NegEdge_2 = 0;
0x011C	0x902D      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,165 :: 		next_state = s4;
0x011E	0x0E04      	MOVLW       4
0x0120	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,166 :: 		interruptC1 = 0;
0x0122	0x6A24      	CLRF        _interruptC1 
0x0124	0x6A25      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,167 :: 		if(!SWITCH3){
0x0126	0xB48F      	BTFSC       PORTC, 2 
0x0128	0xD003      	BRA         L_interrupt17
;FIRMWARE_SYA_ver_1_3_0.c,168 :: 		next_state = s5;
0x012A	0x0E05      	MOVLW       5
0x012C	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,169 :: 		}
0x012E	0xD002      	BRA         L_interrupt18
L_interrupt17:
;FIRMWARE_SYA_ver_1_3_0.c,171 :: 		next_state = s4;
0x0130	0x0E04      	MOVLW       4
0x0132	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,172 :: 		}
L_interrupt18:
;FIRMWARE_SYA_ver_1_3_0.c,173 :: 		}
L_interrupt16:
;FIRMWARE_SYA_ver_1_3_0.c,174 :: 		}
L_interrupt12:
0x0134	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_1_3_0.c,176 :: 		if(1 == IOCCF.B2){
0x0136	0xA51A      	BTFSS       IOCCF, 2, 1
0x0138	0xD034      	BRA         L_interrupt19
;FIRMWARE_SYA_ver_1_3_0.c,177 :: 		IOCCF.B2 = 0; // Limpiamos la bandera de IOC
0x013A	0x951A      	BCF         IOCCF, 2, 1
;FIRMWARE_SYA_ver_1_3_0.c,178 :: 		interruptC2 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x013C	0x0E01      	MOVLW       1
0x013E	0x6E26      	MOVWF       _interruptC2 
0x0140	0x0E00      	MOVLW       0
0x0142	0x6E27      	MOVWF       _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,179 :: 		Delay_ms(100);
0x0144	0x0E03      	MOVLW       3
0x0146	0x6E0B      	MOVWF       R11, 0
0x0148	0x0E8A      	MOVLW       138
0x014A	0x6E0C      	MOVWF       R12, 0
0x014C	0x0E55      	MOVLW       85
0x014E	0x6E0D      	MOVWF       R13, 0
L_interrupt20:
0x0150	0x2E0D      	DECFSZ      R13, 1, 0
0x0152	0xD7FE      	BRA         L_interrupt20
0x0154	0x2E0C      	DECFSZ      R12, 1, 0
0x0156	0xD7FC      	BRA         L_interrupt20
0x0158	0x2E0B      	DECFSZ      R11, 1, 0
0x015A	0xD7FA      	BRA         L_interrupt20
0x015C	0x0000      	NOP
0x015E	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,180 :: 		if(1 == SWITCH3){
0x0160	0xA48F      	BTFSS       PORTC, 2 
0x0162	0xD015      	BRA         L_interrupt21
;FIRMWARE_SYA_ver_1_3_0.c,181 :: 		sn_PosEdge_3 = 0;
0x0164	0x902A      	BCF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,182 :: 		sn_NegEdge_3 = 1;
0x0166	0x8E2A      	BSF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,183 :: 		interruptC2 = 0;
0x0168	0x6A26      	CLRF        _interruptC2 
0x016A	0x6A27      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,184 :: 		if(!SWITCH1){
0x016C	0xB08F      	BTFSC       PORTC, 0 
0x016E	0xD008      	BRA         L_interrupt22
;FIRMWARE_SYA_ver_1_3_0.c,185 :: 		sn_GoToGT = 1;
0x0170	0x0E01      	MOVLW       1
0x0172	0x6E1C      	MOVWF       _sn_GoToGT 
0x0174	0x0E00      	MOVLW       0
0x0176	0x6E1D      	MOVWF       _sn_GoToGT+1 
;FIRMWARE_SYA_ver_1_3_0.c,186 :: 		sn_error = 1;
0x0178	0x0E01      	MOVLW       1
0x017A	0x6E1E      	MOVWF       _sn_error 
0x017C	0x0E00      	MOVLW       0
0x017E	0x6E1F      	MOVWF       _sn_error+1 
;FIRMWARE_SYA_ver_1_3_0.c,187 :: 		}
L_interrupt22:
;FIRMWARE_SYA_ver_1_3_0.c,188 :: 		if(!SWITCH2){
0x0180	0xB28F      	BTFSC       PORTC, 1 
0x0182	0xD004      	BRA         L_interrupt23
;FIRMWARE_SYA_ver_1_3_0.c,189 :: 		sn_GoTo = 1;
0x0184	0x0E01      	MOVLW       1
0x0186	0x6E1A      	MOVWF       _sn_GoTo 
0x0188	0x0E00      	MOVLW       0
0x018A	0x6E1B      	MOVWF       _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,190 :: 		}
L_interrupt23:
;FIRMWARE_SYA_ver_1_3_0.c,191 :: 		}
0x018C	0xD00A      	BRA         L_interrupt24
L_interrupt21:
;FIRMWARE_SYA_ver_1_3_0.c,193 :: 		sn_PosEdge_3 = 1;
0x018E	0x802A      	BSF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,194 :: 		sn_NegEdge_3 = 0;
0x0190	0x9E2A      	BCF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,195 :: 		next_state = s5;
0x0192	0x0E05      	MOVLW       5
0x0194	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,196 :: 		interruptC2 = 0;
0x0196	0x6A26      	CLRF        _interruptC2 
0x0198	0x6A27      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,197 :: 		if(!SWITCH1){
0x019A	0xB08F      	BTFSC       PORTC, 0 
0x019C	0xD002      	BRA         L_interrupt25
;FIRMWARE_SYA_ver_1_3_0.c,198 :: 		next_state = s5;
0x019E	0x0E05      	MOVLW       5
0x01A0	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,199 :: 		}
L_interrupt25:
;FIRMWARE_SYA_ver_1_3_0.c,200 :: 		}
L_interrupt24:
;FIRMWARE_SYA_ver_1_3_0.c,201 :: 		}
L_interrupt19:
;FIRMWARE_SYA_ver_1_3_0.c,203 :: 		}
L_end_interrupt:
L__interrupt147:
0x01A2	0xF000C019  	MOVFF       25, R0
0x01A6	0xF001C018  	MOVFF       24, R1
0x01AA	0xF00BC017  	MOVFF       23, R11
0x01AE	0xF00CC016  	MOVFF       22, R12
0x01B2	0xF00DC015  	MOVFF       21, R13
0x01B6	0x0011      	RETFIE      1
; end of _interrupt
_InitMCU:
;FIRMWARE_SYA_ver_1_3_0.c,500 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_1_3_0.c,502 :: 		ADCON0 = 0x08; // Desactivamos ADC
0x01B8	0x0E08      	MOVLW       8
0x01BA	0x6E60      	MOVWF       ADCON0 
;FIRMWARE_SYA_ver_1_3_0.c,503 :: 		ANSELC = 0x00;    // Ponemos en modo digital al puerto C
0x01BC	0x010F      	MOVLB       15
0x01BE	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_1_3_0.c,504 :: 		ANSELE = 0x00;    //                ''                 E
0x01C0	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_1_3_0.c,505 :: 		ANSELA = 0x00;    //                ''                 A
0x01C2	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_1_3_0.c,506 :: 		ANSELD = 0x00;
0x01C4	0x6B26      	CLRF        ANSELD, 1
;FIRMWARE_SYA_ver_1_3_0.c,508 :: 		TRISC = 0x0F;  // Ponemos en modo de entrada a C0, C1, c2 Y c3, los demas como salida
0x01C6	0x0E0F      	MOVLW       15
0x01C8	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_1_3_0.c,509 :: 		TRISD = 0x07;  // Ponemos en modo de entrada a D0 y D1
0x01CA	0x0E07      	MOVLW       7
0x01CC	0x6E8B      	MOVWF       TRISD 
;FIRMWARE_SYA_ver_1_3_0.c,510 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x01CE	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_1_3_0.c,511 :: 		TRISA = 0x80;  //                ''                A
0x01D0	0x0E80      	MOVLW       128
0x01D2	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_1_3_0.c,513 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x01D4	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_1_3_0.c,514 :: 		PORTD = 0x00;
0x01D6	0x6A90      	CLRF        PORTD 
;FIRMWARE_SYA_ver_1_3_0.c,515 :: 		PORTE = 0x00;  //                ''             E
0x01D8	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_1_3_0.c,516 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x01DA	0x0E10      	MOVLW       16
0x01DC	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_1_3_0.c,518 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x01DE	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_1_3_0.c,519 :: 		LATD = 0x00;
0x01E0	0x6A86      	CLRF        LATD 
;FIRMWARE_SYA_ver_1_3_0.c,520 :: 		LATE = 0x00;   //                ''                      E
0x01E2	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_1_3_0.c,521 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x01E4	0x0E10      	MOVLW       16
0x01E6	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_1_3_0.c,523 :: 		WPUD = 0x07;   // Activamos el pull-up interno de C0 y C1
0x01E8	0x0E07      	MOVLW       7
0x01EA	0x6F25      	MOVWF       WPUD, 1
;FIRMWARE_SYA_ver_1_3_0.c,524 :: 		INLVLD = 0x07; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x01EC	0x0E07      	MOVLW       7
0x01EE	0x6F22      	MOVWF       INLVLD, 1
;FIRMWARE_SYA_ver_1_3_0.c,525 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x01F0	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,526 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x01F2	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,527 :: 		GT3 = 1;
0x01F4	0x882A      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,528 :: 		GT2 = 0;
0x01F6	0x962A      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,529 :: 		GT1 = 0;
0x01F8	0x942A      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,531 :: 		}
L_end_InitMCU:
0x01FA	0x0012      	RETURN      0
; end of _InitMCU
_InitInterrupt:
;FIRMWARE_SYA_ver_1_3_0.c,470 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_1_3_0.c,472 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x01FC	0x0E30      	MOVLW       48
0x01FE	0x010E      	MOVLB       14
0x0200	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_1_3_0.c,473 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x0202	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_1_3_0.c,475 :: 		T0CON0 = 0x90;
0x0204	0x0E90      	MOVLW       144
0x0206	0x6ED5      	MOVWF       T0CON0 
;FIRMWARE_SYA_ver_1_3_0.c,476 :: 		T0CON1 = 0x40;
0x0208	0x0E40      	MOVLW       64
0x020A	0x6ED6      	MOVWF       T0CON1 
;FIRMWARE_SYA_ver_1_3_0.c,477 :: 		TMR0H = 0x3C;
0x020C	0x0E3C      	MOVLW       60
0x020E	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_1_3_0.c,478 :: 		TMR0L = 0xB0;
0x0210	0x0EB0      	MOVLW       176
0x0212	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_1_3_0.c,480 :: 		IOCCN = 0x07;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x0214	0x0E07      	MOVLW       7
0x0216	0x010F      	MOVLB       15
0x0218	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_1_3_0.c,481 :: 		IOCCP = 0x07;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x021A	0x0E07      	MOVLW       7
0x021C	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_1_3_0.c,482 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x021E	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_1_3_0.c,483 :: 		PIR0.TMR0IF = 0;
0x0220	0x010E      	MOVLB       14
0x0222	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,485 :: 		PIE4 = 0x02;
0x0224	0x0E02      	MOVLW       2
0x0226	0x6FC6      	MOVWF       PIE4, 1
;FIRMWARE_SYA_ver_1_3_0.c,486 :: 		PIR4 = 0x00;
0x0228	0x6BCE      	CLRF        PIR4, 1
;FIRMWARE_SYA_ver_1_3_0.c,488 :: 		T1CON = 0x03;   // ~7, ~6, ![5, 4], ~3, ~2, #1(RD16), #0(ON)
0x022A	0x0E03      	MOVLW       3
0x022C	0x6ECF      	MOVWF       T1CON 
;FIRMWARE_SYA_ver_1_3_0.c,489 :: 		T1GCON = 0x00;  // !7, !6, !5, !4, !3, !2, ~1, ~0
0x022E	0x6AD0      	CLRF        T1GCON 
;FIRMWARE_SYA_ver_1_3_0.c,490 :: 		TMR1CLK = 0x01; // ~7, ~6, ~5, ~4, [!3, !2, !1, #0] = Fosc/4
0x0230	0x0E01      	MOVLW       1
0x0232	0x6ED2      	MOVWF       TMR1CLK 
;FIRMWARE_SYA_ver_1_3_0.c,491 :: 		TMR1 = 0xEC78;   // Timer para
0x0234	0x0E78      	MOVLW       120
0x0236	0x6ECD      	MOVWF       TMR1 
0x0238	0x0EEC      	MOVLW       236
0x023A	0x6ECE      	MOVWF       TMR1+1 
;FIRMWARE_SYA_ver_1_3_0.c,492 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x023C	0x0EC0      	MOVLW       192
0x023E	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_1_3_0.c,494 :: 		}
L_end_InitInterrupt:
0x0240	0x0012      	RETURN      0
; end of _InitInterrupt
_Events:
;FIRMWARE_SYA_ver_1_3_0.c,390 :: 		void Events(){
;FIRMWARE_SYA_ver_1_3_0.c,391 :: 		sn_NegEdge_1 = 0;
0x0242	0x9A2A      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,392 :: 		sn_NegEdge_2 = 0;
0x0244	0x902D      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,393 :: 		sn_NegEdge_3 = 0;
0x0246	0x9E2A      	BCF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,394 :: 		sn_PosEdge_1 = 0;
0x0248	0x9C2A      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,395 :: 		sn_PosEdge_2 = 0;
0x024A	0x922A      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,396 :: 		sn_PosEdge_3 = 0;
0x024C	0x902A      	BCF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,397 :: 		switch(SWITCH1){
0x024E	0xD041      	BRA         L_Events101
;FIRMWARE_SYA_ver_1_3_0.c,398 :: 		case 0:
L_Events103:
;FIRMWARE_SYA_ver_1_3_0.c,399 :: 		next_state = s1;
0x0250	0x0E01      	MOVLW       1
0x0252	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,400 :: 		switch(SWITCH2){
0x0254	0xD01A      	BRA         L_Events104
;FIRMWARE_SYA_ver_1_3_0.c,401 :: 		case 0:
L_Events106:
;FIRMWARE_SYA_ver_1_3_0.c,402 :: 		next_state = s4;
0x0256	0x0E04      	MOVLW       4
0x0258	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,403 :: 		switch(SWITCH3){
0x025A	0xD006      	BRA         L_Events107
;FIRMWARE_SYA_ver_1_3_0.c,404 :: 		case 0:
L_Events109:
;FIRMWARE_SYA_ver_1_3_0.c,405 :: 		next_state = s5;
0x025C	0x0E05      	MOVLW       5
0x025E	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,406 :: 		break;
0x0260	0xD007      	BRA         L_Events108
;FIRMWARE_SYA_ver_1_3_0.c,407 :: 		case 1:
L_Events110:
;FIRMWARE_SYA_ver_1_3_0.c,408 :: 		next_state = s4;
0x0262	0x0E04      	MOVLW       4
0x0264	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,409 :: 		break;
0x0266	0xD004      	BRA         L_Events108
;FIRMWARE_SYA_ver_1_3_0.c,410 :: 		}
L_Events107:
0x0268	0xA48F      	BTFSS       PORTC, 2 
0x026A	0xD7F8      	BRA         L_Events109
0x026C	0xB48F      	BTFSC       PORTC, 2 
0x026E	0xD7F9      	BRA         L_Events110
L_Events108:
;FIRMWARE_SYA_ver_1_3_0.c,411 :: 		break;
0x0270	0xD010      	BRA         L_Events105
;FIRMWARE_SYA_ver_1_3_0.c,412 :: 		case 1:
L_Events111:
;FIRMWARE_SYA_ver_1_3_0.c,413 :: 		switch(SWITCH3){
0x0272	0xD006      	BRA         L_Events112
;FIRMWARE_SYA_ver_1_3_0.c,414 :: 		case 0:
L_Events114:
;FIRMWARE_SYA_ver_1_3_0.c,415 :: 		next_state = s5;
0x0274	0x0E05      	MOVLW       5
0x0276	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,416 :: 		break;
0x0278	0xD007      	BRA         L_Events113
;FIRMWARE_SYA_ver_1_3_0.c,417 :: 		case 1:
L_Events115:
;FIRMWARE_SYA_ver_1_3_0.c,418 :: 		next_state = s1;
0x027A	0x0E01      	MOVLW       1
0x027C	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,419 :: 		break;
0x027E	0xD004      	BRA         L_Events113
;FIRMWARE_SYA_ver_1_3_0.c,420 :: 		}
L_Events112:
0x0280	0xA48F      	BTFSS       PORTC, 2 
0x0282	0xD7F8      	BRA         L_Events114
0x0284	0xB48F      	BTFSC       PORTC, 2 
0x0286	0xD7F9      	BRA         L_Events115
L_Events113:
;FIRMWARE_SYA_ver_1_3_0.c,421 :: 		break;
0x0288	0xD004      	BRA         L_Events105
;FIRMWARE_SYA_ver_1_3_0.c,422 :: 		}
L_Events104:
0x028A	0xA28F      	BTFSS       PORTC, 1 
0x028C	0xD7E4      	BRA         L_Events106
0x028E	0xB28F      	BTFSC       PORTC, 1 
0x0290	0xD7F0      	BRA         L_Events111
L_Events105:
;FIRMWARE_SYA_ver_1_3_0.c,423 :: 		break;
0x0292	0xD023      	BRA         L_Events102
;FIRMWARE_SYA_ver_1_3_0.c,424 :: 		case 1:
L_Events116:
;FIRMWARE_SYA_ver_1_3_0.c,425 :: 		switch(SWITCH2){
0x0294	0xD019      	BRA         L_Events117
;FIRMWARE_SYA_ver_1_3_0.c,426 :: 		case 0:
L_Events119:
;FIRMWARE_SYA_ver_1_3_0.c,427 :: 		next_state = s4;
0x0296	0x0E04      	MOVLW       4
0x0298	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,428 :: 		switch(SWITCH3){
0x029A	0xD006      	BRA         L_Events120
;FIRMWARE_SYA_ver_1_3_0.c,429 :: 		case 0:
L_Events122:
;FIRMWARE_SYA_ver_1_3_0.c,430 :: 		next_state = s5;
0x029C	0x0E05      	MOVLW       5
0x029E	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,431 :: 		break;
0x02A0	0xD007      	BRA         L_Events121
;FIRMWARE_SYA_ver_1_3_0.c,432 :: 		case 1:
L_Events123:
;FIRMWARE_SYA_ver_1_3_0.c,433 :: 		next_state = s4;
0x02A2	0x0E04      	MOVLW       4
0x02A4	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,434 :: 		break;
0x02A6	0xD004      	BRA         L_Events121
;FIRMWARE_SYA_ver_1_3_0.c,435 :: 		}
L_Events120:
0x02A8	0xA48F      	BTFSS       PORTC, 2 
0x02AA	0xD7F8      	BRA         L_Events122
0x02AC	0xB48F      	BTFSC       PORTC, 2 
0x02AE	0xD7F9      	BRA         L_Events123
L_Events121:
;FIRMWARE_SYA_ver_1_3_0.c,436 :: 		break;
0x02B0	0xD00F      	BRA         L_Events118
;FIRMWARE_SYA_ver_1_3_0.c,437 :: 		case 1:
L_Events124:
;FIRMWARE_SYA_ver_1_3_0.c,438 :: 		switch(SWITCH3){
0x02B2	0xD005      	BRA         L_Events125
;FIRMWARE_SYA_ver_1_3_0.c,439 :: 		case 0:
L_Events127:
;FIRMWARE_SYA_ver_1_3_0.c,440 :: 		next_state = s5;
0x02B4	0x0E05      	MOVLW       5
0x02B6	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,441 :: 		break;
0x02B8	0xD006      	BRA         L_Events126
;FIRMWARE_SYA_ver_1_3_0.c,442 :: 		case 1:
L_Events128:
;FIRMWARE_SYA_ver_1_3_0.c,443 :: 		next_state = s0;
0x02BA	0x6A29      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,444 :: 		break;
0x02BC	0xD004      	BRA         L_Events126
;FIRMWARE_SYA_ver_1_3_0.c,445 :: 		}
L_Events125:
0x02BE	0xA48F      	BTFSS       PORTC, 2 
0x02C0	0xD7F9      	BRA         L_Events127
0x02C2	0xB48F      	BTFSC       PORTC, 2 
0x02C4	0xD7FA      	BRA         L_Events128
L_Events126:
;FIRMWARE_SYA_ver_1_3_0.c,446 :: 		break;
0x02C6	0xD004      	BRA         L_Events118
;FIRMWARE_SYA_ver_1_3_0.c,447 :: 		}
L_Events117:
0x02C8	0xA28F      	BTFSS       PORTC, 1 
0x02CA	0xD7E5      	BRA         L_Events119
0x02CC	0xB28F      	BTFSC       PORTC, 1 
0x02CE	0xD7F1      	BRA         L_Events124
L_Events118:
;FIRMWARE_SYA_ver_1_3_0.c,448 :: 		break;
0x02D0	0xD004      	BRA         L_Events102
;FIRMWARE_SYA_ver_1_3_0.c,449 :: 		}
L_Events101:
0x02D2	0xA08F      	BTFSS       PORTC, 0 
0x02D4	0xD7BD      	BRA         L_Events103
0x02D6	0xB08F      	BTFSC       PORTC, 0 
0x02D8	0xD7DD      	BRA         L_Events116
L_Events102:
;FIRMWARE_SYA_ver_1_3_0.c,450 :: 		return;
;FIRMWARE_SYA_ver_1_3_0.c,452 :: 		}
L_end_Events:
0x02DA	0x0012      	RETURN      0
; end of _Events
_FSM:
;FIRMWARE_SYA_ver_1_3_0.c,224 :: 		void FSM(){
;FIRMWARE_SYA_ver_1_3_0.c,225 :: 		switch(current_state){
0x02DC	0xD0CE      	BRA         L_FSM28
;FIRMWARE_SYA_ver_1_3_0.c,226 :: 		case s0:
L_FSM30:
;FIRMWARE_SYA_ver_1_3_0.c,227 :: 		M1 = 0;
0x02DE	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,228 :: 		M2 = 0;
0x02E0	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,229 :: 		M3 = 0;
0x02E2	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,231 :: 		if(1 == sn_PosEdge_1){
0x02E4	0xAC2A      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x02E6	0xD003      	BRA         L_FSM31
;FIRMWARE_SYA_ver_1_3_0.c,232 :: 		next_state = s7;
0x02E8	0x0E07      	MOVLW       7
0x02EA	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,233 :: 		}
0x02EC	0xD000      	BRA         L_FSM32
L_FSM31:
;FIRMWARE_SYA_ver_1_3_0.c,235 :: 		}
L_FSM32:
;FIRMWARE_SYA_ver_1_3_0.c,236 :: 		break;
0x02EE	0xD0E3      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,237 :: 		case s1:
L_FSM33:
;FIRMWARE_SYA_ver_1_3_0.c,238 :: 		M1 = 1;
0x02F0	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,239 :: 		M2 = 0;
0x02F2	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,240 :: 		M3 = 0;
0x02F4	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,241 :: 		GT1 = 1;
0x02F6	0x842A      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,242 :: 		GT2 = 0;
0x02F8	0x962A      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,243 :: 		GT3 = 0;
0x02FA	0x982A      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,244 :: 		if(1 == sn_NegEdge_1){
0x02FC	0xAA2A      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x02FE	0xD002      	BRA         L_FSM34
;FIRMWARE_SYA_ver_1_3_0.c,246 :: 		next_state = s0;
0x0300	0x6A29      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,247 :: 		}
0x0302	0xD005      	BRA         L_FSM35
L_FSM34:
;FIRMWARE_SYA_ver_1_3_0.c,248 :: 		else if(1 == sn_PosEdge_2){
0x0304	0xA22A      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0306	0xD003      	BRA         L_FSM36
;FIRMWARE_SYA_ver_1_3_0.c,249 :: 		next_state = s4;
0x0308	0x0E04      	MOVLW       4
0x030A	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,250 :: 		}
0x030C	0xD000      	BRA         L_FSM37
L_FSM36:
;FIRMWARE_SYA_ver_1_3_0.c,252 :: 		}
L_FSM37:
L_FSM35:
;FIRMWARE_SYA_ver_1_3_0.c,253 :: 		break;
0x030E	0xD0D3      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,254 :: 		case s2:
L_FSM38:
;FIRMWARE_SYA_ver_1_3_0.c,255 :: 		M1 = 0;
0x0310	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,256 :: 		M2 = 1;
0x0312	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,257 :: 		M3 = 0;
0x0314	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,258 :: 		GT1 = 0;
0x0316	0x942A      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,259 :: 		GT2 = 1;
0x0318	0x862A      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,260 :: 		GT3 = 0;
0x031A	0x982A      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,261 :: 		if(1 == sn_NegEdge_1){
0x031C	0xAA2A      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x031E	0xD002      	BRA         L_FSM39
;FIRMWARE_SYA_ver_1_3_0.c,262 :: 		next_state = s0;
0x0320	0x6A29      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,263 :: 		}
0x0322	0xD005      	BRA         L_FSM40
L_FSM39:
;FIRMWARE_SYA_ver_1_3_0.c,264 :: 		else if(1 == sn_PosEdge_2){
0x0324	0xA22A      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0326	0xD003      	BRA         L_FSM41
;FIRMWARE_SYA_ver_1_3_0.c,265 :: 		next_state = s4;
0x0328	0x0E04      	MOVLW       4
0x032A	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,266 :: 		}
0x032C	0xD000      	BRA         L_FSM42
L_FSM41:
;FIRMWARE_SYA_ver_1_3_0.c,268 :: 		}
L_FSM42:
L_FSM40:
;FIRMWARE_SYA_ver_1_3_0.c,269 :: 		break;
0x032E	0xD0C3      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,270 :: 		case s3:
L_FSM43:
;FIRMWARE_SYA_ver_1_3_0.c,271 :: 		M1 = 0;
0x0330	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,272 :: 		M2 = 0;
0x0332	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,273 :: 		M3 = 1;
0x0334	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,274 :: 		GT1 = 0;
0x0336	0x942A      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,275 :: 		GT2 = 0;
0x0338	0x962A      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,276 :: 		GT3 = 1;
0x033A	0x882A      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,277 :: 		if(1 == sn_NegEdge_1){
0x033C	0xAA2A      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x033E	0xD002      	BRA         L_FSM44
;FIRMWARE_SYA_ver_1_3_0.c,278 :: 		next_state = s0;
0x0340	0x6A29      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,279 :: 		}
0x0342	0xD005      	BRA         L_FSM45
L_FSM44:
;FIRMWARE_SYA_ver_1_3_0.c,280 :: 		else if(1 == sn_PosEdge_2){
0x0344	0xA22A      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0346	0xD003      	BRA         L_FSM46
;FIRMWARE_SYA_ver_1_3_0.c,281 :: 		next_state = s4;
0x0348	0x0E04      	MOVLW       4
0x034A	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,282 :: 		}
0x034C	0xD000      	BRA         L_FSM47
L_FSM46:
;FIRMWARE_SYA_ver_1_3_0.c,284 :: 		}
L_FSM47:
L_FSM45:
;FIRMWARE_SYA_ver_1_3_0.c,285 :: 		break;
0x034E	0xD0B3      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,286 :: 		case s4:
L_FSM48:
;FIRMWARE_SYA_ver_1_3_0.c,287 :: 		sn_GoTo = 1;
0x0350	0x0E01      	MOVLW       1
0x0352	0x6E1A      	MOVWF       _sn_GoTo 
0x0354	0x0E00      	MOVLW       0
0x0356	0x6E1B      	MOVWF       _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,288 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x0358	0xA42A      	BTFSS       _GT1, BitPos(_GT1+0) 
0x035A	0xD00A      	BRA         L_FSM51
0x035C	0xB62A      	BTFSC       _GT2, BitPos(_GT2+0) 
0x035E	0xD008      	BRA         L_FSM51
0x0360	0xB82A      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0362	0xD006      	BRA         L_FSM51
L__FSM139:
;FIRMWARE_SYA_ver_1_3_0.c,289 :: 		M1 = 1;
0x0364	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,290 :: 		M2 = 1;
0x0366	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,291 :: 		M3 = 0;
0x0368	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,292 :: 		GT2 = 0;
0x036A	0x962A      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,293 :: 		GT3 = 0;
0x036C	0x982A      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,294 :: 		}
0x036E	0xD017      	BRA         L_FSM52
L_FSM51:
;FIRMWARE_SYA_ver_1_3_0.c,295 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x0370	0xA62A      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0372	0xD00A      	BRA         L_FSM55
0x0374	0xB42A      	BTFSC       _GT1, BitPos(_GT1+0) 
0x0376	0xD008      	BRA         L_FSM55
0x0378	0xB82A      	BTFSC       _GT3, BitPos(_GT3+0) 
0x037A	0xD006      	BRA         L_FSM55
L__FSM138:
;FIRMWARE_SYA_ver_1_3_0.c,296 :: 		M1 = 0;
0x037C	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,297 :: 		M2 = 1;
0x037E	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,298 :: 		M3 = 1;
0x0380	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,299 :: 		GT1 = 0;
0x0382	0x942A      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,300 :: 		GT3 = 0;
0x0384	0x982A      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,301 :: 		}
0x0386	0xD00B      	BRA         L_FSM56
L_FSM55:
;FIRMWARE_SYA_ver_1_3_0.c,302 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x0388	0xA82A      	BTFSS       _GT3, BitPos(_GT3+0) 
0x038A	0xD009      	BRA         L_FSM59
0x038C	0xB42A      	BTFSC       _GT1, BitPos(_GT1+0) 
0x038E	0xD007      	BRA         L_FSM59
0x0390	0xB62A      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0392	0xD005      	BRA         L_FSM59
L__FSM137:
;FIRMWARE_SYA_ver_1_3_0.c,303 :: 		M1 = 1;
0x0394	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,304 :: 		M2 = 0;
0x0396	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,305 :: 		M3 = 1;
0x0398	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,306 :: 		GT1 = 0;
0x039A	0x942A      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,307 :: 		GT2 = 0;
0x039C	0x962A      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,308 :: 		}
L_FSM59:
L_FSM56:
L_FSM52:
;FIRMWARE_SYA_ver_1_3_0.c,309 :: 		if(1 == sn_NegEdge_2){
0x039E	0xA02D      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x03A0	0xD003      	BRA         L_FSM60
;FIRMWARE_SYA_ver_1_3_0.c,310 :: 		next_state = s7;
0x03A2	0x0E07      	MOVLW       7
0x03A4	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,311 :: 		}
0x03A6	0xD005      	BRA         L_FSM61
L_FSM60:
;FIRMWARE_SYA_ver_1_3_0.c,312 :: 		else if(1 == sn_PosEdge_3){
0x03A8	0xA02A      	BTFSS       _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
0x03AA	0xD003      	BRA         L_FSM62
;FIRMWARE_SYA_ver_1_3_0.c,313 :: 		next_state = s5;
0x03AC	0x0E05      	MOVLW       5
0x03AE	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,314 :: 		}
0x03B0	0xD000      	BRA         L_FSM63
L_FSM62:
;FIRMWARE_SYA_ver_1_3_0.c,316 :: 		}
L_FSM63:
L_FSM61:
;FIRMWARE_SYA_ver_1_3_0.c,317 :: 		break;
0x03B2	0xD081      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,318 :: 		case s5:
L_FSM64:
;FIRMWARE_SYA_ver_1_3_0.c,319 :: 		M1 = 1;
0x03B4	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,320 :: 		M2 = 1;
0x03B6	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,321 :: 		M3 = 1;
0x03B8	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,322 :: 		if(1 == sn_NegEdge_3){
0x03BA	0xAE2A      	BTFSS       _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
0x03BC	0xD003      	BRA         L_FSM65
;FIRMWARE_SYA_ver_1_3_0.c,323 :: 		next_state = s6;
0x03BE	0x0E06      	MOVLW       6
0x03C0	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,324 :: 		}
0x03C2	0xD000      	BRA         L_FSM66
L_FSM65:
;FIRMWARE_SYA_ver_1_3_0.c,326 :: 		}
L_FSM66:
;FIRMWARE_SYA_ver_1_3_0.c,327 :: 		break;
0x03C4	0xD078      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,328 :: 		case s6:
L_FSM67:
;FIRMWARE_SYA_ver_1_3_0.c,329 :: 		if(sn_GoTo){
0x03C6	0x501A      	MOVF        _sn_GoTo, 0 
0x03C8	0x101B      	IORWF       _sn_GoTo+1, 0 
0x03CA	0xE025      	BZ          L_FSM68
;FIRMWARE_SYA_ver_1_3_0.c,330 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x03CC	0xA42A      	BTFSS       _GT1, BitPos(_GT1+0) 
0x03CE	0xD00A      	BRA         L_FSM71
0x03D0	0xB62A      	BTFSC       _GT2, BitPos(_GT2+0) 
0x03D2	0xD008      	BRA         L_FSM71
0x03D4	0xB82A      	BTFSC       _GT3, BitPos(_GT3+0) 
0x03D6	0xD006      	BRA         L_FSM71
L__FSM136:
;FIRMWARE_SYA_ver_1_3_0.c,331 :: 		GT2 = 1;
0x03D8	0x862A      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,332 :: 		GT3 = 0;
0x03DA	0x982A      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,333 :: 		GT1 = 0;
0x03DC	0x942A      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,334 :: 		next_state = s4;
0x03DE	0x0E04      	MOVLW       4
0x03E0	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,335 :: 		}
0x03E2	0xD018      	BRA         L_FSM72
L_FSM71:
;FIRMWARE_SYA_ver_1_3_0.c,336 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x03E4	0xA62A      	BTFSS       _GT2, BitPos(_GT2+0) 
0x03E6	0xD00A      	BRA         L_FSM75
0x03E8	0xB42A      	BTFSC       _GT1, BitPos(_GT1+0) 
0x03EA	0xD008      	BRA         L_FSM75
0x03EC	0xB82A      	BTFSC       _GT3, BitPos(_GT3+0) 
0x03EE	0xD006      	BRA         L_FSM75
L__FSM135:
;FIRMWARE_SYA_ver_1_3_0.c,337 :: 		GT2 = 0;
0x03F0	0x962A      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,338 :: 		GT1 = 0;
0x03F2	0x942A      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,339 :: 		GT3 = 1;
0x03F4	0x882A      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,340 :: 		next_state = s4;
0x03F6	0x0E04      	MOVLW       4
0x03F8	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,341 :: 		}
0x03FA	0xD00C      	BRA         L_FSM76
L_FSM75:
;FIRMWARE_SYA_ver_1_3_0.c,342 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x03FC	0xA82A      	BTFSS       _GT3, BitPos(_GT3+0) 
0x03FE	0xD00A      	BRA         L_FSM79
0x0400	0xB42A      	BTFSC       _GT1, BitPos(_GT1+0) 
0x0402	0xD008      	BRA         L_FSM79
0x0404	0xB62A      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0406	0xD006      	BRA         L_FSM79
L__FSM134:
;FIRMWARE_SYA_ver_1_3_0.c,343 :: 		GT1 = 1;
0x0408	0x842A      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,344 :: 		GT2 = 0;
0x040A	0x962A      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,345 :: 		GT3 = 0;
0x040C	0x982A      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,346 :: 		next_state = s4;
0x040E	0x0E04      	MOVLW       4
0x0410	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,347 :: 		}
0x0412	0xD000      	BRA         L_FSM80
L_FSM79:
;FIRMWARE_SYA_ver_1_3_0.c,349 :: 		}
L_FSM80:
L_FSM76:
L_FSM72:
;FIRMWARE_SYA_ver_1_3_0.c,350 :: 		}
0x0414	0xD007      	BRA         L_FSM81
L_FSM68:
;FIRMWARE_SYA_ver_1_3_0.c,351 :: 		else if(sn_error){
0x0416	0x501E      	MOVF        _sn_error, 0 
0x0418	0x101F      	IORWF       _sn_error+1, 0 
0x041A	0xE003      	BZ          L_FSM82
;FIRMWARE_SYA_ver_1_3_0.c,352 :: 		next_state = s7;
0x041C	0x0E07      	MOVLW       7
0x041E	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,353 :: 		}
0x0420	0xD001      	BRA         L_FSM83
L_FSM82:
;FIRMWARE_SYA_ver_1_3_0.c,355 :: 		next_state = s0;
0x0422	0x6A29      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,356 :: 		}
L_FSM83:
L_FSM81:
;FIRMWARE_SYA_ver_1_3_0.c,357 :: 		break;
0x0424	0xD048      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,358 :: 		case s7:
L_FSM84:
;FIRMWARE_SYA_ver_1_3_0.c,359 :: 		clock0 = 0;
0x0426	0x6A2B      	CLRF        _clock0 
0x0428	0x6A2C      	CLRF        _clock0+1 
;FIRMWARE_SYA_ver_1_3_0.c,360 :: 		if(!SWITCH3){
0x042A	0xB48F      	BTFSC       PORTC, 2 
0x042C	0xD003      	BRA         L_FSM85
;FIRMWARE_SYA_ver_1_3_0.c,361 :: 		next_state = s5;
0x042E	0x0E05      	MOVLW       5
0x0430	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,362 :: 		}
0x0432	0xD01F      	BRA         L_FSM86
L_FSM85:
;FIRMWARE_SYA_ver_1_3_0.c,363 :: 		else if(sn_GoToGT){
0x0434	0x501C      	MOVF        _sn_GoToGT, 0 
0x0436	0x101D      	IORWF       _sn_GoToGT+1, 0 
0x0438	0xE01B      	BZ          L_FSM87
;FIRMWARE_SYA_ver_1_3_0.c,364 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x043A	0xA42A      	BTFSS       _GT1, BitPos(_GT1+0) 
0x043C	0xD007      	BRA         L_FSM90
0x043E	0xB62A      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0440	0xD005      	BRA         L_FSM90
0x0442	0xB82A      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0444	0xD003      	BRA         L_FSM90
L__FSM133:
;FIRMWARE_SYA_ver_1_3_0.c,365 :: 		next_state = s2;
0x0446	0x0E02      	MOVLW       2
0x0448	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,366 :: 		}
0x044A	0xD011      	BRA         L_FSM91
L_FSM90:
;FIRMWARE_SYA_ver_1_3_0.c,367 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x044C	0xA62A      	BTFSS       _GT2, BitPos(_GT2+0) 
0x044E	0xD007      	BRA         L_FSM94
0x0450	0xB42A      	BTFSC       _GT1, BitPos(_GT1+0) 
0x0452	0xD005      	BRA         L_FSM94
0x0454	0xB82A      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0456	0xD003      	BRA         L_FSM94
L__FSM132:
;FIRMWARE_SYA_ver_1_3_0.c,368 :: 		next_state = s3;
0x0458	0x0E03      	MOVLW       3
0x045A	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,369 :: 		}
0x045C	0xD008      	BRA         L_FSM95
L_FSM94:
;FIRMWARE_SYA_ver_1_3_0.c,370 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x045E	0xA82A      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0460	0xD006      	BRA         L_FSM98
0x0462	0xB42A      	BTFSC       _GT1, BitPos(_GT1+0) 
0x0464	0xD004      	BRA         L_FSM98
0x0466	0xB62A      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0468	0xD002      	BRA         L_FSM98
L__FSM131:
;FIRMWARE_SYA_ver_1_3_0.c,371 :: 		next_state = s1;
0x046A	0x0E01      	MOVLW       1
0x046C	0x6E29      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,372 :: 		}
L_FSM98:
L_FSM95:
L_FSM91:
;FIRMWARE_SYA_ver_1_3_0.c,373 :: 		}
0x046E	0xD001      	BRA         L_FSM99
L_FSM87:
;FIRMWARE_SYA_ver_1_3_0.c,375 :: 		next_state = s0;
0x0470	0x6A29      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,376 :: 		}
L_FSM99:
L_FSM86:
;FIRMWARE_SYA_ver_1_3_0.c,377 :: 		break;
0x0472	0xD021      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,378 :: 		default:
L_FSM100:
;FIRMWARE_SYA_ver_1_3_0.c,379 :: 		current_state = s0;
0x0474	0x6A28      	CLRF        _current_state 
;FIRMWARE_SYA_ver_1_3_0.c,380 :: 		next_state = s0;
0x0476	0x6A29      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,381 :: 		break;
0x0478	0xD01E      	BRA         L_FSM29
;FIRMWARE_SYA_ver_1_3_0.c,382 :: 		}
L_FSM28:
0x047A	0x5028      	MOVF        _current_state, 0 
0x047C	0x0A00      	XORLW       0
0x047E	0xB4D8      	BTFSC       STATUS, 2 
0x0480	0xD72E      	BRA         L_FSM30
0x0482	0x5028      	MOVF        _current_state, 0 
0x0484	0x0A01      	XORLW       1
0x0486	0xB4D8      	BTFSC       STATUS, 2 
0x0488	0xD733      	BRA         L_FSM33
0x048A	0x5028      	MOVF        _current_state, 0 
0x048C	0x0A02      	XORLW       2
0x048E	0xB4D8      	BTFSC       STATUS, 2 
0x0490	0xD73F      	BRA         L_FSM38
0x0492	0x5028      	MOVF        _current_state, 0 
0x0494	0x0A03      	XORLW       3
0x0496	0xB4D8      	BTFSC       STATUS, 2 
0x0498	0xD74B      	BRA         L_FSM43
0x049A	0x5028      	MOVF        _current_state, 0 
0x049C	0x0A04      	XORLW       4
0x049E	0xB4D8      	BTFSC       STATUS, 2 
0x04A0	0xD757      	BRA         L_FSM48
0x04A2	0x5028      	MOVF        _current_state, 0 
0x04A4	0x0A05      	XORLW       5
0x04A6	0xE086      	BZ          L_FSM64
0x04A8	0x5028      	MOVF        _current_state, 0 
0x04AA	0x0A06      	XORLW       6
0x04AC	0xE08C      	BZ          L_FSM67
0x04AE	0x5028      	MOVF        _current_state, 0 
0x04B0	0x0A07      	XORLW       7
0x04B2	0xE0B9      	BZ          L_FSM84
0x04B4	0xD7DF      	BRA         L_FSM100
L_FSM29:
;FIRMWARE_SYA_ver_1_3_0.c,384 :: 		}
L_end_FSM:
0x04B6	0x0012      	RETURN      0
; end of _FSM
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x04B8	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x04BA	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x04BC	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x04C0	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x04C2	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x04C4	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x04C6	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x04C8	0x0012      	RETURN      0
; end of ___CC2DW
_InitSystems:
;FIRMWARE_SYA_ver_1_3_0.c,458 :: 		void InitSystems(){
;FIRMWARE_SYA_ver_1_3_0.c,459 :: 		Delay_ms(1000);
0x04CA	0x0E1A      	MOVLW       26
0x04CC	0x6E0B      	MOVWF       R11, 0
0x04CE	0x0E5E      	MOVLW       94
0x04D0	0x6E0C      	MOVWF       R12, 0
0x04D2	0x0E6E      	MOVLW       110
0x04D4	0x6E0D      	MOVWF       R13, 0
L_InitSystems129:
0x04D6	0x2E0D      	DECFSZ      R13, 1, 0
0x04D8	0xD7FE      	BRA         L_InitSystems129
0x04DA	0x2E0C      	DECFSZ      R12, 1, 0
0x04DC	0xD7FC      	BRA         L_InitSystems129
0x04DE	0x2E0B      	DECFSZ      R11, 1, 0
0x04E0	0xD7FA      	BRA         L_InitSystems129
0x04E2	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,460 :: 		InitInterrupt();
0x04E4	0xDE8B      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_1_3_0.c,461 :: 		InitMCU();
0x04E6	0xDE68      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_1_3_0.c,462 :: 		Delay_ms(1000);
0x04E8	0x0E1A      	MOVLW       26
0x04EA	0x6E0B      	MOVWF       R11, 0
0x04EC	0x0E5E      	MOVLW       94
0x04EE	0x6E0C      	MOVWF       R12, 0
0x04F0	0x0E6E      	MOVLW       110
0x04F2	0x6E0D      	MOVWF       R13, 0
L_InitSystems130:
0x04F4	0x2E0D      	DECFSZ      R13, 1, 0
0x04F6	0xD7FE      	BRA         L_InitSystems130
0x04F8	0x2E0C      	DECFSZ      R12, 1, 0
0x04FA	0xD7FC      	BRA         L_InitSystems130
0x04FC	0x2E0B      	DECFSZ      R11, 1, 0
0x04FE	0xD7FA      	BRA         L_InitSystems130
0x0500	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,463 :: 		Events();
0x0502	0xDE9F      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,464 :: 		}
L_end_InitSystems:
0x0504	0x0012      	RETURN      0
; end of _InitSystems
_main:
0x0506	0x6A1A      	CLRF        _sn_GoTo 
0x0508	0x6A1B      	CLRF        27 
0x050A	0x6A1C      	CLRF        _sn_GoToGT 
0x050C	0x6A1D      	CLRF        29 
0x050E	0x6A1E      	CLRF        _sn_error 
0x0510	0x6A1F      	CLRF        31 
0x0512	0x6A20      	CLRF        _interruptC0 
0x0514	0x6A21      	CLRF        33 
0x0516	0x6A22      	CLRF        _counter 
0x0518	0x6A23      	CLRF        35 
0x051A	0x6A24      	CLRF        _interruptC1 
0x051C	0x6A25      	CLRF        37 
0x051E	0x6A26      	CLRF        _interruptC2 
0x0520	0x6A27      	CLRF        39 
;FIRMWARE_SYA_ver_1_3_0.c,209 :: 		void main(){
;FIRMWARE_SYA_ver_1_3_0.c,211 :: 		InitSystems();
0x0522	0xDFD3      	RCALL       _InitSystems
;FIRMWARE_SYA_ver_1_3_0.c,213 :: 		while(1){
L_main26:
;FIRMWARE_SYA_ver_1_3_0.c,214 :: 		current_state = next_state; // Maybe move this with Events
0x0524	0xF028C029  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_1_3_0.c,215 :: 		FSM();
0x0528	0xDED9      	RCALL       _FSM
;FIRMWARE_SYA_ver_1_3_0.c,216 :: 		}
0x052A	0xD7FC      	BRA         L_main26
;FIRMWARE_SYA_ver_1_3_0.c,218 :: 		}
L_end_main:
0x052C	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [432]    _interrupt
0x01B8      [68]    _InitMCU
0x01FC      [70]    _InitInterrupt
0x0242     [154]    _Events
0x02DC     [476]    _FSM
0x04B8      [18]    ___CC2DW
0x04CA      [60]    _InitSystems
0x0506      [40]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001A       [2]    _sn_GoTo
0x001C       [2]    _sn_GoToGT
0x001E       [2]    _sn_error
0x0020       [2]    _interruptC0
0x0022       [2]    _counter
0x0024       [2]    _interruptC1
0x0026       [2]    _interruptC2
0x0028       [1]    _current_state
0x0029       [1]    _next_state
0x002A       [0]    _sn_PosEdge_3
0x002A       [0]    _sn_PosEdge_2
0x002A       [0]    _sn_PosEdge_1
0x002A       [0]    _sn_NegEdge_1
0x002A       [0]    _GT2
0x002A       [0]    _GT3
0x002A       [0]    _sn_NegEdge_3
0x002A       [0]    _GT1
0x002B       [2]    _clock0
0x002D       [0]    _sn_NegEdge_2
0x0EC2       [1]    PIE0
0x0EC6       [1]    PIE4
0x0ECA       [1]    PIR0
0x0ECE       [1]    PIR4
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F21       [1]    ANSELC
0x0F22       [1]    INLVLD
0x0F25       [1]    WPUD
0x0F26       [1]    ANSELD
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F60       [1]    ADCON0
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F86       [1]    LATD
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8B       [1]    TRISD
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F90       [1]    PORTD
0x0F91       [1]    PORTE
0x0FCD       [2]    TMR1
0x0FCF       [1]    T1CON
0x0FD0       [1]    T1GCON
0x0FD2       [1]    TMR1CLK
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
