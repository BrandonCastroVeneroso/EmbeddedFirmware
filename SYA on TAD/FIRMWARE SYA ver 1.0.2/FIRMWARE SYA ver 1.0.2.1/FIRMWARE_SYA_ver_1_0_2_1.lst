;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/17/2024 8:14:23 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF23  	GOTO        582
_interrupt:
;FIRMWARE_SYA_ver_1_0_2_1.c,72 :: 		void interrupt(){
;FIRMWARE_SYA_ver_1_0_2_1.c,86 :: 		if((1 == IOCCF.B0) && (1 == IOCIE_bit)){
0x0008	0x010F      	MOVLB       15
0x000A	0xA11A      	BTFSS       IOCCF, 0, 1
0x000C	0xD006      	BRA         L_interrupt2
0x000E	0x010E      	MOVLB       14
0x0010	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0012	0xD003      	BRA         L_interrupt2
L__interrupt93:
;FIRMWARE_SYA_ver_1_0_2_1.c,87 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0014	0x010F      	MOVLB       15
0x0016	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,88 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0018	0x8815      	BSF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,89 :: 		}
L_interrupt2:
0x001A	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_1_0_2_1.c,91 :: 		if((1 == IOCCF.B1) && (1 == IOCIE_bit)){
0x001C	0xA31A      	BTFSS       IOCCF, 1, 1
0x001E	0xD006      	BRA         L_interrupt5
0x0020	0x010E      	MOVLB       14
0x0022	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0024	0xD003      	BRA         L_interrupt5
L__interrupt92:
;FIRMWARE_SYA_ver_1_0_2_1.c,92 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0026	0x010F      	MOVLB       15
0x0028	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,93 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x002A	0x8E15      	BSF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,94 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_1_0_2_1.c,96 :: 		}
L_end_interrupt:
L__interrupt111:
0x002C	0x0011      	RETFIE      1
; end of _interrupt
_InitMCU:
;FIRMWARE_SYA_ver_1_0_2_1.c,351 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_1_0_2_1.c,353 :: 		ADCON1 = 0x0F; // Desactivamos ADC
0x002E	0x0E0F      	MOVLW       15
0x0030	0x010F      	MOVLB       15
0x0032	0x6F59      	MOVWF       ADCON1, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,354 :: 		ANSELC = 0;    // Ponemos en modo digital al puerto C
0x0034	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,355 :: 		ANSELE = 0;    //                ''                 E
0x0036	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,356 :: 		ANSELA = 0;    //                ''                 A
0x0038	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,358 :: 		TRISC = 0x03;  // Ponemos en modo de entrada a C0 y C1, los demas como salida
0x003A	0x0E03      	MOVLW       3
0x003C	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_1_0_2_1.c,359 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x003E	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_1_0_2_1.c,360 :: 		TRISA = 0x80;  //                ''                A
0x0040	0x0E80      	MOVLW       128
0x0042	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_1_0_2_1.c,362 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x0044	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_1_0_2_1.c,363 :: 		PORTE = 0x00;  //                ''             E
0x0046	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_1_0_2_1.c,364 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x0048	0x0E10      	MOVLW       16
0x004A	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_1_0_2_1.c,366 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x004C	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_1_0_2_1.c,367 :: 		LATE = 0x00;   //                ''                      E
0x004E	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_1_0_2_1.c,368 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x0050	0x0E10      	MOVLW       16
0x0052	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_1_0_2_1.c,370 :: 		WPUC = 0x03;   // Activamos el pull-up interno de C0 y C1
0x0054	0x0E03      	MOVLW       3
0x0056	0x6F20      	MOVWF       WPUC, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,371 :: 		INLVLC = 0x03; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x0058	0x0E03      	MOVLW       3
0x005A	0x6F1D      	MOVWF       INLVLC, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,372 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x005C	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,373 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x005E	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,375 :: 		}
L_end_InitMCU:
0x0060	0x0012      	RETURN      0
; end of _InitMCU
_Events:
;FIRMWARE_SYA_ver_1_0_2_1.c,286 :: 		void Events(){
;FIRMWARE_SYA_ver_1_0_2_1.c,288 :: 		if(1 == interruptC0){
0x0062	0xA815      	BTFSS       _interruptC0, BitPos(_interruptC0+0) 
0x0064	0xD009      	BRA         L_Events84
;FIRMWARE_SYA_ver_1_0_2_1.c,290 :: 		if(1 == SWITCH1){
0x0066	0xA08F      	BTFSS       PORTC, 0 
0x0068	0xD003      	BRA         L_Events85
;FIRMWARE_SYA_ver_1_0_2_1.c,292 :: 		sn_PosEdge_1 = 0;
0x006A	0x9615      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,293 :: 		sn_NegEdge_1 = 1;
0x006C	0x8A15      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,294 :: 		}
0x006E	0xD002      	BRA         L_Events86
L_Events85:
;FIRMWARE_SYA_ver_1_0_2_1.c,298 :: 		sn_PosEdge_1 = 1;
0x0070	0x8615      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,299 :: 		sn_NegEdge_1 = 0;
0x0072	0x9A15      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,300 :: 		}
L_Events86:
;FIRMWARE_SYA_ver_1_0_2_1.c,301 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x0074	0x9815      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,302 :: 		}
0x0076	0xD00D      	BRA         L_Events87
L_Events84:
;FIRMWARE_SYA_ver_1_0_2_1.c,304 :: 		else if(1 == interruptC1){
0x0078	0xAE15      	BTFSS       _interruptC1, BitPos(_interruptC1+0) 
0x007A	0xD009      	BRA         L_Events88
;FIRMWARE_SYA_ver_1_0_2_1.c,306 :: 		if(1 == SWITCH2){
0x007C	0xA28F      	BTFSS       PORTC, 1 
0x007E	0xD003      	BRA         L_Events89
;FIRMWARE_SYA_ver_1_0_2_1.c,308 :: 		sn_PosEdge_2 = 0;
0x0080	0x9C15      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,309 :: 		sn_NegEdge_2 = 1;
0x0082	0x8215      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,310 :: 		}
0x0084	0xD002      	BRA         L_Events90
L_Events89:
;FIRMWARE_SYA_ver_1_0_2_1.c,314 :: 		sn_PosEdge_2 = 1;
0x0086	0x8C15      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,315 :: 		sn_NegEdge_2 = 0;
0x0088	0x9215      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,316 :: 		}
L_Events90:
;FIRMWARE_SYA_ver_1_0_2_1.c,317 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x008A	0x9E15      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,318 :: 		}
0x008C	0xD002      	BRA         L_Events91
L_Events88:
;FIRMWARE_SYA_ver_1_0_2_1.c,320 :: 		interruptC0 = 0;
0x008E	0x9815      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,321 :: 		interruptC1 = 0;
0x0090	0x9E15      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,322 :: 		}
L_Events91:
L_Events87:
;FIRMWARE_SYA_ver_1_0_2_1.c,323 :: 		return;
;FIRMWARE_SYA_ver_1_0_2_1.c,325 :: 		}
L_end_Events:
0x0092	0x0012      	RETURN      0
; end of _Events
_FSM:
;FIRMWARE_SYA_ver_1_0_2_1.c,122 :: 		void FSM(){
;FIRMWARE_SYA_ver_1_0_2_1.c,123 :: 		clock0 = 1;
0x0094	0x8015      	BSF         _clock0, BitPos(_clock0+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,124 :: 		switch(current_state){
0x0096	0xD09D      	BRA         L_FSM13
;FIRMWARE_SYA_ver_1_0_2_1.c,125 :: 		case 0: // S0 - Todo apagado
L_FSM15:
;FIRMWARE_SYA_ver_1_0_2_1.c,126 :: 		M1 = 0;
0x0098	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_0_2_1.c,127 :: 		M2 = 0;
0x009A	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_0_2_1.c,128 :: 		M3 = 0;
0x009C	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_0_2_1.c,129 :: 		sn_GoTo = 0;
0x009E	0x9415      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,131 :: 		if((1 == sn_PosEdge_1) && (1 == clock0)){
0x00A0	0xA615      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x00A2	0xD005      	BRA         L_FSM18
0x00A4	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x00A6	0xD003      	BRA         L_FSM18
L__FSM109:
;FIRMWARE_SYA_ver_1_0_2_1.c,132 :: 		next_state = 6; // Si, pasamos a estado 6
0x00A8	0x0E06      	MOVLW       6
0x00AA	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,133 :: 		}
0x00AC	0xD000      	BRA         L_FSM19
L_FSM18:
;FIRMWARE_SYA_ver_1_0_2_1.c,136 :: 		}
L_FSM19:
;FIRMWARE_SYA_ver_1_0_2_1.c,137 :: 		break;
0x00AE	0xD0AA      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,138 :: 		case 1: // S1 - Grupo de trabajo 1 110
L_FSM20:
;FIRMWARE_SYA_ver_1_0_2_1.c,139 :: 		M1 = 1;
0x00B0	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_0_2_1.c,140 :: 		M2 = 0;
0x00B2	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_0_2_1.c,141 :: 		M3 = 0;
0x00B4	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_0_2_1.c,142 :: 		GT1 = 1;
0x00B6	0x8018      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,143 :: 		GT2 = 0;
0x00B8	0x9218      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,144 :: 		GT3 = 0;
0x00BA	0x9418      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,146 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x00BC	0xAA15      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x00BE	0xD004      	BRA         L_FSM23
0x00C0	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x00C2	0xD002      	BRA         L_FSM23
L__FSM108:
;FIRMWARE_SYA_ver_1_0_2_1.c,148 :: 		next_state = 0;
0x00C4	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,150 :: 		}
0x00C6	0xD007      	BRA         L_FSM24
L_FSM23:
;FIRMWARE_SYA_ver_1_0_2_1.c,152 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x00C8	0xAC15      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x00CA	0xD005      	BRA         L_FSM27
0x00CC	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x00CE	0xD003      	BRA         L_FSM27
L__FSM107:
;FIRMWARE_SYA_ver_1_0_2_1.c,154 :: 		next_state = 4;
0x00D0	0x0E04      	MOVLW       4
0x00D2	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,155 :: 		}
0x00D4	0xD000      	BRA         L_FSM28
L_FSM27:
;FIRMWARE_SYA_ver_1_0_2_1.c,159 :: 		}
L_FSM28:
L_FSM24:
;FIRMWARE_SYA_ver_1_0_2_1.c,160 :: 		break;
0x00D6	0xD096      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,161 :: 		case 2: // S2 - Grupo de trabajo 2 011
L_FSM29:
;FIRMWARE_SYA_ver_1_0_2_1.c,162 :: 		M1 = 0;
0x00D8	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_0_2_1.c,163 :: 		M2 = 1;
0x00DA	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_0_2_1.c,164 :: 		M3 = 0;
0x00DC	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_0_2_1.c,165 :: 		GT1 = 0;
0x00DE	0x9018      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,166 :: 		GT2 = 1;
0x00E0	0x8218      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,167 :: 		GT3 = 0;
0x00E2	0x9418      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,169 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x00E4	0xAA15      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x00E6	0xD004      	BRA         L_FSM32
0x00E8	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x00EA	0xD002      	BRA         L_FSM32
L__FSM106:
;FIRMWARE_SYA_ver_1_0_2_1.c,171 :: 		next_state = 0;
0x00EC	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,172 :: 		}
0x00EE	0xD007      	BRA         L_FSM33
L_FSM32:
;FIRMWARE_SYA_ver_1_0_2_1.c,174 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x00F0	0xAC15      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x00F2	0xD005      	BRA         L_FSM36
0x00F4	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x00F6	0xD003      	BRA         L_FSM36
L__FSM105:
;FIRMWARE_SYA_ver_1_0_2_1.c,176 :: 		next_state = 4;
0x00F8	0x0E04      	MOVLW       4
0x00FA	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,177 :: 		}
0x00FC	0xD000      	BRA         L_FSM37
L_FSM36:
;FIRMWARE_SYA_ver_1_0_2_1.c,181 :: 		}
L_FSM37:
L_FSM33:
;FIRMWARE_SYA_ver_1_0_2_1.c,182 :: 		break;
0x00FE	0xD082      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,183 :: 		case 3: // S3 - Grupo de trabajo 3 101
L_FSM38:
;FIRMWARE_SYA_ver_1_0_2_1.c,184 :: 		M1 = 0;
0x0100	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_0_2_1.c,185 :: 		M2 = 0;
0x0102	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_0_2_1.c,186 :: 		M3 = 1;
0x0104	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_0_2_1.c,187 :: 		GT1 = 0;
0x0106	0x9018      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,188 :: 		GT2 = 0;
0x0108	0x9218      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,189 :: 		GT3 = 1;
0x010A	0x8418      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,191 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x010C	0xAA15      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x010E	0xD004      	BRA         L_FSM41
0x0110	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0112	0xD002      	BRA         L_FSM41
L__FSM104:
;FIRMWARE_SYA_ver_1_0_2_1.c,193 :: 		next_state = 0;
0x0114	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,194 :: 		}
0x0116	0xD007      	BRA         L_FSM42
L_FSM41:
;FIRMWARE_SYA_ver_1_0_2_1.c,196 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x0118	0xAC15      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x011A	0xD005      	BRA         L_FSM45
0x011C	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x011E	0xD003      	BRA         L_FSM45
L__FSM103:
;FIRMWARE_SYA_ver_1_0_2_1.c,198 :: 		next_state = 4;
0x0120	0x0E04      	MOVLW       4
0x0122	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,199 :: 		}
0x0124	0xD000      	BRA         L_FSM46
L_FSM45:
;FIRMWARE_SYA_ver_1_0_2_1.c,203 :: 		}
L_FSM46:
L_FSM42:
;FIRMWARE_SYA_ver_1_0_2_1.c,204 :: 		break;
0x0126	0xD06E      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,205 :: 		case 4: // S4 - Grupo de trabajo 4 111
L_FSM47:
;FIRMWARE_SYA_ver_1_0_2_1.c,206 :: 		M1 = 1;
0x0128	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_0_2_1.c,207 :: 		M2 = 1;
0x012A	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_0_2_1.c,208 :: 		M3 = 1;
0x012C	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_0_2_1.c,210 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x012E	0xAA15      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0130	0xD004      	BRA         L_FSM50
0x0132	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0134	0xD002      	BRA         L_FSM50
L__FSM102:
;FIRMWARE_SYA_ver_1_0_2_1.c,211 :: 		next_state = 0;
0x0136	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,212 :: 		}
0x0138	0xD008      	BRA         L_FSM51
L_FSM50:
;FIRMWARE_SYA_ver_1_0_2_1.c,213 :: 		else if((1 == sn_NegEdge_2) && (1 == clock0)){
0x013A	0xA215      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x013C	0xD006      	BRA         L_FSM54
0x013E	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0140	0xD004      	BRA         L_FSM54
L__FSM101:
;FIRMWARE_SYA_ver_1_0_2_1.c,215 :: 		next_state = 5;
0x0142	0x0E05      	MOVLW       5
0x0144	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,216 :: 		sn_GoTo = 1; // Ponemos en 1 la señal de transicion
0x0146	0x8415      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,217 :: 		}
0x0148	0xD000      	BRA         L_FSM55
L_FSM54:
;FIRMWARE_SYA_ver_1_0_2_1.c,221 :: 		}
L_FSM55:
L_FSM51:
;FIRMWARE_SYA_ver_1_0_2_1.c,222 :: 		break;
0x014A	0xD05C      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,223 :: 		case 5: // S5 - Estado de transicion para flanco negativo 2
L_FSM56:
;FIRMWARE_SYA_ver_1_0_2_1.c,225 :: 		if((1 == sn_GoTo) && (1 == GT1) && (1 == clock0)){
0x014C	0xA415      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x014E	0xD007      	BRA         L_FSM59
0x0150	0xA018      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0152	0xD005      	BRA         L_FSM59
0x0154	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0156	0xD003      	BRA         L_FSM59
L__FSM100:
;FIRMWARE_SYA_ver_1_0_2_1.c,226 :: 		next_state = 2;
0x0158	0x0E02      	MOVLW       2
0x015A	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,227 :: 		}
0x015C	0xD012      	BRA         L_FSM60
L_FSM59:
;FIRMWARE_SYA_ver_1_0_2_1.c,228 :: 		else if((1 == sn_GoTo) && (1 == GT2) && (1 == clock0)){
0x015E	0xA415      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x0160	0xD007      	BRA         L_FSM63
0x0162	0xA218      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0164	0xD005      	BRA         L_FSM63
0x0166	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0168	0xD003      	BRA         L_FSM63
L__FSM99:
;FIRMWARE_SYA_ver_1_0_2_1.c,229 :: 		next_state = 3;
0x016A	0x0E03      	MOVLW       3
0x016C	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,230 :: 		}
0x016E	0xD009      	BRA         L_FSM64
L_FSM63:
;FIRMWARE_SYA_ver_1_0_2_1.c,231 :: 		else if((1 == sn_GoTo) && (1 == GT3) && (1 == clock0)){
0x0170	0xA415      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x0172	0xD007      	BRA         L_FSM67
0x0174	0xA418      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0176	0xD005      	BRA         L_FSM67
0x0178	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x017A	0xD003      	BRA         L_FSM67
L__FSM98:
;FIRMWARE_SYA_ver_1_0_2_1.c,232 :: 		next_state = 1;
0x017C	0x0E01      	MOVLW       1
0x017E	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,233 :: 		}
0x0180	0xD000      	BRA         L_FSM68
L_FSM67:
;FIRMWARE_SYA_ver_1_0_2_1.c,237 :: 		}
L_FSM68:
L_FSM64:
L_FSM60:
;FIRMWARE_SYA_ver_1_0_2_1.c,238 :: 		break;
0x0182	0xD040      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,239 :: 		case 6: // S6 - Estado de transicion para flanco positivo
L_FSM69:
;FIRMWARE_SYA_ver_1_0_2_1.c,240 :: 		if(1 == sn_PosEdge_1){
0x0184	0xA615      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x0186	0xD01B      	BRA         L_FSM70
;FIRMWARE_SYA_ver_1_0_2_1.c,242 :: 		if((1 == GT1) && (1 == clock0)){
0x0188	0xA018      	BTFSS       _GT1, BitPos(_GT1+0) 
0x018A	0xD007      	BRA         L_FSM73
0x018C	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x018E	0xD005      	BRA         L_FSM73
L__FSM97:
;FIRMWARE_SYA_ver_1_0_2_1.c,244 :: 		next_state = 2;
0x0190	0x0E02      	MOVLW       2
0x0192	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,245 :: 		GT2 = 0; // DO NOT
0x0194	0x9218      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,246 :: 		GT3 = 0; // DELETE !!!!
0x0196	0x9418      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,247 :: 		}
0x0198	0xD012      	BRA         L_FSM74
L_FSM73:
;FIRMWARE_SYA_ver_1_0_2_1.c,249 :: 		else if((1 == GT2) && (1 == clock0)){
0x019A	0xA218      	BTFSS       _GT2, BitPos(_GT2+0) 
0x019C	0xD007      	BRA         L_FSM77
0x019E	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01A0	0xD005      	BRA         L_FSM77
L__FSM96:
;FIRMWARE_SYA_ver_1_0_2_1.c,251 :: 		next_state = 3;
0x01A2	0x0E03      	MOVLW       3
0x01A4	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,252 :: 		GT1 = 0; // DO NOT
0x01A6	0x9018      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,253 :: 		GT3 = 0; // DELETE !!!!
0x01A8	0x9418      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,254 :: 		}
0x01AA	0xD009      	BRA         L_FSM78
L_FSM77:
;FIRMWARE_SYA_ver_1_0_2_1.c,256 :: 		else if((1 == GT3) && (1 == clock0)){
0x01AC	0xA418      	BTFSS       _GT3, BitPos(_GT3+0) 
0x01AE	0xD007      	BRA         L_FSM81
0x01B0	0xA015      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01B2	0xD005      	BRA         L_FSM81
L__FSM95:
;FIRMWARE_SYA_ver_1_0_2_1.c,258 :: 		next_state = 1;
0x01B4	0x0E01      	MOVLW       1
0x01B6	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,259 :: 		GT1 = 0; // DO NOT
0x01B8	0x9018      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,260 :: 		GT2 = 0; // DELETE !!!!
0x01BA	0x9218      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,261 :: 		}
0x01BC	0xD000      	BRA         L_FSM82
L_FSM81:
;FIRMWARE_SYA_ver_1_0_2_1.c,265 :: 		}
L_FSM82:
L_FSM78:
L_FSM74:
;FIRMWARE_SYA_ver_1_0_2_1.c,266 :: 		}
L_FSM70:
;FIRMWARE_SYA_ver_1_0_2_1.c,267 :: 		break;
0x01BE	0xD022      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,268 :: 		default:
L_FSM83:
;FIRMWARE_SYA_ver_1_0_2_1.c,269 :: 		GT1 = 0;
0x01C0	0x9018      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,270 :: 		GT2 = 0;
0x01C2	0x9218      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,271 :: 		GT3 = 1;
0x01C4	0x8418      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_0_2_1.c,272 :: 		M1 = 0;
0x01C6	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_0_2_1.c,273 :: 		M2 = 0;
0x01C8	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_0_2_1.c,274 :: 		M3 = 0;
0x01CA	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_0_2_1.c,275 :: 		current_state = 0;
0x01CC	0x6A16      	CLRF        _current_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,276 :: 		next_state = 0;
0x01CE	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_0_2_1.c,277 :: 		break;
0x01D0	0xD019      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_0_2_1.c,278 :: 		}
L_FSM13:
0x01D2	0x5016      	MOVF        _current_state, 0 
0x01D4	0x0A00      	XORLW       0
0x01D6	0xB4D8      	BTFSC       STATUS, 2 
0x01D8	0xD75F      	BRA         L_FSM15
0x01DA	0x5016      	MOVF        _current_state, 0 
0x01DC	0x0A01      	XORLW       1
0x01DE	0xB4D8      	BTFSC       STATUS, 2 
0x01E0	0xD767      	BRA         L_FSM20
0x01E2	0x5016      	MOVF        _current_state, 0 
0x01E4	0x0A02      	XORLW       2
0x01E6	0xB4D8      	BTFSC       STATUS, 2 
0x01E8	0xD777      	BRA         L_FSM29
0x01EA	0x5016      	MOVF        _current_state, 0 
0x01EC	0x0A03      	XORLW       3
0x01EE	0xE088      	BZ          L_FSM38
0x01F0	0x5016      	MOVF        _current_state, 0 
0x01F2	0x0A04      	XORLW       4
0x01F4	0xE099      	BZ          L_FSM47
0x01F6	0x5016      	MOVF        _current_state, 0 
0x01F8	0x0A05      	XORLW       5
0x01FA	0xE0A8      	BZ          L_FSM56
0x01FC	0x5016      	MOVF        _current_state, 0 
0x01FE	0x0A06      	XORLW       6
0x0200	0xE0C1      	BZ          L_FSM69
0x0202	0xD7DE      	BRA         L_FSM83
L_FSM14:
;FIRMWARE_SYA_ver_1_0_2_1.c,280 :: 		}
L_end_FSM:
0x0204	0x0012      	RETURN      0
; end of _FSM
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x0206	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x0208	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x020A	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x020E	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x0210	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x0212	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x0214	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x0216	0x0012      	RETURN      0
; end of ___CC2DW
_InitInterrupt:
;FIRMWARE_SYA_ver_1_0_2_1.c,331 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_1_0_2_1.c,333 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x0218	0x0E30      	MOVLW       48
0x021A	0x010E      	MOVLB       14
0x021C	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,334 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x021E	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,335 :: 		T0CON0 = 0x90;
0x0220	0x0E90      	MOVLW       144
0x0222	0x6ED5      	MOVWF       T0CON0 
;FIRMWARE_SYA_ver_1_0_2_1.c,336 :: 		T0CON1 = 0x40;
0x0224	0x0E40      	MOVLW       64
0x0226	0x6ED6      	MOVWF       T0CON1 
;FIRMWARE_SYA_ver_1_0_2_1.c,337 :: 		TMR0H = 0xEC;
0x0228	0x0EEC      	MOVLW       236
0x022A	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_1_0_2_1.c,338 :: 		TMR0L = 0x78;
0x022C	0x0E78      	MOVLW       120
0x022E	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_1_0_2_1.c,339 :: 		IOCCN = 0x03;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x0230	0x0E03      	MOVLW       3
0x0232	0x010F      	MOVLB       15
0x0234	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,340 :: 		IOCCP = 0x03;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x0236	0x0E03      	MOVLW       3
0x0238	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,341 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x023A	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,342 :: 		PIR0.TMR0IF = 0;
0x023C	0x010E      	MOVLB       14
0x023E	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_0_2_1.c,343 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x0240	0x0EC0      	MOVLW       192
0x0242	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_1_0_2_1.c,345 :: 		}
L_end_InitInterrupt:
0x0244	0x0012      	RETURN      0
; end of _InitInterrupt
_main:
;FIRMWARE_SYA_ver_1_0_2_1.c,102 :: 		void main(){
;FIRMWARE_SYA_ver_1_0_2_1.c,104 :: 		InitInterrupt(); // MCU interrupt config
0x0246	0xDFE8      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_1_0_2_1.c,105 :: 		InitMCU();       // MCU pin/reg config
0x0248	0xDEF2      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_1_0_2_1.c,107 :: 		do{
L_main6:
;FIRMWARE_SYA_ver_1_0_2_1.c,108 :: 		Events();
0x024A	0xDF0B      	RCALL       _Events
;FIRMWARE_SYA_ver_1_0_2_1.c,109 :: 		}while((1 == IOCCF.B0) || (1 == IOCCF.B1));
0x024C	0x010F      	MOVLB       15
0x024E	0xB11A      	BTFSC       IOCCF, 0, 1
0x0250	0xD7FC      	BRA         L_main6
0x0252	0xB31A      	BTFSC       IOCCF, 1, 1
0x0254	0xD7FA      	BRA         L_main6
L__main94:
;FIRMWARE_SYA_ver_1_0_2_1.c,111 :: 		while(1){
L_main11:
;FIRMWARE_SYA_ver_1_0_2_1.c,112 :: 		current_state = next_state; // Maybe move this with Events
0x0256	0xF016C017  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_1_0_2_1.c,113 :: 		FSM();
0x025A	0xDF1C      	RCALL       _FSM
;FIRMWARE_SYA_ver_1_0_2_1.c,114 :: 		}
0x025C	0xD7FC      	BRA         L_main11
;FIRMWARE_SYA_ver_1_0_2_1.c,116 :: 		}
L_end_main:
0x025E	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [38]    _interrupt
0x002E      [52]    _InitMCU
0x0062      [50]    _Events
0x0094     [370]    _FSM
0x0206      [18]    ___CC2DW
0x0218      [46]    _InitInterrupt
0x0246      [26]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [0]    _sn_PosEdge_1
0x0015       [0]    _interruptC1
0x0015       [0]    _clock0
0x0015       [0]    _interruptC0
0x0015       [0]    _sn_NegEdge_1
0x0015       [0]    _sn_PosEdge_2
0x0015       [0]    _sn_GoTo
0x0015       [0]    _sn_NegEdge_2
0x0016       [1]    _current_state
0x0017       [1]    _next_state
0x0018       [0]    _GT3
0x0018       [0]    _GT1
0x0018       [0]    _GT2
0x0EC2       [0]    IOCIE_bit
0x0EC2       [1]    PIE0
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F1D       [1]    INLVLC
0x0F20       [1]    WPUC
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
