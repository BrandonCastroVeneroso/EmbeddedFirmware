;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/29/2024 12:05:28 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EFA0  	GOTO        832
_interrupt:
;FIRMWARE_SYA_ver_1_4_0.c,98 :: 		void interrupt(){
0x0008	0xF019C000  	MOVFF       R0, 25
0x000C	0xF018C001  	MOVFF       R1, 24
0x0010	0xF017C00B  	MOVFF       R11, 23
0x0014	0xF016C00C  	MOVFF       R12, 22
0x0018	0xF015C00D  	MOVFF       R13, 21
;FIRMWARE_SYA_ver_1_4_0.c,100 :: 		if(PIR0.TMR0IF){
0x001C	0x010E      	MOVLB       14
0x001E	0xABCA      	BTFSS       PIR0, 5, 1
0x0020	0xD01E      	BRA         L_interrupt0
;FIRMWARE_SYA_ver_1_4_0.c,101 :: 		TMR0H = 0x3C;      // Timer para cada segundo y medio?
0x0022	0x0E3C      	MOVLW       60
0x0024	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_1_4_0.c,102 :: 		TMR0L = 0xB0;      //
0x0026	0x0EB0      	MOVLW       176
0x0028	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_1_4_0.c,103 :: 		PIR0.TMR0IF = 0;
0x002A	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_4_0.c,104 :: 		counter++;
0x002C	0x0E01      	MOVLW       1
0x002E	0x241A      	ADDWF       _counter, 0 
0x0030	0x6E00      	MOVWF       R0 
0x0032	0x0E00      	MOVLW       0
0x0034	0x201B      	ADDWFC      _counter+1, 0 
0x0036	0x6E01      	MOVWF       R1 
0x0038	0xF01AC000  	MOVFF       R0, _counter
0x003C	0xF01BC001  	MOVFF       R1, _counter+1
;FIRMWARE_SYA_ver_1_4_0.c,105 :: 		if(counter >= 200){
0x0040	0x0E80      	MOVLW       128
0x0042	0x181B      	XORWF       _counter+1, 0 
0x0044	0x6E00      	MOVWF       R0 
0x0046	0x0E80      	MOVLW       128
0x0048	0x5C00      	SUBWF       R0, 0 
0x004A	0xE102      	BNZ         L__interrupt91
0x004C	0x0EC8      	MOVLW       200
0x004E	0x5C1A      	SUBWF       _counter, 0 
L__interrupt91:
0x0050	0xE306      	BNC         L_interrupt1
;FIRMWARE_SYA_ver_1_4_0.c,106 :: 		LED = ~LED;
0x0052	0x7883      	BTG         LATA, 4 
;FIRMWARE_SYA_ver_1_4_0.c,107 :: 		Events();
0x0054	0xD87C      	RCALL       _Events
;FIRMWARE_SYA_ver_1_4_0.c,108 :: 		PIE0.TMR0IE = 0;
0x0056	0x010E      	MOVLB       14
0x0058	0x9BC2      	BCF         PIE0, 5, 1
;FIRMWARE_SYA_ver_1_4_0.c,109 :: 		counter = 0;
0x005A	0x6A1A      	CLRF        _counter 
0x005C	0x6A1B      	CLRF        _counter+1 
;FIRMWARE_SYA_ver_1_4_0.c,110 :: 		}
L_interrupt1:
;FIRMWARE_SYA_ver_1_4_0.c,111 :: 		}
L_interrupt0:
;FIRMWARE_SYA_ver_1_4_0.c,112 :: 		if(1 == IOCCF.B0){
0x005E	0x010F      	MOVLB       15
0x0060	0xA11A      	BTFSS       IOCCF, 0, 1
0x0062	0xD005      	BRA         L_interrupt2
;FIRMWARE_SYA_ver_1_4_0.c,113 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0064	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_1_4_0.c,114 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0066	0x0E01      	MOVLW       1
0x0068	0x6E20      	MOVWF       _interruptC0 
0x006A	0x0E00      	MOVLW       0
0x006C	0x6E21      	MOVWF       _interruptC0+1 
;FIRMWARE_SYA_ver_1_4_0.c,128 :: 		}
L_interrupt2:
;FIRMWARE_SYA_ver_1_4_0.c,130 :: 		if(1 == IOCCF.B1){
0x006E	0xA31A      	BTFSS       IOCCF, 1, 1
0x0070	0xD020      	BRA         L_interrupt3
;FIRMWARE_SYA_ver_1_4_0.c,131 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0072	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_1_4_0.c,132 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0074	0x0E01      	MOVLW       1
0x0076	0x6E24      	MOVWF       _interruptC1 
0x0078	0x0E00      	MOVLW       0
0x007A	0x6E25      	MOVWF       _interruptC1+1 
;FIRMWARE_SYA_ver_1_4_0.c,133 :: 		Delay_ms(200);
0x007C	0x0E06      	MOVLW       6
0x007E	0x6E0B      	MOVWF       R11, 0
0x0080	0x0E13      	MOVLW       19
0x0082	0x6E0C      	MOVWF       R12, 0
0x0084	0x0EAD      	MOVLW       173
0x0086	0x6E0D      	MOVWF       R13, 0
L_interrupt4:
0x0088	0x2E0D      	DECFSZ      R13, 1, 0
0x008A	0xD7FE      	BRA         L_interrupt4
0x008C	0x2E0C      	DECFSZ      R12, 1, 0
0x008E	0xD7FC      	BRA         L_interrupt4
0x0090	0x2E0B      	DECFSZ      R11, 1, 0
0x0092	0xD7FA      	BRA         L_interrupt4
0x0094	0x0000      	NOP
0x0096	0x0000      	NOP
;FIRMWARE_SYA_ver_1_4_0.c,134 :: 		if(1 == SWITCH1){
0x0098	0xA28F      	BTFSS       PORTC, 1 
0x009A	0xD005      	BRA         L_interrupt5
;FIRMWARE_SYA_ver_1_4_0.c,135 :: 		sn_PosEdge_1 = 0;
0x009C	0x961C      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,136 :: 		sn_NegEdge_1 = 1;
0x009E	0x801C      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,137 :: 		interruptC1 = 0;
0x00A0	0x6A24      	CLRF        _interruptC1 
0x00A2	0x6A25      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_4_0.c,138 :: 		}
0x00A4	0xD006      	BRA         L_interrupt6
L_interrupt5:
;FIRMWARE_SYA_ver_1_4_0.c,140 :: 		sn_PosEdge_1 = 1;
0x00A6	0x861C      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,141 :: 		sn_NegEdge_1 = 0;
0x00A8	0x901C      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,142 :: 		next_state = s7;
0x00AA	0x0E07      	MOVLW       7
0x00AC	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,143 :: 		interruptC1 = 0;
0x00AE	0x6A24      	CLRF        _interruptC1 
0x00B0	0x6A25      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_4_0.c,144 :: 		}
L_interrupt6:
;FIRMWARE_SYA_ver_1_4_0.c,146 :: 		}
L_interrupt3:
;FIRMWARE_SYA_ver_1_4_0.c,148 :: 		if(1 == IOCCF.B2){
0x00B2	0xA51A      	BTFSS       IOCCF, 2, 1
0x00B4	0xD005      	BRA         L_interrupt7
;FIRMWARE_SYA_ver_1_4_0.c,149 :: 		IOCCF.B2 = 0; // Limpiamos la bandera de IOC
0x00B6	0x951A      	BCF         IOCCF, 2, 1
;FIRMWARE_SYA_ver_1_4_0.c,150 :: 		interruptC2 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x00B8	0x0E01      	MOVLW       1
0x00BA	0x6E22      	MOVWF       _interruptC2 
0x00BC	0x0E00      	MOVLW       0
0x00BE	0x6E23      	MOVWF       _interruptC2+1 
;FIRMWARE_SYA_ver_1_4_0.c,164 :: 		}
L_interrupt7:
;FIRMWARE_SYA_ver_1_4_0.c,166 :: 		}
L_end_interrupt:
L__interrupt90:
0x00C0	0xF000C019  	MOVFF       25, R0
0x00C4	0xF001C018  	MOVFF       24, R1
0x00C8	0xF00BC017  	MOVFF       23, R11
0x00CC	0xF00CC016  	MOVFF       22, R12
0x00D0	0xF00DC015  	MOVFF       21, R13
0x00D4	0x0011      	RETFIE      1
; end of _interrupt
_InitInterrupt:
;FIRMWARE_SYA_ver_1_4_0.c,373 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_1_4_0.c,375 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x00D6	0x0E30      	MOVLW       48
0x00D8	0x010E      	MOVLB       14
0x00DA	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_1_4_0.c,376 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x00DC	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_1_4_0.c,378 :: 		T0CON0 = 0x90;
0x00DE	0x0E90      	MOVLW       144
0x00E0	0x6ED5      	MOVWF       T0CON0 
;FIRMWARE_SYA_ver_1_4_0.c,379 :: 		T0CON1 = 0x40;
0x00E2	0x0E40      	MOVLW       64
0x00E4	0x6ED6      	MOVWF       T0CON1 
;FIRMWARE_SYA_ver_1_4_0.c,380 :: 		TMR0H = 0x3C;
0x00E6	0x0E3C      	MOVLW       60
0x00E8	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_1_4_0.c,381 :: 		TMR0L = 0xB0;
0x00EA	0x0EB0      	MOVLW       176
0x00EC	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_1_4_0.c,383 :: 		IOCCN = 0x07;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x00EE	0x0E07      	MOVLW       7
0x00F0	0x010F      	MOVLB       15
0x00F2	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_1_4_0.c,384 :: 		IOCCP = 0x07;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x00F4	0x0E07      	MOVLW       7
0x00F6	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_1_4_0.c,385 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x00F8	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_1_4_0.c,386 :: 		PIR0.TMR0IF = 0;
0x00FA	0x010E      	MOVLB       14
0x00FC	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_4_0.c,388 :: 		PIE4 = 0x02;
0x00FE	0x0E02      	MOVLW       2
0x0100	0x6FC6      	MOVWF       PIE4, 1
;FIRMWARE_SYA_ver_1_4_0.c,389 :: 		PIR4 = 0x00;
0x0102	0x6BCE      	CLRF        PIR4, 1
;FIRMWARE_SYA_ver_1_4_0.c,390 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x0104	0x0EC0      	MOVLW       192
0x0106	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_1_4_0.c,392 :: 		}
L_end_InitInterrupt:
0x0108	0x0012      	RETURN      0
; end of _InitInterrupt
_InitMCU:
;FIRMWARE_SYA_ver_1_4_0.c,398 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_1_4_0.c,400 :: 		ADCON0 = 0x08; // Desactivamos ADC
0x010A	0x0E08      	MOVLW       8
0x010C	0x6E60      	MOVWF       ADCON0 
;FIRMWARE_SYA_ver_1_4_0.c,401 :: 		ANSELC = 0x00;    // Ponemos en modo digital al puerto C
0x010E	0x010F      	MOVLB       15
0x0110	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_1_4_0.c,402 :: 		ANSELE = 0x00;    //                ''                 E
0x0112	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_1_4_0.c,403 :: 		ANSELA = 0x00;    //                ''                 A
0x0114	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_1_4_0.c,404 :: 		ANSELD = 0x00;
0x0116	0x6B26      	CLRF        ANSELD, 1
;FIRMWARE_SYA_ver_1_4_0.c,406 :: 		TRISC = 0x0F;  // Ponemos en modo de entrada a C0, C1, c2 Y c3, los demas como salida
0x0118	0x0E0F      	MOVLW       15
0x011A	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_1_4_0.c,407 :: 		TRISD = 0x07;  // Ponemos en modo de entrada a D0 y D1
0x011C	0x0E07      	MOVLW       7
0x011E	0x6E8B      	MOVWF       TRISD 
;FIRMWARE_SYA_ver_1_4_0.c,408 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x0120	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_1_4_0.c,409 :: 		TRISA = 0x80;  //                ''                A
0x0122	0x0E80      	MOVLW       128
0x0124	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_1_4_0.c,411 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x0126	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_1_4_0.c,412 :: 		PORTD = 0x00;
0x0128	0x6A90      	CLRF        PORTD 
;FIRMWARE_SYA_ver_1_4_0.c,413 :: 		PORTE = 0x00;  //                ''             E
0x012A	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_1_4_0.c,414 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x012C	0x0E10      	MOVLW       16
0x012E	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_1_4_0.c,416 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x0130	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_1_4_0.c,417 :: 		LATD = 0x00;
0x0132	0x6A86      	CLRF        LATD 
;FIRMWARE_SYA_ver_1_4_0.c,418 :: 		LATE = 0x00;   //                ''                      E
0x0134	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_1_4_0.c,419 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x0136	0x0E10      	MOVLW       16
0x0138	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_1_4_0.c,423 :: 		WPUD = 0x07;   // Activamos el pull-up interno de C0 y C1
0x013A	0x0E07      	MOVLW       7
0x013C	0x6F25      	MOVWF       WPUD, 1
;FIRMWARE_SYA_ver_1_4_0.c,424 :: 		INLVLD = 0x07; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x013E	0x0E07      	MOVLW       7
0x0140	0x6F22      	MOVWF       INLVLD, 1
;FIRMWARE_SYA_ver_1_4_0.c,425 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x0142	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_1_4_0.c,426 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x0144	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_1_4_0.c,427 :: 		GT3 = 1;
0x0146	0x8A1C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,428 :: 		GT2 = 0;
0x0148	0x981C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,429 :: 		GT1 = 0;
0x014A	0x9C1C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,431 :: 		}
L_end_InitMCU:
0x014C	0x0012      	RETURN      0
; end of _InitMCU
_Events:
;FIRMWARE_SYA_ver_1_4_0.c,336 :: 		void Events(){
;FIRMWARE_SYA_ver_1_4_0.c,337 :: 		sn_NegEdge_1 = 0;
0x014E	0x901C      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,338 :: 		sn_NegEdge_2 = 0;
0x0150	0x941C      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,339 :: 		sn_NegEdge_3 = 0;
0x0152	0x9E1C      	BCF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,340 :: 		sn_PosEdge_1 = 0;
0x0154	0x961C      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,341 :: 		sn_PosEdge_2 = 0;
0x0156	0x901F      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,342 :: 		sn_PosEdge_3 = 0;
0x0158	0x921C      	BCF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,343 :: 		switch(SWITCH1){
0x015A	0xD010      	BRA         L_Events69
;FIRMWARE_SYA_ver_1_4_0.c,344 :: 		case 0:
L_Events71:
;FIRMWARE_SYA_ver_1_4_0.c,345 :: 		next_state = s1;
0x015C	0x0E01      	MOVLW       1
0x015E	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,346 :: 		Delay_ms(1000);
0x0160	0x0E1A      	MOVLW       26
0x0162	0x6E0B      	MOVWF       R11, 0
0x0164	0x0E5E      	MOVLW       94
0x0166	0x6E0C      	MOVWF       R12, 0
0x0168	0x0E6E      	MOVLW       110
0x016A	0x6E0D      	MOVWF       R13, 0
L_Events72:
0x016C	0x2E0D      	DECFSZ      R13, 1, 0
0x016E	0xD7FE      	BRA         L_Events72
0x0170	0x2E0C      	DECFSZ      R12, 1, 0
0x0172	0xD7FC      	BRA         L_Events72
0x0174	0x2E0B      	DECFSZ      R11, 1, 0
0x0176	0xD7FA      	BRA         L_Events72
0x0178	0x0000      	NOP
;FIRMWARE_SYA_ver_1_4_0.c,347 :: 		break;
0x017A	0xD002      	BRA         L_Events70
;FIRMWARE_SYA_ver_1_4_0.c,348 :: 		}
L_Events69:
0x017C	0xA28F      	BTFSS       PORTC, 1 
0x017E	0xD7EE      	BRA         L_Events71
L_Events70:
;FIRMWARE_SYA_ver_1_4_0.c,355 :: 		return;
;FIRMWARE_SYA_ver_1_4_0.c,357 :: 		}
L_end_Events:
0x0180	0x0012      	RETURN      0
; end of _Events
_FSM:
;FIRMWARE_SYA_ver_1_4_0.c,188 :: 		void FSM(){
;FIRMWARE_SYA_ver_1_4_0.c,189 :: 		switch(current_state){
0x0182	0xD0A6      	BRA         L_FSM10
;FIRMWARE_SYA_ver_1_4_0.c,190 :: 		case s0:
L_FSM12:
;FIRMWARE_SYA_ver_1_4_0.c,191 :: 		M1 = 0;
0x0184	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,192 :: 		M2 = 0;
0x0186	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,193 :: 		M3 = 0;
0x0188	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,194 :: 		if(1 == sn_PosEdge_1){
0x018A	0xA61C      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x018C	0xD003      	BRA         L_FSM13
;FIRMWARE_SYA_ver_1_4_0.c,195 :: 		next_state = s7;
0x018E	0x0E07      	MOVLW       7
0x0190	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,196 :: 		}
0x0192	0xD000      	BRA         L_FSM14
L_FSM13:
;FIRMWARE_SYA_ver_1_4_0.c,198 :: 		}
L_FSM14:
;FIRMWARE_SYA_ver_1_4_0.c,199 :: 		break;
0x0194	0xD0BB      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,200 :: 		case s1:
L_FSM15:
;FIRMWARE_SYA_ver_1_4_0.c,201 :: 		M1 = 1;
0x0196	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,202 :: 		M2 = 0;
0x0198	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,203 :: 		M3 = 0;
0x019A	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,204 :: 		GT1 = 1;
0x019C	0x8C1C      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,205 :: 		GT2 = 0;
0x019E	0x981C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,206 :: 		GT3 = 0;
0x01A0	0x9A1C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,207 :: 		if(1 == sn_NegEdge_1){
0x01A2	0xA01C      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x01A4	0xD002      	BRA         L_FSM16
;FIRMWARE_SYA_ver_1_4_0.c,209 :: 		next_state = s0;
0x01A6	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,210 :: 		}
0x01A8	0xD000      	BRA         L_FSM17
L_FSM16:
;FIRMWARE_SYA_ver_1_4_0.c,215 :: 		}
L_FSM17:
;FIRMWARE_SYA_ver_1_4_0.c,216 :: 		break;
0x01AA	0xD0B0      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,217 :: 		case s2:
L_FSM18:
;FIRMWARE_SYA_ver_1_4_0.c,218 :: 		M1 = 0;
0x01AC	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,219 :: 		M2 = 1;
0x01AE	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,220 :: 		M3 = 0;
0x01B0	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,221 :: 		GT1 = 0;
0x01B2	0x9C1C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,222 :: 		GT2 = 1;
0x01B4	0x881C      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,223 :: 		GT3 = 0;
0x01B6	0x9A1C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,224 :: 		if(1 == sn_NegEdge_1){
0x01B8	0xA01C      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x01BA	0xD002      	BRA         L_FSM19
;FIRMWARE_SYA_ver_1_4_0.c,225 :: 		next_state = s0;
0x01BC	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,226 :: 		}
0x01BE	0xD000      	BRA         L_FSM20
L_FSM19:
;FIRMWARE_SYA_ver_1_4_0.c,231 :: 		}
L_FSM20:
;FIRMWARE_SYA_ver_1_4_0.c,232 :: 		break;
0x01C0	0xD0A5      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,233 :: 		case s3:
L_FSM21:
;FIRMWARE_SYA_ver_1_4_0.c,234 :: 		M1 = 0;
0x01C2	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,235 :: 		M2 = 0;
0x01C4	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,236 :: 		M3 = 1;
0x01C6	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,237 :: 		GT1 = 0;
0x01C8	0x9C1C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,238 :: 		GT2 = 0;
0x01CA	0x981C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,239 :: 		GT3 = 1;
0x01CC	0x8A1C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,240 :: 		if(1 == sn_NegEdge_1){
0x01CE	0xA01C      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x01D0	0xD002      	BRA         L_FSM22
;FIRMWARE_SYA_ver_1_4_0.c,241 :: 		next_state = s0;
0x01D2	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,242 :: 		}
0x01D4	0xD000      	BRA         L_FSM23
L_FSM22:
;FIRMWARE_SYA_ver_1_4_0.c,247 :: 		}
L_FSM23:
;FIRMWARE_SYA_ver_1_4_0.c,248 :: 		break;
0x01D6	0xD09A      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,249 :: 		case s4:
L_FSM24:
;FIRMWARE_SYA_ver_1_4_0.c,250 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x01D8	0xAC1C      	BTFSS       _GT1, BitPos(_GT1+0) 
0x01DA	0xD00A      	BRA         L_FSM27
0x01DC	0xB81C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x01DE	0xD008      	BRA         L_FSM27
0x01E0	0xBA1C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x01E2	0xD006      	BRA         L_FSM27
L__FSM82:
;FIRMWARE_SYA_ver_1_4_0.c,251 :: 		M1 = 1;
0x01E4	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,252 :: 		M2 = 1;
0x01E6	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,253 :: 		M3 = 0;
0x01E8	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,254 :: 		GT2 = 0;
0x01EA	0x981C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,255 :: 		GT3 = 0;
0x01EC	0x9A1C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,256 :: 		}
0x01EE	0xD017      	BRA         L_FSM28
L_FSM27:
;FIRMWARE_SYA_ver_1_4_0.c,257 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x01F0	0xA81C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x01F2	0xD00A      	BRA         L_FSM31
0x01F4	0xBC1C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x01F6	0xD008      	BRA         L_FSM31
0x01F8	0xBA1C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x01FA	0xD006      	BRA         L_FSM31
L__FSM81:
;FIRMWARE_SYA_ver_1_4_0.c,258 :: 		M1 = 0;
0x01FC	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,259 :: 		M2 = 1;
0x01FE	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,260 :: 		M3 = 1;
0x0200	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,261 :: 		GT1 = 0;
0x0202	0x9C1C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,262 :: 		GT3 = 0;
0x0204	0x9A1C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,263 :: 		}
0x0206	0xD00B      	BRA         L_FSM32
L_FSM31:
;FIRMWARE_SYA_ver_1_4_0.c,264 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x0208	0xAA1C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x020A	0xD009      	BRA         L_FSM35
0x020C	0xBC1C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x020E	0xD007      	BRA         L_FSM35
0x0210	0xB81C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0212	0xD005      	BRA         L_FSM35
L__FSM80:
;FIRMWARE_SYA_ver_1_4_0.c,265 :: 		M1 = 1;
0x0214	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,266 :: 		M2 = 0;
0x0216	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,267 :: 		M3 = 1;
0x0218	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,268 :: 		GT1 = 0;
0x021A	0x9C1C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,269 :: 		GT2 = 0;
0x021C	0x981C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,270 :: 		}
L_FSM35:
L_FSM32:
L_FSM28:
;FIRMWARE_SYA_ver_1_4_0.c,271 :: 		if(1 == sn_NegEdge_2){
0x021E	0xA41C      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x0220	0xD003      	BRA         L_FSM36
;FIRMWARE_SYA_ver_1_4_0.c,272 :: 		next_state = s7;
0x0222	0x0E07      	MOVLW       7
0x0224	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,273 :: 		}
0x0226	0xD005      	BRA         L_FSM37
L_FSM36:
;FIRMWARE_SYA_ver_1_4_0.c,274 :: 		else if(1 == sn_PosEdge_3){
0x0228	0xA21C      	BTFSS       _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
0x022A	0xD003      	BRA         L_FSM38
;FIRMWARE_SYA_ver_1_4_0.c,275 :: 		next_state = s5;
0x022C	0x0E05      	MOVLW       5
0x022E	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,276 :: 		}
0x0230	0xD000      	BRA         L_FSM39
L_FSM38:
;FIRMWARE_SYA_ver_1_4_0.c,278 :: 		}
L_FSM39:
L_FSM37:
;FIRMWARE_SYA_ver_1_4_0.c,279 :: 		break;
0x0232	0xD06C      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,280 :: 		case s5:
L_FSM40:
;FIRMWARE_SYA_ver_1_4_0.c,281 :: 		M1 = 1;
0x0234	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_4_0.c,282 :: 		M2 = 1;
0x0236	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_4_0.c,283 :: 		M3 = 1;
0x0238	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_4_0.c,284 :: 		if(1 == sn_NegEdge_3){
0x023A	0xAE1C      	BTFSS       _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
0x023C	0xD003      	BRA         L_FSM41
;FIRMWARE_SYA_ver_1_4_0.c,285 :: 		next_state = s6;
0x023E	0x0E06      	MOVLW       6
0x0240	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,286 :: 		}
0x0242	0xD000      	BRA         L_FSM42
L_FSM41:
;FIRMWARE_SYA_ver_1_4_0.c,288 :: 		}
L_FSM42:
;FIRMWARE_SYA_ver_1_4_0.c,289 :: 		break;
0x0244	0xD063      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,290 :: 		case s6:
L_FSM43:
;FIRMWARE_SYA_ver_1_4_0.c,291 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x0246	0xAC1C      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0248	0xD00A      	BRA         L_FSM46
0x024A	0xB81C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x024C	0xD008      	BRA         L_FSM46
0x024E	0xBA1C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0250	0xD006      	BRA         L_FSM46
L__FSM79:
;FIRMWARE_SYA_ver_1_4_0.c,292 :: 		GT2 = 1;
0x0252	0x881C      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,293 :: 		GT3 = 0;
0x0254	0x9A1C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,294 :: 		GT1 = 0;
0x0256	0x9C1C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,295 :: 		next_state = s4;
0x0258	0x0E04      	MOVLW       4
0x025A	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,296 :: 		}
0x025C	0xD018      	BRA         L_FSM47
L_FSM46:
;FIRMWARE_SYA_ver_1_4_0.c,297 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x025E	0xA81C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0260	0xD00A      	BRA         L_FSM50
0x0262	0xBC1C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x0264	0xD008      	BRA         L_FSM50
0x0266	0xBA1C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0268	0xD006      	BRA         L_FSM50
L__FSM78:
;FIRMWARE_SYA_ver_1_4_0.c,298 :: 		GT2 = 0;
0x026A	0x981C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,299 :: 		GT1 = 0;
0x026C	0x9C1C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,300 :: 		GT3 = 1;
0x026E	0x8A1C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,301 :: 		next_state = s4;
0x0270	0x0E04      	MOVLW       4
0x0272	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,302 :: 		}
0x0274	0xD00C      	BRA         L_FSM51
L_FSM50:
;FIRMWARE_SYA_ver_1_4_0.c,303 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x0276	0xAA1C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0278	0xD00A      	BRA         L_FSM54
0x027A	0xBC1C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x027C	0xD008      	BRA         L_FSM54
0x027E	0xB81C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0280	0xD006      	BRA         L_FSM54
L__FSM77:
;FIRMWARE_SYA_ver_1_4_0.c,304 :: 		GT1 = 1;
0x0282	0x8C1C      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_4_0.c,305 :: 		GT2 = 0;
0x0284	0x981C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_4_0.c,306 :: 		GT3 = 0;
0x0286	0x9A1C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_4_0.c,307 :: 		next_state = s4;
0x0288	0x0E04      	MOVLW       4
0x028A	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,308 :: 		}
0x028C	0xD000      	BRA         L_FSM55
L_FSM54:
;FIRMWARE_SYA_ver_1_4_0.c,310 :: 		}
L_FSM55:
L_FSM51:
L_FSM47:
;FIRMWARE_SYA_ver_1_4_0.c,311 :: 		break;
0x028E	0xD03E      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,312 :: 		case s7:
L_FSM56:
;FIRMWARE_SYA_ver_1_4_0.c,313 :: 		clock0 = 0;
0x0290	0x6A26      	CLRF        _clock0 
0x0292	0x6A27      	CLRF        _clock0+1 
;FIRMWARE_SYA_ver_1_4_0.c,314 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x0294	0xAC1C      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0296	0xD007      	BRA         L_FSM59
0x0298	0xB81C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x029A	0xD005      	BRA         L_FSM59
0x029C	0xBA1C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x029E	0xD003      	BRA         L_FSM59
L__FSM76:
;FIRMWARE_SYA_ver_1_4_0.c,315 :: 		next_state = s2;
0x02A0	0x0E02      	MOVLW       2
0x02A2	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,316 :: 		}
0x02A4	0xD011      	BRA         L_FSM60
L_FSM59:
;FIRMWARE_SYA_ver_1_4_0.c,317 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x02A6	0xA81C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x02A8	0xD007      	BRA         L_FSM63
0x02AA	0xBC1C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x02AC	0xD005      	BRA         L_FSM63
0x02AE	0xBA1C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x02B0	0xD003      	BRA         L_FSM63
L__FSM75:
;FIRMWARE_SYA_ver_1_4_0.c,318 :: 		next_state = s3;
0x02B2	0x0E03      	MOVLW       3
0x02B4	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,319 :: 		}
0x02B6	0xD008      	BRA         L_FSM64
L_FSM63:
;FIRMWARE_SYA_ver_1_4_0.c,320 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x02B8	0xAA1C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x02BA	0xD006      	BRA         L_FSM67
0x02BC	0xBC1C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x02BE	0xD004      	BRA         L_FSM67
0x02C0	0xB81C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x02C2	0xD002      	BRA         L_FSM67
L__FSM74:
;FIRMWARE_SYA_ver_1_4_0.c,321 :: 		next_state = s1;
0x02C4	0x0E01      	MOVLW       1
0x02C6	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,322 :: 		}
L_FSM67:
L_FSM64:
L_FSM60:
;FIRMWARE_SYA_ver_1_4_0.c,323 :: 		break;
0x02C8	0xD021      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,324 :: 		default:
L_FSM68:
;FIRMWARE_SYA_ver_1_4_0.c,325 :: 		current_state = s0;
0x02CA	0x6A1E      	CLRF        _current_state 
;FIRMWARE_SYA_ver_1_4_0.c,326 :: 		next_state = s0;
0x02CC	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_4_0.c,327 :: 		break;
0x02CE	0xD01E      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_4_0.c,328 :: 		}
L_FSM10:
0x02D0	0x501E      	MOVF        _current_state, 0 
0x02D2	0x0A00      	XORLW       0
0x02D4	0xB4D8      	BTFSC       STATUS, 2 
0x02D6	0xD756      	BRA         L_FSM12
0x02D8	0x501E      	MOVF        _current_state, 0 
0x02DA	0x0A01      	XORLW       1
0x02DC	0xB4D8      	BTFSC       STATUS, 2 
0x02DE	0xD75B      	BRA         L_FSM15
0x02E0	0x501E      	MOVF        _current_state, 0 
0x02E2	0x0A02      	XORLW       2
0x02E4	0xB4D8      	BTFSC       STATUS, 2 
0x02E6	0xD762      	BRA         L_FSM18
0x02E8	0x501E      	MOVF        _current_state, 0 
0x02EA	0x0A03      	XORLW       3
0x02EC	0xB4D8      	BTFSC       STATUS, 2 
0x02EE	0xD769      	BRA         L_FSM21
0x02F0	0x501E      	MOVF        _current_state, 0 
0x02F2	0x0A04      	XORLW       4
0x02F4	0xB4D8      	BTFSC       STATUS, 2 
0x02F6	0xD770      	BRA         L_FSM24
0x02F8	0x501E      	MOVF        _current_state, 0 
0x02FA	0x0A05      	XORLW       5
0x02FC	0xE09B      	BZ          L_FSM40
0x02FE	0x501E      	MOVF        _current_state, 0 
0x0300	0x0A06      	XORLW       6
0x0302	0xE0A1      	BZ          L_FSM43
0x0304	0x501E      	MOVF        _current_state, 0 
0x0306	0x0A07      	XORLW       7
0x0308	0xE0C3      	BZ          L_FSM56
0x030A	0xD7DF      	BRA         L_FSM68
L_FSM11:
;FIRMWARE_SYA_ver_1_4_0.c,330 :: 		}
L_end_FSM:
0x030C	0x0012      	RETURN      0
; end of _FSM
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x030E	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x0310	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x0312	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x0316	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x0318	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x031A	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x031C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x031E	0x0012      	RETURN      0
; end of ___CC2DW
_InitSystems:
;FIRMWARE_SYA_ver_1_4_0.c,363 :: 		void InitSystems(){
;FIRMWARE_SYA_ver_1_4_0.c,364 :: 		Delay_ms(1000);
0x0320	0x0E1A      	MOVLW       26
0x0322	0x6E0B      	MOVWF       R11, 0
0x0324	0x0E5E      	MOVLW       94
0x0326	0x6E0C      	MOVWF       R12, 0
0x0328	0x0E6E      	MOVLW       110
0x032A	0x6E0D      	MOVWF       R13, 0
L_InitSystems73:
0x032C	0x2E0D      	DECFSZ      R13, 1, 0
0x032E	0xD7FE      	BRA         L_InitSystems73
0x0330	0x2E0C      	DECFSZ      R12, 1, 0
0x0332	0xD7FC      	BRA         L_InitSystems73
0x0334	0x2E0B      	DECFSZ      R11, 1, 0
0x0336	0xD7FA      	BRA         L_InitSystems73
0x0338	0x0000      	NOP
;FIRMWARE_SYA_ver_1_4_0.c,365 :: 		InitInterrupt();
0x033A	0xDECD      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_1_4_0.c,366 :: 		InitMCU();
0x033C	0xDEE6      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_1_4_0.c,367 :: 		}
L_end_InitSystems:
0x033E	0x0012      	RETURN      0
; end of _InitSystems
_main:
0x0340	0x6A1A      	CLRF        _counter 
0x0342	0x6A1B      	CLRF        27 
;FIRMWARE_SYA_ver_1_4_0.c,172 :: 		void main(){
;FIRMWARE_SYA_ver_1_4_0.c,174 :: 		InitSystems();
0x0344	0xDFED      	RCALL       _InitSystems
;FIRMWARE_SYA_ver_1_4_0.c,176 :: 		while(1){
L_main8:
;FIRMWARE_SYA_ver_1_4_0.c,178 :: 		current_state = next_state; // Maybe move this with Events
0x0346	0xF01EC01D  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_1_4_0.c,179 :: 		FSM();
0x034A	0xDF1B      	RCALL       _FSM
;FIRMWARE_SYA_ver_1_4_0.c,180 :: 		}
0x034C	0xD7FC      	BRA         L_main8
;FIRMWARE_SYA_ver_1_4_0.c,182 :: 		}
L_end_main:
0x034E	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [206]    _interrupt
0x00D6      [52]    _InitInterrupt
0x010A      [68]    _InitMCU
0x014E      [52]    _Events
0x0182     [396]    _FSM
0x030E      [18]    ___CC2DW
0x0320      [32]    _InitSystems
0x0340      [16]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001A       [2]    _counter
0x001C       [0]    _GT2
0x001C       [0]    _GT1
0x001C       [0]    _sn_NegEdge_1
0x001C       [0]    _sn_PosEdge_3
0x001C       [0]    _sn_PosEdge_1
0x001C       [0]    _sn_NegEdge_2
0x001C       [0]    _GT3
0x001C       [0]    _sn_NegEdge_3
0x001D       [1]    _next_state
0x001E       [1]    _current_state
0x001F       [0]    _sn_PosEdge_2
0x0020       [2]    _interruptC0
0x0022       [2]    _interruptC2
0x0024       [2]    _interruptC1
0x0026       [2]    _clock0
0x0EC2       [1]    PIE0
0x0EC6       [1]    PIE4
0x0ECA       [1]    PIR0
0x0ECE       [1]    PIR4
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F21       [1]    ANSELC
0x0F22       [1]    INLVLD
0x0F25       [1]    WPUD
0x0F26       [1]    ANSELD
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F60       [1]    ADCON0
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F86       [1]    LATD
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8B       [1]    TRISD
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F90       [1]    PORTD
0x0F91       [1]    PORTE
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
