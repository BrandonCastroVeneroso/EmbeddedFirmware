;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/6/2024 2:30:53 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF68  	GOTO        208
_interrupt:
;FIRMWARE_SYA_ver_0_8_9.c,69 :: 		void interrupt(){
;FIRMWARE_SYA_ver_0_8_9.c,83 :: 		if((IOCCF.B0 == 1) && (IOCIE_bit == 1)){
0x0008	0x010F      	MOVLB       15
0x000A	0xA11A      	BTFSS       IOCCF, 0, 1
0x000C	0xD006      	BRA         L_interrupt2
0x000E	0x010E      	MOVLB       14
0x0010	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0012	0xD003      	BRA         L_interrupt2
L__interrupt113:
;FIRMWARE_SYA_ver_0_8_9.c,84 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0014	0x010F      	MOVLB       15
0x0016	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_0_8_9.c,85 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0018	0x8017      	BSF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_8_9.c,88 :: 		}
L_interrupt2:
0x001A	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_0_8_9.c,90 :: 		if((IOCCF.B1 == 1) && (IOCIE_bit == 1)){
0x001C	0xA31A      	BTFSS       IOCCF, 1, 1
0x001E	0xD006      	BRA         L_interrupt5
0x0020	0x010E      	MOVLB       14
0x0022	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0024	0xD003      	BRA         L_interrupt5
L__interrupt112:
;FIRMWARE_SYA_ver_0_8_9.c,91 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0026	0x010F      	MOVLB       15
0x0028	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_0_8_9.c,92 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x002A	0x8A16      	BSF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,95 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_0_8_9.c,97 :: 		}
L_end_interrupt:
L__interrupt121:
0x002C	0x0011      	RETFIE      1
; end of _interrupt
_InitInterrupt:
;FIRMWARE_SYA_ver_0_8_9.c,505 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_0_8_9.c,507 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x002E	0x0E30      	MOVLW       48
0x0030	0x010E      	MOVLB       14
0x0032	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_0_8_9.c,508 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x0034	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_0_8_9.c,509 :: 		T0CON0 = 0x90;
0x0036	0x0E90      	MOVLW       144
0x0038	0x6ED5      	MOVWF       T0CON0 
;FIRMWARE_SYA_ver_0_8_9.c,510 :: 		T0CON1 = 0x44;
0x003A	0x0E44      	MOVLW       68
0x003C	0x6ED6      	MOVWF       T0CON1 
;FIRMWARE_SYA_ver_0_8_9.c,511 :: 		TMR0H = 0x63;
0x003E	0x0E63      	MOVLW       99
0x0040	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_0_8_9.c,512 :: 		TMR0L = 0xC0;
0x0042	0x0EC0      	MOVLW       192
0x0044	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_0_8_9.c,513 :: 		IOCCN = 0x03;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x0046	0x0E03      	MOVLW       3
0x0048	0x010F      	MOVLB       15
0x004A	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_0_8_9.c,514 :: 		IOCCP = 0x03;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x004C	0x0E03      	MOVLW       3
0x004E	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_0_8_9.c,515 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x0050	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_0_8_9.c,516 :: 		PIR0.TMR0IF = 0;
0x0052	0x010E      	MOVLB       14
0x0054	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_0_8_9.c,517 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x0056	0x0EC0      	MOVLW       192
0x0058	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_0_8_9.c,519 :: 		}
L_end_InitInterrupt:
0x005A	0x0012      	RETURN      0
; end of _InitInterrupt
_Events:
;FIRMWARE_SYA_ver_0_8_9.c,465 :: 		void Events(){
;FIRMWARE_SYA_ver_0_8_9.c,467 :: 		if(interruptC0){
0x005C	0xA017      	BTFSS       _interruptC0, BitPos(_interruptC0+0) 
0x005E	0xD009      	BRA         L_Events105
;FIRMWARE_SYA_ver_0_8_9.c,469 :: 		if(SWITCH1 == 1){
0x0060	0xA08F      	BTFSS       PORTC, 0 
0x0062	0xD003      	BRA         L_Events106
;FIRMWARE_SYA_ver_0_8_9.c,471 :: 		sn_PosEdge_1 = 0;
0x0064	0x9217      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,472 :: 		sn_NegEdge_1 = 1;
0x0066	0x8E16      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,473 :: 		}
0x0068	0xD002      	BRA         L_Events107
L_Events106:
;FIRMWARE_SYA_ver_0_8_9.c,477 :: 		sn_PosEdge_1 = 1;
0x006A	0x8217      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,478 :: 		sn_NegEdge_1 = 0;
0x006C	0x9E16      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,479 :: 		}
L_Events107:
;FIRMWARE_SYA_ver_0_8_9.c,480 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x006E	0x9017      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_8_9.c,481 :: 		}
0x0070	0xD00A      	BRA         L_Events108
L_Events105:
;FIRMWARE_SYA_ver_0_8_9.c,483 :: 		else if(interruptC1){
0x0072	0xAA16      	BTFSS       _interruptC1, BitPos(_interruptC1+0) 
0x0074	0xD008      	BRA         L_Events109
;FIRMWARE_SYA_ver_0_8_9.c,485 :: 		if(SWITCH2 == 1){
0x0076	0xA28F      	BTFSS       PORTC, 1 
0x0078	0xD003      	BRA         L_Events110
;FIRMWARE_SYA_ver_0_8_9.c,487 :: 		sn_PosEdge_2 = 0;
0x007A	0x9C16      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,488 :: 		sn_NegEdge_2 = 1;
0x007C	0x8216      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,489 :: 		}
0x007E	0xD002      	BRA         L_Events111
L_Events110:
;FIRMWARE_SYA_ver_0_8_9.c,493 :: 		sn_PosEdge_2 = 1;
0x0080	0x8C16      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,494 :: 		sn_NegEdge_2 = 0;
0x0082	0x9216      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,495 :: 		}
L_Events111:
;FIRMWARE_SYA_ver_0_8_9.c,496 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x0084	0x9A16      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,497 :: 		}
L_Events109:
L_Events108:
;FIRMWARE_SYA_ver_0_8_9.c,499 :: 		}
L_end_Events:
0x0086	0x0012      	RETURN      0
; end of _Events
_InitMCU:
;FIRMWARE_SYA_ver_0_8_9.c,525 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_0_8_9.c,527 :: 		ADCON1 = 0x0F; // Desactivamos ADC
0x0088	0x0E0F      	MOVLW       15
0x008A	0x010F      	MOVLB       15
0x008C	0x6F59      	MOVWF       ADCON1, 1
;FIRMWARE_SYA_ver_0_8_9.c,528 :: 		ANSELC = 0;    // Ponemos en modo digital al puerto C
0x008E	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_0_8_9.c,529 :: 		ANSELE = 0;    //                ''                 E
0x0090	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_0_8_9.c,530 :: 		ANSELA = 0;    //                ''                 A
0x0092	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_0_8_9.c,532 :: 		TRISC = 0x03;  // Ponemos en modo de entrada a C0 y C1, los demas como salida
0x0094	0x0E03      	MOVLW       3
0x0096	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_0_8_9.c,533 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x0098	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_0_8_9.c,534 :: 		TRISA = 0x80;  //                ''                A
0x009A	0x0E80      	MOVLW       128
0x009C	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_0_8_9.c,536 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x009E	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_0_8_9.c,537 :: 		PORTE = 0x00;  //                ''             E
0x00A0	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_0_8_9.c,538 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x00A2	0x0E10      	MOVLW       16
0x00A4	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_0_8_9.c,540 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x00A6	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_0_8_9.c,541 :: 		LATE = 0x00;   //                ''                      E
0x00A8	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_0_8_9.c,542 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x00AA	0x0E10      	MOVLW       16
0x00AC	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_0_8_9.c,544 :: 		WPUC = 0x03;   // Activamos el pull-up interno de C0 y C1
0x00AE	0x0E03      	MOVLW       3
0x00B0	0x6F20      	MOVWF       WPUC, 1
;FIRMWARE_SYA_ver_0_8_9.c,545 :: 		INLVLC = 0x03; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x00B2	0x0E03      	MOVLW       3
0x00B4	0x6F1D      	MOVWF       INLVLC, 1
;FIRMWARE_SYA_ver_0_8_9.c,546 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x00B6	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_0_8_9.c,547 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x00B8	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_0_8_9.c,549 :: 		once = TRUE;   // Seteo de la condicion para lazo
0x00BA	0x8617      	BSF         _once, BitPos(_once+0) 
;FIRMWARE_SYA_ver_0_8_9.c,551 :: 		}
L_end_InitMCU:
0x00BC	0x0012      	RETURN      0
; end of _InitMCU
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x00BE	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x00C0	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x00C2	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x00C6	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x00C8	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x00CA	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x00CC	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x00CE	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00D0	0x6A15      	CLRF        _state 
;FIRMWARE_SYA_ver_0_8_9.c,103 :: 		void main(){
;FIRMWARE_SYA_ver_0_8_9.c,105 :: 		InitMCU();       // MCU pin/reg config
0x00D2	0xDFDA      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_0_8_9.c,106 :: 		InitInterrupt(); // MCU interrupt config
0x00D4	0xDFAC      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_0_8_9.c,116 :: 		if(flag_init){
0x00D6	0xA417      	BTFSS       _flag_init, BitPos(_flag_init+0) 
0x00D8	0xD004      	BRA         L_main6
;FIRMWARE_SYA_ver_0_8_9.c,117 :: 		GT1 = 1;
0x00DA	0x8816      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,118 :: 		GT2 = 0;
0x00DC	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,119 :: 		GT3 = 0;
0x00DE	0x9416      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_9.c,120 :: 		flag_init = 0;
0x00E0	0x9417      	BCF         _flag_init, BitPos(_flag_init+0) 
;FIRMWARE_SYA_ver_0_8_9.c,121 :: 		}
L_main6:
;FIRMWARE_SYA_ver_0_8_9.c,123 :: 		do{
L_main7:
;FIRMWARE_SYA_ver_0_8_9.c,124 :: 		Events(); // Initialize
0x00E2	0xDFBC      	RCALL       _Events
;FIRMWARE_SYA_ver_0_8_9.c,125 :: 		switch(state){
0x00E4	0xD076      	BRA         L_main10
;FIRMWARE_SYA_ver_0_8_9.c,126 :: 		case 0: // S0 - Todo apagado
L_main12:
;FIRMWARE_SYA_ver_0_8_9.c,127 :: 		M1 = 0;
0x00E6	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_9.c,128 :: 		M2 = 0;
0x00E8	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_9.c,129 :: 		M3 = 0;
0x00EA	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_9.c,130 :: 		sn_GoTo = 0;
0x00EC	0x9616      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_9.c,132 :: 		if(sn_PosEdge_1){
0x00EE	0xA217      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x00F0	0xD003      	BRA         L_main13
;FIRMWARE_SYA_ver_0_8_9.c,133 :: 		state = 6; // Si, pasamos a estado 6
0x00F2	0x0E06      	MOVLW       6
0x00F4	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,134 :: 		}
0x00F6	0xD000      	BRA         L_main14
L_main13:
;FIRMWARE_SYA_ver_0_8_9.c,137 :: 		}
L_main14:
;FIRMWARE_SYA_ver_0_8_9.c,138 :: 		break;
0x00F8	0xD081      	BRA         L_main11
;FIRMWARE_SYA_ver_0_8_9.c,139 :: 		case 1: // S1 - Grupo de trabajo 1 110
L_main15:
;FIRMWARE_SYA_ver_0_8_9.c,140 :: 		M1 = 1;
0x00FA	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_9.c,141 :: 		M2 = 1;
0x00FC	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_9.c,142 :: 		M3 = 0;
0x00FE	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_9.c,143 :: 		GT1 = 1;
0x0100	0x8816      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,144 :: 		GT2 = 0; // Si comentarizo esto se rompe el codigo
0x0102	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,145 :: 		GT3 = 0; // (why tho???)
0x0104	0x9416      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_9.c,147 :: 		if(sn_NegEdge_1){
0x0106	0xAE16      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0108	0xD002      	BRA         L_main16
;FIRMWARE_SYA_ver_0_8_9.c,149 :: 		state = 0;
0x010A	0x6A15      	CLRF        _state 
;FIRMWARE_SYA_ver_0_8_9.c,151 :: 		}
0x010C	0xD005      	BRA         L_main17
L_main16:
;FIRMWARE_SYA_ver_0_8_9.c,153 :: 		else if(sn_PosEdge_2){
0x010E	0xAC16      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0110	0xD003      	BRA         L_main18
;FIRMWARE_SYA_ver_0_8_9.c,155 :: 		state = 4;
0x0112	0x0E04      	MOVLW       4
0x0114	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,156 :: 		}
0x0116	0xD000      	BRA         L_main19
L_main18:
;FIRMWARE_SYA_ver_0_8_9.c,161 :: 		}
L_main19:
L_main17:
;FIRMWARE_SYA_ver_0_8_9.c,162 :: 		break;
0x0118	0xD071      	BRA         L_main11
;FIRMWARE_SYA_ver_0_8_9.c,163 :: 		case 2: // S2 - Grupo de trabajo 2 011
L_main20:
;FIRMWARE_SYA_ver_0_8_9.c,164 :: 		M1 = 0;
0x011A	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_9.c,165 :: 		M2 = 1;
0x011C	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_9.c,166 :: 		M3 = 1;
0x011E	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_9.c,167 :: 		GT1 = 0; // Trouble
0x0120	0x9816      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,168 :: 		GT2 = 1;
0x0122	0x8016      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,169 :: 		GT3 = 0; // Here comes trouble
0x0124	0x9416      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_9.c,171 :: 		if(sn_NegEdge_1){
0x0126	0xAE16      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0128	0xD002      	BRA         L_main21
;FIRMWARE_SYA_ver_0_8_9.c,173 :: 		state = 0;
0x012A	0x6A15      	CLRF        _state 
;FIRMWARE_SYA_ver_0_8_9.c,174 :: 		}
0x012C	0xD005      	BRA         L_main22
L_main21:
;FIRMWARE_SYA_ver_0_8_9.c,176 :: 		else if(sn_PosEdge_2){
0x012E	0xAC16      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0130	0xD003      	BRA         L_main23
;FIRMWARE_SYA_ver_0_8_9.c,178 :: 		state = 4;
0x0132	0x0E04      	MOVLW       4
0x0134	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,179 :: 		}
0x0136	0xD000      	BRA         L_main24
L_main23:
;FIRMWARE_SYA_ver_0_8_9.c,184 :: 		}
L_main24:
L_main22:
;FIRMWARE_SYA_ver_0_8_9.c,185 :: 		break;
0x0138	0xD061      	BRA         L_main11
;FIRMWARE_SYA_ver_0_8_9.c,186 :: 		case 3: // S3 - Grupo de trabajo 3 101
L_main25:
;FIRMWARE_SYA_ver_0_8_9.c,187 :: 		M1 = 1;
0x013A	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_9.c,188 :: 		M2 = 0;
0x013C	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_9.c,189 :: 		M3 = 1;
0x013E	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_9.c,190 :: 		GT1 = 0; // Way way more
0x0140	0x9816      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,191 :: 		GT2 = 0; // trouble
0x0142	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,192 :: 		GT3 = 1;
0x0144	0x8416      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_9.c,194 :: 		if(sn_NegEdge_1){
0x0146	0xAE16      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0148	0xD002      	BRA         L_main26
;FIRMWARE_SYA_ver_0_8_9.c,196 :: 		state = 0;
0x014A	0x6A15      	CLRF        _state 
;FIRMWARE_SYA_ver_0_8_9.c,197 :: 		}
0x014C	0xD005      	BRA         L_main27
L_main26:
;FIRMWARE_SYA_ver_0_8_9.c,199 :: 		else if(sn_PosEdge_2){
0x014E	0xAC16      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0150	0xD003      	BRA         L_main28
;FIRMWARE_SYA_ver_0_8_9.c,201 :: 		state = 4;
0x0152	0x0E04      	MOVLW       4
0x0154	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,202 :: 		}
0x0156	0xD000      	BRA         L_main29
L_main28:
;FIRMWARE_SYA_ver_0_8_9.c,207 :: 		}
L_main29:
L_main27:
;FIRMWARE_SYA_ver_0_8_9.c,208 :: 		break;
0x0158	0xD051      	BRA         L_main11
;FIRMWARE_SYA_ver_0_8_9.c,209 :: 		case 4: // S4 - Grupo de trabajo 4 111
L_main30:
;FIRMWARE_SYA_ver_0_8_9.c,210 :: 		M1 = 1;
0x015A	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_9.c,211 :: 		M2 = 1;
0x015C	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_9.c,212 :: 		M3 = 1;
0x015E	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_9.c,214 :: 		if(sn_NegEdge_1){
0x0160	0xAE16      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0162	0xD002      	BRA         L_main31
;FIRMWARE_SYA_ver_0_8_9.c,215 :: 		state = 0;
0x0164	0x6A15      	CLRF        _state 
;FIRMWARE_SYA_ver_0_8_9.c,216 :: 		}
0x0166	0xD006      	BRA         L_main32
L_main31:
;FIRMWARE_SYA_ver_0_8_9.c,217 :: 		else if(sn_NegEdge_2){
0x0168	0xA216      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x016A	0xD004      	BRA         L_main33
;FIRMWARE_SYA_ver_0_8_9.c,219 :: 		state = 5;
0x016C	0x0E05      	MOVLW       5
0x016E	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,220 :: 		sn_GoTo = 1; // Ponemos en 1 la señal de transicion
0x0170	0x8616      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_9.c,221 :: 		}
0x0172	0xD000      	BRA         L_main34
L_main33:
;FIRMWARE_SYA_ver_0_8_9.c,226 :: 		}
L_main34:
L_main32:
;FIRMWARE_SYA_ver_0_8_9.c,227 :: 		break;
0x0174	0xD043      	BRA         L_main11
;FIRMWARE_SYA_ver_0_8_9.c,228 :: 		case 5: // S5 - Estado de transicion para flanco negativo 2
L_main35:
;FIRMWARE_SYA_ver_0_8_9.c,230 :: 		if((sn_GoTo == 1) && (GT1 == 1)){
0x0176	0xA616      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x0178	0xD005      	BRA         L_main38
0x017A	0xA816      	BTFSS       _GT1, BitPos(_GT1+0) 
0x017C	0xD003      	BRA         L_main38
L__main116:
;FIRMWARE_SYA_ver_0_8_9.c,231 :: 		state = 2;
0x017E	0x0E02      	MOVLW       2
0x0180	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,232 :: 		}
0x0182	0xD00E      	BRA         L_main39
L_main38:
;FIRMWARE_SYA_ver_0_8_9.c,233 :: 		else if((sn_GoTo == 1) && (GT2 == 1)){
0x0184	0xA616      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x0186	0xD005      	BRA         L_main42
0x0188	0xA016      	BTFSS       _GT2, BitPos(_GT2+0) 
0x018A	0xD003      	BRA         L_main42
L__main115:
;FIRMWARE_SYA_ver_0_8_9.c,234 :: 		state = 3;
0x018C	0x0E03      	MOVLW       3
0x018E	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,235 :: 		}
0x0190	0xD007      	BRA         L_main43
L_main42:
;FIRMWARE_SYA_ver_0_8_9.c,236 :: 		else if((sn_GoTo == 1) && (GT3 == 1)){
0x0192	0xA616      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x0194	0xD005      	BRA         L_main46
0x0196	0xA416      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0198	0xD003      	BRA         L_main46
L__main114:
;FIRMWARE_SYA_ver_0_8_9.c,237 :: 		state = 1;
0x019A	0x0E01      	MOVLW       1
0x019C	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,238 :: 		}
0x019E	0xD000      	BRA         L_main47
L_main46:
;FIRMWARE_SYA_ver_0_8_9.c,243 :: 		}
L_main47:
L_main43:
L_main39:
;FIRMWARE_SYA_ver_0_8_9.c,244 :: 		break;
0x01A0	0xD02D      	BRA         L_main11
;FIRMWARE_SYA_ver_0_8_9.c,245 :: 		case 6: // S6 - Estado de transicion para flanco positivo
L_main48:
;FIRMWARE_SYA_ver_0_8_9.c,246 :: 		if(sn_PosEdge_1){
0x01A2	0xA217      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x01A4	0xD015      	BRA         L_main49
;FIRMWARE_SYA_ver_0_8_9.c,248 :: 		if(GT1){
0x01A6	0xA816      	BTFSS       _GT1, BitPos(_GT1+0) 
0x01A8	0xD005      	BRA         L_main50
;FIRMWARE_SYA_ver_0_8_9.c,250 :: 		state = 2;
0x01AA	0x0E02      	MOVLW       2
0x01AC	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,251 :: 		GT2 = 0; // DO NOT
0x01AE	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,252 :: 		GT3 = 0; // DELETE !!!!
0x01B0	0x9416      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_9.c,253 :: 		}
0x01B2	0xD00E      	BRA         L_main51
L_main50:
;FIRMWARE_SYA_ver_0_8_9.c,255 :: 		else if(GT2){
0x01B4	0xA016      	BTFSS       _GT2, BitPos(_GT2+0) 
0x01B6	0xD005      	BRA         L_main52
;FIRMWARE_SYA_ver_0_8_9.c,257 :: 		state = 3;
0x01B8	0x0E03      	MOVLW       3
0x01BA	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,258 :: 		GT1 = 0; // DO NOT
0x01BC	0x9816      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,259 :: 		GT3 = 0; // DELETE !!!!
0x01BE	0x9416      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_9.c,260 :: 		}
0x01C0	0xD007      	BRA         L_main53
L_main52:
;FIRMWARE_SYA_ver_0_8_9.c,262 :: 		else if(GT3){
0x01C2	0xA416      	BTFSS       _GT3, BitPos(_GT3+0) 
0x01C4	0xD005      	BRA         L_main54
;FIRMWARE_SYA_ver_0_8_9.c,264 :: 		state = 1;
0x01C6	0x0E01      	MOVLW       1
0x01C8	0x6E15      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_9.c,265 :: 		GT1 = 0; // DO NOT
0x01CA	0x9816      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_9.c,266 :: 		GT2 = 0; // DELETE !!!!
0x01CC	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_9.c,267 :: 		}
0x01CE	0xD000      	BRA         L_main55
L_main54:
;FIRMWARE_SYA_ver_0_8_9.c,272 :: 		}
L_main55:
L_main53:
L_main51:
;FIRMWARE_SYA_ver_0_8_9.c,273 :: 		}
L_main49:
;FIRMWARE_SYA_ver_0_8_9.c,274 :: 		break;
0x01D0	0xD015      	BRA         L_main11
;FIRMWARE_SYA_ver_0_8_9.c,275 :: 		}
L_main10:
0x01D2	0x5015      	MOVF        _state, 0 
0x01D4	0x0A00      	XORLW       0
0x01D6	0xE087      	BZ          L_main12
0x01D8	0x5015      	MOVF        _state, 0 
0x01DA	0x0A01      	XORLW       1
0x01DC	0xE08E      	BZ          L_main15
0x01DE	0x5015      	MOVF        _state, 0 
0x01E0	0x0A02      	XORLW       2
0x01E2	0xE09B      	BZ          L_main20
0x01E4	0x5015      	MOVF        _state, 0 
0x01E6	0x0A03      	XORLW       3
0x01E8	0xE0A8      	BZ          L_main25
0x01EA	0x5015      	MOVF        _state, 0 
0x01EC	0x0A04      	XORLW       4
0x01EE	0xE0B5      	BZ          L_main30
0x01F0	0x5015      	MOVF        _state, 0 
0x01F2	0x0A05      	XORLW       5
0x01F4	0xE0C0      	BZ          L_main35
0x01F6	0x5015      	MOVF        _state, 0 
0x01F8	0x0A06      	XORLW       6
0x01FA	0xE0D3      	BZ          L_main48
L_main11:
;FIRMWARE_SYA_ver_0_8_9.c,277 :: 		}while(1);
0x01FC	0xD772      	BRA         L_main7
;FIRMWARE_SYA_ver_0_8_9.c,279 :: 		}
L_end_main:
0x01FE	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [38]    _interrupt
0x002E      [46]    _InitInterrupt
0x005C      [44]    _Events
0x0088      [54]    _InitMCU
0x00BE      [18]    ___CC2DW
0x00D0     [304]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _state
0x0016       [0]    _sn_PosEdge_2
0x0016       [0]    _GT1
0x0016       [0]    _sn_NegEdge_1
0x0016       [0]    _sn_NegEdge_2
0x0016       [0]    _sn_GoTo
0x0016       [0]    _GT3
0x0016       [0]    _GT2
0x0016       [0]    _interruptC1
0x0017       [0]    _once
0x0017       [0]    _sn_PosEdge_1
0x0017       [0]    _flag_init
0x0017       [0]    _interruptC0
0x0EC2       [1]    PIE0
0x0EC2       [0]    IOCIE_bit
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F1D       [1]    INLVLC
0x0F20       [1]    WPUC
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
