;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09/02/2024 11:48:12 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF07  	GOTO        526
_interrupt:
;FIRMWARE_SYA_ver_0_8_2.c,63 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;FIRMWARE_SYA_ver_0_8_2.c,64 :: 		temp = PORTC;
0x000C	0xF017CF8F  	MOVFF       PORTC, _temp
0x0010	0x0E00      	MOVLW       0
0x0012	0x6E18      	MOVWF       _temp+1 
;FIRMWARE_SYA_ver_0_8_2.c,65 :: 		temp = temp << 6;
0x0014	0x0E06      	MOVLW       6
0x0016	0x6E00      	MOVWF       R0 
0x0018	0x5000      	MOVF        R0, 0 
L__interrupt58:
0x001A	0xE005      	BZ          L__interrupt59
0x001C	0x3617      	RLCF        _temp, 1 
0x001E	0x9017      	BCF         _temp, 0 
0x0020	0x3618      	RLCF        _temp+1, 1 
0x0022	0x0FFF      	ADDLW       255
0x0024	0xD7FA      	BRA         L__interrupt58
L__interrupt59:
;FIRMWARE_SYA_ver_0_8_2.c,67 :: 		if((IOCCF.B0 == 1) && (IOCIE_bit == 1)){
0x0026	0x010F      	MOVLB       15
0x0028	0xA11A      	BTFSS       IOCCF, 0, 1
0x002A	0xD006      	BRA         L_interrupt2
0x002C	0x010E      	MOVLB       14
0x002E	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0030	0xD003      	BRA         L_interrupt2
L__interrupt51:
;FIRMWARE_SYA_ver_0_8_2.c,68 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0032	0x010F      	MOVLB       15
0x0034	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_0_8_2.c,69 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0036	0x8419      	BSF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_8_2.c,70 :: 		}
L_interrupt2:
0x0038	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_0_8_2.c,72 :: 		if((IOCCF.B1 == 1) && (IOCIE_bit == 1)){
0x003A	0xA31A      	BTFSS       IOCCF, 1, 1
0x003C	0xD006      	BRA         L_interrupt5
0x003E	0x010E      	MOVLB       14
0x0040	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0042	0xD003      	BRA         L_interrupt5
L__interrupt50:
;FIRMWARE_SYA_ver_0_8_2.c,73 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0044	0x010F      	MOVLB       15
0x0046	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_0_8_2.c,74 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0048	0x861A      	BSF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,75 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_0_8_2.c,77 :: 		}
L_end_interrupt:
L__interrupt57:
0x004A	0xF000C015  	MOVFF       21, R0
0x004E	0x0011      	RETFIE      1
; end of _interrupt
_InitInterrupt:
;FIRMWARE_SYA_ver_0_8_2.c,269 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_0_8_2.c,271 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x0050	0x0E30      	MOVLW       48
0x0052	0x010E      	MOVLB       14
0x0054	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_0_8_2.c,272 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x0056	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_0_8_2.c,277 :: 		IOCCN = 0x03;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x0058	0x0E03      	MOVLW       3
0x005A	0x010F      	MOVLB       15
0x005C	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_0_8_2.c,278 :: 		IOCCP = 0x03;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x005E	0x0E03      	MOVLW       3
0x0060	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_0_8_2.c,279 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x0062	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_0_8_2.c,280 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x0064	0x0EC0      	MOVLW       192
0x0066	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_0_8_2.c,282 :: 		}
L_end_InitInterrupt:
0x0068	0x0012      	RETURN      0
; end of _InitInterrupt
_Events:
;FIRMWARE_SYA_ver_0_8_2.c,238 :: 		void Events(){
;FIRMWARE_SYA_ver_0_8_2.c,240 :: 		if(interruptC0){
0x006A	0xA419      	BTFSS       _interruptC0, BitPos(_interruptC0+0) 
0x006C	0xD009      	BRA         L_Events44
;FIRMWARE_SYA_ver_0_8_2.c,241 :: 		if(SWITCH1 == 1){
0x006E	0xA08F      	BTFSS       PORTC, 0 
0x0070	0xD002      	BRA         L_Events45
;FIRMWARE_SYA_ver_0_8_2.c,242 :: 		sn_PosEdge_1 = 0;
0x0072	0x921A      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,243 :: 		sn_NegEdge_1 = 1;
0x0074	0x841A      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,244 :: 		}
L_Events45:
;FIRMWARE_SYA_ver_0_8_2.c,245 :: 		if(SWITCH1 == 0){
0x0076	0xB08F      	BTFSC       PORTC, 0 
0x0078	0xD002      	BRA         L_Events46
;FIRMWARE_SYA_ver_0_8_2.c,246 :: 		sn_PosEdge_1 = 1;
0x007A	0x821A      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,247 :: 		sn_NegEdge_1 = 0;
0x007C	0x941A      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,248 :: 		}
L_Events46:
;FIRMWARE_SYA_ver_0_8_2.c,249 :: 		interruptC0 = 0;
0x007E	0x9419      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_8_2.c,250 :: 		}
L_Events44:
;FIRMWARE_SYA_ver_0_8_2.c,251 :: 		if(interruptC1){
0x0080	0xA61A      	BTFSS       _interruptC1, BitPos(_interruptC1+0) 
0x0082	0xD009      	BRA         L_Events47
;FIRMWARE_SYA_ver_0_8_2.c,252 :: 		if(SWITCH2 == 1){
0x0084	0xA28F      	BTFSS       PORTC, 1 
0x0086	0xD002      	BRA         L_Events48
;FIRMWARE_SYA_ver_0_8_2.c,253 :: 		sn_PosEdge_2 = 0; // Ponemos en 1 la bandera de transicion positiva en SWITCH2
0x0088	0x9E19      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,254 :: 		sn_NegEdge_2 = 1;
0x008A	0x801A      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,255 :: 		}
L_Events48:
;FIRMWARE_SYA_ver_0_8_2.c,256 :: 		if(SWITCH2 == 0){
0x008C	0xB28F      	BTFSC       PORTC, 1 
0x008E	0xD002      	BRA         L_Events49
;FIRMWARE_SYA_ver_0_8_2.c,257 :: 		sn_PosEdge_2 = 1;
0x0090	0x8E19      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,258 :: 		sn_NegEdge_2 = 0; // Ponemos en 1 la bandera de transicion negativa en SWITCH2
0x0092	0x901A      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,259 :: 		}
L_Events49:
;FIRMWARE_SYA_ver_0_8_2.c,260 :: 		interruptC1 = 0;
0x0094	0x961A      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,261 :: 		}
L_Events47:
;FIRMWARE_SYA_ver_0_8_2.c,263 :: 		}
L_end_Events:
0x0096	0x0012      	RETURN      0
; end of _Events
_State:
;FIRMWARE_SYA_ver_0_8_2.c,97 :: 		void State(){
;FIRMWARE_SYA_ver_0_8_2.c,99 :: 		switch(state){
0x0098	0xD07C      	BRA         L_State9
;FIRMWARE_SYA_ver_0_8_2.c,100 :: 		case 0: // S0 - Todo apagado
L_State11:
;FIRMWARE_SYA_ver_0_8_2.c,101 :: 		M1 = 0;
0x009A	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_2.c,102 :: 		M2 = 0;
0x009C	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_2.c,103 :: 		M3 = 0;
0x009E	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_2.c,104 :: 		sn_GoTo = 0;
0x00A0	0x9C19      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,106 :: 		if((GT1 == 0) && (GT2 == 0) && (GT3 == 0)){
0x00A2	0xB219      	BTFSC       _GT1, BitPos(_GT1+0) 
0x00A4	0xD004      	BRA         L_State14
0x00A6	0xB019      	BTFSC       _GT2, BitPos(_GT2+0) 
0x00A8	0xD002      	BRA         L_State14
0x00AA	0xAA19      	BTFSS       _GT3, BitPos(_GT3+0) 
L__State55:
;FIRMWARE_SYA_ver_0_8_2.c,107 :: 		GT3 = 1; // Si, iniciamos en GT3 (para pasar a GT1)
0x00AC	0x8A19      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_2.c,108 :: 		}
L_State14:
;FIRMWARE_SYA_ver_0_8_2.c,110 :: 		if(sn_PosEdge_1){
0x00AE	0xA21A      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x00B0	0xD002      	BRA         L_State15
;FIRMWARE_SYA_ver_0_8_2.c,111 :: 		state = 7; // Si, pasamos a estado 7
0x00B2	0x0E07      	MOVLW       7
0x00B4	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,112 :: 		}
L_State15:
;FIRMWARE_SYA_ver_0_8_2.c,113 :: 		break;
0x00B6	0xD086      	BRA         L_State10
;FIRMWARE_SYA_ver_0_8_2.c,114 :: 		case 1: // S1 - Grupo de trabajo 1 110
L_State16:
;FIRMWARE_SYA_ver_0_8_2.c,115 :: 		M1 = 1;
0x00B8	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_2.c,116 :: 		M2 = 1;
0x00BA	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_2.c,117 :: 		M3 = 0;
0x00BC	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_2.c,118 :: 		GT1 = 1;
0x00BE	0x8219      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,119 :: 		GT2 = 0; // Ponemos en 0 todos los demas GT's
0x00C0	0x9019      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,120 :: 		GT3 = 0; // para alternar en estado 7
0x00C2	0x9A19      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_2.c,121 :: 		sn_GoTo = 0;
0x00C4	0x9C19      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,123 :: 		if(sn_NegEdge_1){
0x00C6	0xA41A      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x00C8	0xD003      	BRA         L_State17
;FIRMWARE_SYA_ver_0_8_2.c,125 :: 		state = 5;
0x00CA	0x0E05      	MOVLW       5
0x00CC	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,126 :: 		sn_GoTo = 1; // Ponemos en 1 la señal de transicion
0x00CE	0x8C19      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,127 :: 		}
L_State17:
;FIRMWARE_SYA_ver_0_8_2.c,129 :: 		if(sn_PosEdge_2){
0x00D0	0xAE19      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x00D2	0xD002      	BRA         L_State18
;FIRMWARE_SYA_ver_0_8_2.c,131 :: 		state = 4;
0x00D4	0x0E04      	MOVLW       4
0x00D6	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,132 :: 		}
L_State18:
;FIRMWARE_SYA_ver_0_8_2.c,133 :: 		break;
0x00D8	0xD075      	BRA         L_State10
;FIRMWARE_SYA_ver_0_8_2.c,134 :: 		case 2: // S2 - Grupo de trabajo 2 011
L_State19:
;FIRMWARE_SYA_ver_0_8_2.c,135 :: 		M1 = 0;
0x00DA	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_2.c,136 :: 		M2 = 1;
0x00DC	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_2.c,137 :: 		M3 = 1;
0x00DE	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_2.c,138 :: 		GT1 = 0; // Ponemos en 0 todos los
0x00E0	0x9219      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,139 :: 		GT2 = 1;
0x00E2	0x8019      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,140 :: 		GT3 = 0; // demas GT's para alternar en estado 7
0x00E4	0x9A19      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_2.c,141 :: 		sn_GoTo = 0;
0x00E6	0x9C19      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,143 :: 		if(sn_NegEdge_1){
0x00E8	0xA41A      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x00EA	0xD003      	BRA         L_State20
;FIRMWARE_SYA_ver_0_8_2.c,145 :: 		state = 5;
0x00EC	0x0E05      	MOVLW       5
0x00EE	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,146 :: 		sn_GoTo = 1; // Ponemos en 1 la señal de transicion
0x00F0	0x8C19      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,147 :: 		}
L_State20:
;FIRMWARE_SYA_ver_0_8_2.c,149 :: 		if(sn_PosEdge_2){
0x00F2	0xAE19      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x00F4	0xD002      	BRA         L_State21
;FIRMWARE_SYA_ver_0_8_2.c,151 :: 		state = 4;
0x00F6	0x0E04      	MOVLW       4
0x00F8	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,152 :: 		}
L_State21:
;FIRMWARE_SYA_ver_0_8_2.c,153 :: 		break;
0x00FA	0xD064      	BRA         L_State10
;FIRMWARE_SYA_ver_0_8_2.c,154 :: 		case 3: // S3 - Grupo de trabajo 3 101
L_State22:
;FIRMWARE_SYA_ver_0_8_2.c,155 :: 		M1 = 1;
0x00FC	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_2.c,156 :: 		M2 = 0;
0x00FE	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_2.c,157 :: 		M3 = 1;
0x0100	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_2.c,158 :: 		GT1 = 0; // Ponemos en 0 todos los demas GT's
0x0102	0x9219      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,159 :: 		GT2 = 0; // para alternar en estado 7
0x0104	0x9019      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,160 :: 		GT3 = 1;
0x0106	0x8A19      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_2.c,161 :: 		sn_GoTo = 0;
0x0108	0x9C19      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,163 :: 		if(sn_NegEdge_1){
0x010A	0xA41A      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x010C	0xD003      	BRA         L_State23
;FIRMWARE_SYA_ver_0_8_2.c,165 :: 		state = 5;
0x010E	0x0E05      	MOVLW       5
0x0110	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,166 :: 		sn_GoTo = 1; // Ponemos en 1 la señal de transicion
0x0112	0x8C19      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,167 :: 		}
L_State23:
;FIRMWARE_SYA_ver_0_8_2.c,169 :: 		if(sn_PosEdge_2){
0x0114	0xAE19      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0116	0xD002      	BRA         L_State24
;FIRMWARE_SYA_ver_0_8_2.c,171 :: 		state = 4;
0x0118	0x0E04      	MOVLW       4
0x011A	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,172 :: 		}
L_State24:
;FIRMWARE_SYA_ver_0_8_2.c,173 :: 		break;
0x011C	0xD053      	BRA         L_State10
;FIRMWARE_SYA_ver_0_8_2.c,174 :: 		case 4: // S4 - Grupo de trabajo 4 111
L_State25:
;FIRMWARE_SYA_ver_0_8_2.c,175 :: 		M1 = 1;
0x011E	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8_2.c,176 :: 		M2 = 1;
0x0120	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8_2.c,177 :: 		M3 = 1;
0x0122	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8_2.c,179 :: 		if(sn_NegEdge_2){
0x0124	0xA01A      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x0126	0xD003      	BRA         L_State26
;FIRMWARE_SYA_ver_0_8_2.c,181 :: 		state = 6;
0x0128	0x0E06      	MOVLW       6
0x012A	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,182 :: 		sn_GoTo = 1; // Ponemos en 1 la señal de transicion
0x012C	0x8C19      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,183 :: 		}
L_State26:
;FIRMWARE_SYA_ver_0_8_2.c,184 :: 		break;
0x012E	0xD04A      	BRA         L_State10
;FIRMWARE_SYA_ver_0_8_2.c,185 :: 		case 5: // S5 - Estado de transicion para flanco negativo 1
L_State27:
;FIRMWARE_SYA_ver_0_8_2.c,187 :: 		if(sn_GoTo){
0x0130	0xBC19      	BTFSC       _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_8_2.c,189 :: 		state = 0;
0x0132	0x6A16      	CLRF        _state 
;FIRMWARE_SYA_ver_0_8_2.c,190 :: 		}
L_State28:
;FIRMWARE_SYA_ver_0_8_2.c,191 :: 		break;
0x0134	0xD047      	BRA         L_State10
;FIRMWARE_SYA_ver_0_8_2.c,192 :: 		case 6: // S6 - Estado de transicion para flanco negativo 2
L_State29:
;FIRMWARE_SYA_ver_0_8_2.c,194 :: 		if(sn_GoTo){
0x0136	0xAC19      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x0138	0xD00C      	BRA         L_State30
;FIRMWARE_SYA_ver_0_8_2.c,196 :: 		if(GT1){
0x013A	0xA219      	BTFSS       _GT1, BitPos(_GT1+0) 
0x013C	0xD002      	BRA         L_State31
;FIRMWARE_SYA_ver_0_8_2.c,198 :: 		state = 2;
0x013E	0x0E02      	MOVLW       2
0x0140	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,199 :: 		}
L_State31:
;FIRMWARE_SYA_ver_0_8_2.c,201 :: 		if(GT2){
0x0142	0xA019      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0144	0xD002      	BRA         L_State32
;FIRMWARE_SYA_ver_0_8_2.c,203 :: 		state = 3;
0x0146	0x0E03      	MOVLW       3
0x0148	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,204 :: 		}
L_State32:
;FIRMWARE_SYA_ver_0_8_2.c,206 :: 		if(GT3){
0x014A	0xAA19      	BTFSS       _GT3, BitPos(_GT3+0) 
0x014C	0xD002      	BRA         L_State33
;FIRMWARE_SYA_ver_0_8_2.c,208 :: 		state = 1;
0x014E	0x0E01      	MOVLW       1
0x0150	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,209 :: 		}
L_State33:
;FIRMWARE_SYA_ver_0_8_2.c,210 :: 		}
L_State30:
;FIRMWARE_SYA_ver_0_8_2.c,211 :: 		break;
0x0152	0xD038      	BRA         L_State10
;FIRMWARE_SYA_ver_0_8_2.c,212 :: 		case 7: // S7 - Estado de transicion para flanco positivo
L_State34:
;FIRMWARE_SYA_ver_0_8_2.c,214 :: 		if((GT1 == 1) && (GT2 == 0) && (GT3 == 0)){
0x0154	0xA219      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0156	0xD008      	BRA         L_State37
0x0158	0xB019      	BTFSC       _GT2, BitPos(_GT2+0) 
0x015A	0xD006      	BRA         L_State37
0x015C	0xBA19      	BTFSC       _GT3, BitPos(_GT3+0) 
0x015E	0xD004      	BRA         L_State37
L__State54:
;FIRMWARE_SYA_ver_0_8_2.c,216 :: 		state = 2;
0x0160	0x0E02      	MOVLW       2
0x0162	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,217 :: 		GT2 = 0; // Apaga la señal de GT1 (pq lo puse?)
0x0164	0x9019      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,218 :: 		GT3 = 0;
0x0166	0x9A19      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_2.c,219 :: 		}
L_State37:
;FIRMWARE_SYA_ver_0_8_2.c,221 :: 		if((GT1 == 0) && (GT2 == 1) && (GT3 == 0)){
0x0168	0xB219      	BTFSC       _GT1, BitPos(_GT1+0) 
0x016A	0xD008      	BRA         L_State40
0x016C	0xA019      	BTFSS       _GT2, BitPos(_GT2+0) 
0x016E	0xD006      	BRA         L_State40
0x0170	0xBA19      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0172	0xD004      	BRA         L_State40
L__State53:
;FIRMWARE_SYA_ver_0_8_2.c,223 :: 		state = 3;
0x0174	0x0E03      	MOVLW       3
0x0176	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,224 :: 		GT1 = 0;
0x0178	0x9219      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,225 :: 		GT3 = 0;
0x017A	0x9A19      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_8_2.c,226 :: 		}
L_State40:
;FIRMWARE_SYA_ver_0_8_2.c,228 :: 		if((GT1 == 0) && (GT2 == 0) && (GT3 == 1)){
0x017C	0xB219      	BTFSC       _GT1, BitPos(_GT1+0) 
0x017E	0xD008      	BRA         L_State43
0x0180	0xB019      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0182	0xD006      	BRA         L_State43
0x0184	0xAA19      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0186	0xD004      	BRA         L_State43
L__State52:
;FIRMWARE_SYA_ver_0_8_2.c,230 :: 		state = 1;
0x0188	0x0E01      	MOVLW       1
0x018A	0x6E16      	MOVWF       _state 
;FIRMWARE_SYA_ver_0_8_2.c,231 :: 		GT1 = 0;
0x018C	0x9219      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_8_2.c,232 :: 		GT2 = 0;
0x018E	0x9019      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_8_2.c,233 :: 		}
L_State43:
;FIRMWARE_SYA_ver_0_8_2.c,234 :: 		}
0x0190	0xD019      	BRA         L_State10
L_State9:
0x0192	0x5016      	MOVF        _state, 0 
0x0194	0x0A00      	XORLW       0
0x0196	0xB4D8      	BTFSC       STATUS, 2 
0x0198	0xD780      	BRA         L_State11
0x019A	0x5016      	MOVF        _state, 0 
0x019C	0x0A01      	XORLW       1
0x019E	0xE08C      	BZ          L_State16
0x01A0	0x5016      	MOVF        _state, 0 
0x01A2	0x0A02      	XORLW       2
0x01A4	0xE09A      	BZ          L_State19
0x01A6	0x5016      	MOVF        _state, 0 
0x01A8	0x0A03      	XORLW       3
0x01AA	0xE0A8      	BZ          L_State22
0x01AC	0x5016      	MOVF        _state, 0 
0x01AE	0x0A04      	XORLW       4
0x01B0	0xE0B6      	BZ          L_State25
0x01B2	0x5016      	MOVF        _state, 0 
0x01B4	0x0A05      	XORLW       5
0x01B6	0xE0BC      	BZ          L_State27
0x01B8	0x5016      	MOVF        _state, 0 
0x01BA	0x0A06      	XORLW       6
0x01BC	0xE0BC      	BZ          L_State29
0x01BE	0x5016      	MOVF        _state, 0 
0x01C0	0x0A07      	XORLW       7
0x01C2	0xE0C8      	BZ          L_State34
L_State10:
;FIRMWARE_SYA_ver_0_8_2.c,236 :: 		}
L_end_State:
0x01C4	0x0012      	RETURN      0
; end of _State
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x01C6	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x01C8	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x01CA	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x01CE	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x01D0	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x01D2	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x01D4	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x01D6	0x0012      	RETURN      0
; end of ___CC2DW
_InitMCU:
;FIRMWARE_SYA_ver_0_8_2.c,288 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_0_8_2.c,290 :: 		ADCON1 = 0x0F; // Desactivamos ADC
0x01D8	0x0E0F      	MOVLW       15
0x01DA	0x010F      	MOVLB       15
0x01DC	0x6F59      	MOVWF       ADCON1, 1
;FIRMWARE_SYA_ver_0_8_2.c,291 :: 		ANSELC = 0;    // Ponemos en modo digital al puerto C
0x01DE	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_0_8_2.c,292 :: 		ANSELE = 0;    //                ''                 E
0x01E0	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_0_8_2.c,293 :: 		ANSELA = 0;    //                ''                 A
0x01E2	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_0_8_2.c,295 :: 		TRISC = 0x03;  // Ponemos en modo de entrada a C0 y C1, los demas como salida
0x01E4	0x0E03      	MOVLW       3
0x01E6	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_0_8_2.c,296 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x01E8	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_0_8_2.c,297 :: 		TRISA = 0x80;  //                ''                A
0x01EA	0x0E80      	MOVLW       128
0x01EC	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_0_8_2.c,299 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x01EE	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_0_8_2.c,300 :: 		PORTE = 0x00;  //                ''             E
0x01F0	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_0_8_2.c,301 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x01F2	0x0E10      	MOVLW       16
0x01F4	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_0_8_2.c,303 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x01F6	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_0_8_2.c,304 :: 		LATE = 0x00;   //                ''                      E
0x01F8	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_0_8_2.c,305 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x01FA	0x0E10      	MOVLW       16
0x01FC	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_0_8_2.c,307 :: 		WPUC = 0x03;   // Activamos el pull-up interno de C0 y C1
0x01FE	0x0E03      	MOVLW       3
0x0200	0x6F20      	MOVWF       WPUC, 1
;FIRMWARE_SYA_ver_0_8_2.c,308 :: 		INLVLC = 0x03; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x0202	0x0E03      	MOVLW       3
0x0204	0x6F1D      	MOVWF       INLVLC, 1
;FIRMWARE_SYA_ver_0_8_2.c,309 :: 		CM1CON0 = 0x00;
0x0206	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_0_8_2.c,310 :: 		CM2CON0 = 0x00;
0x0208	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_0_8_2.c,312 :: 		once = TRUE;   // Seteo de la condicion para lazo
0x020A	0x8819      	BSF         _once, BitPos(_once+0) 
;FIRMWARE_SYA_ver_0_8_2.c,314 :: 		}
L_end_InitMCU:
0x020C	0x0012      	RETURN      0
; end of _InitMCU
_main:
0x020E	0x6A16      	CLRF        _state 
0x0210	0x6A17      	CLRF        _temp 
0x0212	0x6A18      	CLRF        24 
;FIRMWARE_SYA_ver_0_8_2.c,83 :: 		void main(){
;FIRMWARE_SYA_ver_0_8_2.c,85 :: 		InitMCU();       // Configuraciones iniciales del MCU
0x0214	0xDFE1      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_0_8_2.c,86 :: 		InitInterrupt(); //       ''        de interrupciones del MCU
0x0216	0xDF1C      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_0_8_2.c,87 :: 		once = TRUE;     // Seteo de la condicion del lazo
0x0218	0x8819      	BSF         _once, BitPos(_once+0) 
;FIRMWARE_SYA_ver_0_8_2.c,88 :: 		flag_init = 1;
0x021A	0x8619      	BSF         _flag_init, BitPos(_flag_init+0) 
;FIRMWARE_SYA_ver_0_8_2.c,91 :: 		do{
L_main6:
;FIRMWARE_SYA_ver_0_8_2.c,92 :: 		Events(); // Iniciamos las
0x021C	0xDF26      	RCALL       _Events
;FIRMWARE_SYA_ver_0_8_2.c,93 :: 		State();  // funciones
0x021E	0xDF3C      	RCALL       _State
;FIRMWARE_SYA_ver_0_8_2.c,94 :: 		}while(1);
0x0220	0xD7FD      	BRA         L_main6
;FIRMWARE_SYA_ver_0_8_2.c,95 :: 		}
L_end_main:
0x0222	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [72]    _interrupt
0x0050      [26]    _InitInterrupt
0x006A      [46]    _Events
0x0098     [302]    _State
0x01C6      [18]    ___CC2DW
0x01D8      [54]    _InitMCU
0x020E      [22]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _state
0x0017       [2]    _temp
0x0019       [0]    _GT3
0x0019       [0]    _sn_GoTo
0x0019       [0]    _GT2
0x0019       [0]    _GT1
0x0019       [0]    _once
0x0019       [0]    _interruptC0
0x0019       [0]    _sn_PosEdge_2
0x0019       [0]    _flag_init
0x001A       [0]    _interruptC1
0x001A       [0]    _sn_NegEdge_2
0x001A       [0]    _sn_PosEdge_1
0x001A       [0]    _sn_NegEdge_1
0x0EC2       [0]    IOCIE_bit
0x0EC2       [1]    PIE0
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F1D       [1]    INLVLC
0x0F20       [1]    WPUC
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
