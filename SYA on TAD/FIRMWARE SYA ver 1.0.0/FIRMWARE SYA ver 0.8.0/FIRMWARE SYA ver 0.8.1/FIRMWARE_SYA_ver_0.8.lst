;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/02/2024 01:52:59 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFB6  	GOTO        364
_interrupt:
;FIRMWARE_SYA_ver_0_8.c,58 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;FIRMWARE_SYA_ver_0_8.c,59 :: 		temp = PORTC;
0x000C	0xF016CF8F  	MOVFF       PORTC, _temp
0x0010	0x0E00      	MOVLW       0
0x0012	0x6E17      	MOVWF       _temp+1 
;FIRMWARE_SYA_ver_0_8.c,60 :: 		temp = temp << 6;
0x0014	0x0E06      	MOVLW       6
0x0016	0x6E00      	MOVWF       R0 
0x0018	0x5000      	MOVF        R0, 0 
L__interrupt29:
0x001A	0xE005      	BZ          L__interrupt30
0x001C	0x3616      	RLCF        _temp, 1 
0x001E	0x9016      	BCF         _temp, 0 
0x0020	0x3617      	RLCF        _temp+1, 1 
0x0022	0x0FFF      	ADDLW       255
0x0024	0xD7FA      	BRA         L__interrupt29
L__interrupt30:
;FIRMWARE_SYA_ver_0_8.c,72 :: 		if((IOCCF.B0 == 1) && (IOCIE_bit == 1)){
0x0026	0x010F      	MOVLB       15
0x0028	0xA11A      	BTFSS       IOCCF, 0, 1
0x002A	0xD006      	BRA         L_interrupt2
0x002C	0x010E      	MOVLB       14
0x002E	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0030	0xD003      	BRA         L_interrupt2
L__interrupt26:
;FIRMWARE_SYA_ver_0_8.c,73 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0032	0x010F      	MOVLB       15
0x0034	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_0_8.c,74 :: 		interruptC0 = 1;
0x0036	0x861B      	BSF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_8.c,75 :: 		}
L_interrupt2:
0x0038	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_0_8.c,77 :: 		if((IOCCF.B1 == 1) && (IOCIE_bit == 1)){
0x003A	0xA31A      	BTFSS       IOCCF, 1, 1
0x003C	0xD006      	BRA         L_interrupt5
0x003E	0x010E      	MOVLB       14
0x0040	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0042	0xD003      	BRA         L_interrupt5
L__interrupt25:
;FIRMWARE_SYA_ver_0_8.c,78 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0044	0x010F      	MOVLB       15
0x0046	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_0_8.c,79 :: 		interruptC1 = 1;
0x0048	0x801B      	BSF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_8.c,80 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_0_8.c,82 :: 		}
L_end_interrupt:
L__interrupt28:
0x004A	0xF000C015  	MOVFF       21, R0
0x004E	0x0011      	RETFIE      1
; end of _interrupt
_InitInterrupt:
;FIRMWARE_SYA_ver_0_8.c,189 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_0_8.c,191 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x0050	0x0E30      	MOVLW       48
0x0052	0x010E      	MOVLB       14
0x0054	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_0_8.c,192 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x0056	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_0_8.c,197 :: 		IOCCN = 0x03;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x0058	0x0E03      	MOVLW       3
0x005A	0x010F      	MOVLB       15
0x005C	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_0_8.c,198 :: 		IOCCP = 0x03;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x005E	0x0E03      	MOVLW       3
0x0060	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_0_8.c,199 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x0062	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_0_8.c,200 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x0064	0x0EC0      	MOVLW       192
0x0066	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_0_8.c,202 :: 		}
L_end_InitInterrupt:
0x0068	0x0012      	RETURN      0
; end of _InitInterrupt
_Events:
;FIRMWARE_SYA_ver_0_8.c,158 :: 		void Events(){
;FIRMWARE_SYA_ver_0_8.c,160 :: 		if(interruptC0){
0x006A	0xA61B      	BTFSS       _interruptC0, BitPos(_interruptC0+0) 
0x006C	0xD009      	BRA         L_Events19
;FIRMWARE_SYA_ver_0_8.c,161 :: 		if(SWITCH1 == 1){
0x006E	0xA08F      	BTFSS       PORTC, 0 
0x0070	0xD002      	BRA         L_Events20
;FIRMWARE_SYA_ver_0_8.c,162 :: 		PosEdge1 = 0;
0x0072	0x981B      	BCF         _PosEdge1, BitPos(_PosEdge1+0) 
;FIRMWARE_SYA_ver_0_8.c,163 :: 		NegEdge1 = 1;
0x0074	0x841B      	BSF         _NegEdge1, BitPos(_NegEdge1+0) 
;FIRMWARE_SYA_ver_0_8.c,164 :: 		}
L_Events20:
;FIRMWARE_SYA_ver_0_8.c,165 :: 		if(SWITCH1 == 0){
0x0076	0xB08F      	BTFSC       PORTC, 0 
0x0078	0xD002      	BRA         L_Events21
;FIRMWARE_SYA_ver_0_8.c,166 :: 		PosEdge1 = 1;
0x007A	0x881B      	BSF         _PosEdge1, BitPos(_PosEdge1+0) 
;FIRMWARE_SYA_ver_0_8.c,167 :: 		NegEdge1 = 0;
0x007C	0x941B      	BCF         _NegEdge1, BitPos(_NegEdge1+0) 
;FIRMWARE_SYA_ver_0_8.c,168 :: 		}
L_Events21:
;FIRMWARE_SYA_ver_0_8.c,169 :: 		interruptC0 = 0;
0x007E	0x961B      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_8.c,170 :: 		}
L_Events19:
;FIRMWARE_SYA_ver_0_8.c,171 :: 		if(interruptC1){
0x0080	0xA01B      	BTFSS       _interruptC1, BitPos(_interruptC1+0) 
0x0082	0xD009      	BRA         L_Events22
;FIRMWARE_SYA_ver_0_8.c,172 :: 		if(SWITCH2 == 1){
0x0084	0xA28F      	BTFSS       PORTC, 1 
0x0086	0xD002      	BRA         L_Events23
;FIRMWARE_SYA_ver_0_8.c,173 :: 		PosEdge2 = 0; // Ponemos en 1 la bandera de transicion positiva en SWITCH2
0x0088	0x921B      	BCF         _PosEdge2, BitPos(_PosEdge2+0) 
;FIRMWARE_SYA_ver_0_8.c,174 :: 		NegEdge2 = 1;
0x008A	0x8A1B      	BSF         _NegEdge2, BitPos(_NegEdge2+0) 
;FIRMWARE_SYA_ver_0_8.c,175 :: 		}
L_Events23:
;FIRMWARE_SYA_ver_0_8.c,176 :: 		if(SWITCH2 == 0){
0x008C	0xB28F      	BTFSC       PORTC, 1 
0x008E	0xD002      	BRA         L_Events24
;FIRMWARE_SYA_ver_0_8.c,177 :: 		PosEdge2 = 1;
0x0090	0x821B      	BSF         _PosEdge2, BitPos(_PosEdge2+0) 
;FIRMWARE_SYA_ver_0_8.c,178 :: 		NegEdge2 = 0; // Ponemos en 1 la bandera de transicion negativa en SWITCH2
0x0092	0x9A1B      	BCF         _NegEdge2, BitPos(_NegEdge2+0) 
;FIRMWARE_SYA_ver_0_8.c,179 :: 		}
L_Events24:
;FIRMWARE_SYA_ver_0_8.c,180 :: 		interruptC1 = 0;
0x0094	0x901B      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_8.c,181 :: 		}
L_Events22:
;FIRMWARE_SYA_ver_0_8.c,183 :: 		}
L_end_Events:
0x0096	0x0012      	RETURN      0
; end of _Events
_State:
;FIRMWARE_SYA_ver_0_8.c,102 :: 		void State(){
;FIRMWARE_SYA_ver_0_8.c,105 :: 		if(flag_init){
0x0098	0xAE1B      	BTFSS       _flag_init, BitPos(_flag_init+0) 
0x009A	0xD006      	BRA         L_State9
;FIRMWARE_SYA_ver_0_8.c,106 :: 		M1 = 0;
0x009C	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_8.c,107 :: 		M2 = 0;
0x009E	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_8.c,108 :: 		M3 = 0;
0x00A0	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_8.c,109 :: 		last_state = 0;
0x00A2	0x6A19      	CLRF        _last_state 
0x00A4	0x6A1A      	CLRF        _last_state+1 
;FIRMWARE_SYA_ver_0_8.c,110 :: 		flag_init = 0;
0x00A6	0x9E1B      	BCF         _flag_init, BitPos(_flag_init+0) 
;FIRMWARE_SYA_ver_0_8.c,111 :: 		}
L_State9:
;FIRMWARE_SYA_ver_0_8.c,113 :: 		while(PosEdge1){
0x00A8	0xA81B      	BTFSS       _PosEdge1, BitPos(_PosEdge1+0) 
0x00AA	0xD01E      	BRA         L_State11
;FIRMWARE_SYA_ver_0_8.c,115 :: 		if((last_state == 0)){
0x00AC	0x0E00      	MOVLW       0
0x00AE	0x181A      	XORWF       _last_state+1, 0 
0x00B0	0xE102      	BNZ         L__State33
0x00B2	0x0E00      	MOVLW       0
0x00B4	0x1819      	XORWF       _last_state, 0 
L__State33:
0x00B6	0xE104      	BNZ         L_State12
;FIRMWARE_SYA_ver_0_8.c,116 :: 		M1 = 1;
0x00B8	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8.c,117 :: 		M2 = 1;
0x00BA	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8.c,118 :: 		sm_state = 1;
0x00BC	0x0E01      	MOVLW       1
0x00BE	0x6E18      	MOVWF       _sm_state 
;FIRMWARE_SYA_ver_0_8.c,119 :: 		}
L_State12:
;FIRMWARE_SYA_ver_0_8.c,122 :: 		if((last_state == 1)){
0x00C0	0x0E00      	MOVLW       0
0x00C2	0x181A      	XORWF       _last_state+1, 0 
0x00C4	0xE102      	BNZ         L__State34
0x00C6	0x0E01      	MOVLW       1
0x00C8	0x1819      	XORWF       _last_state, 0 
L__State34:
0x00CA	0xE104      	BNZ         L_State13
;FIRMWARE_SYA_ver_0_8.c,123 :: 		M2 = 1;
0x00CC	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_8.c,124 :: 		M3 = 1;
0x00CE	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8.c,125 :: 		sm_state = 2;
0x00D0	0x0E02      	MOVLW       2
0x00D2	0x6E18      	MOVWF       _sm_state 
;FIRMWARE_SYA_ver_0_8.c,126 :: 		}
L_State13:
;FIRMWARE_SYA_ver_0_8.c,129 :: 		if((last_state == 2)){
0x00D4	0x0E00      	MOVLW       0
0x00D6	0x181A      	XORWF       _last_state+1, 0 
0x00D8	0xE102      	BNZ         L__State35
0x00DA	0x0E02      	MOVLW       2
0x00DC	0x1819      	XORWF       _last_state, 0 
L__State35:
0x00DE	0xE104      	BNZ         L_State14
;FIRMWARE_SYA_ver_0_8.c,130 :: 		M1 = 1;
0x00E0	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_8.c,131 :: 		M3 = 1;
0x00E2	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_8.c,132 :: 		sm_state = 3;
0x00E4	0x0E03      	MOVLW       3
0x00E6	0x6E18      	MOVWF       _sm_state 
;FIRMWARE_SYA_ver_0_8.c,133 :: 		}
L_State14:
;FIRMWARE_SYA_ver_0_8.c,135 :: 		}
L_State11:
;FIRMWARE_SYA_ver_0_8.c,138 :: 		if(NegEdge1 == 1){
0x00E8	0xA41B      	BTFSS       _NegEdge1, BitPos(_NegEdge1+0) 
0x00EA	0xD01B      	BRA         L_State15
;FIRMWARE_SYA_ver_0_8.c,139 :: 		M1 = 0;
0x00EC	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_8.c,140 :: 		M2 = 0;
0x00EE	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_8.c,141 :: 		M3 = 0;
0x00F0	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_8.c,142 :: 		if(sm_state == 1){
0x00F2	0x5018      	MOVF        _sm_state, 0 
0x00F4	0x0A01      	XORLW       1
0x00F6	0xE105      	BNZ         L_State16
;FIRMWARE_SYA_ver_0_8.c,143 :: 		last_state = 1;
0x00F8	0x0E01      	MOVLW       1
0x00FA	0x6E19      	MOVWF       _last_state 
0x00FC	0x0E00      	MOVLW       0
0x00FE	0x6E1A      	MOVWF       _last_state+1 
;FIRMWARE_SYA_ver_0_8.c,144 :: 		sm_state = 0;
0x0100	0x6A18      	CLRF        _sm_state 
;FIRMWARE_SYA_ver_0_8.c,145 :: 		}
L_State16:
;FIRMWARE_SYA_ver_0_8.c,146 :: 		if(sm_state == 2){
0x0102	0x5018      	MOVF        _sm_state, 0 
0x0104	0x0A02      	XORLW       2
0x0106	0xE105      	BNZ         L_State17
;FIRMWARE_SYA_ver_0_8.c,147 :: 		last_state = 2;
0x0108	0x0E02      	MOVLW       2
0x010A	0x6E19      	MOVWF       _last_state 
0x010C	0x0E00      	MOVLW       0
0x010E	0x6E1A      	MOVWF       _last_state+1 
;FIRMWARE_SYA_ver_0_8.c,148 :: 		sm_state = 0;
0x0110	0x6A18      	CLRF        _sm_state 
;FIRMWARE_SYA_ver_0_8.c,149 :: 		}
L_State17:
;FIRMWARE_SYA_ver_0_8.c,150 :: 		if(sm_state == 3){
0x0112	0x5018      	MOVF        _sm_state, 0 
0x0114	0x0A03      	XORLW       3
0x0116	0xE105      	BNZ         L_State18
;FIRMWARE_SYA_ver_0_8.c,151 :: 		last_state = 3;
0x0118	0x0E03      	MOVLW       3
0x011A	0x6E19      	MOVWF       _last_state 
0x011C	0x0E00      	MOVLW       0
0x011E	0x6E1A      	MOVWF       _last_state+1 
;FIRMWARE_SYA_ver_0_8.c,152 :: 		sm_state = 0;
0x0120	0x6A18      	CLRF        _sm_state 
;FIRMWARE_SYA_ver_0_8.c,153 :: 		}
L_State18:
;FIRMWARE_SYA_ver_0_8.c,154 :: 		}
L_State15:
;FIRMWARE_SYA_ver_0_8.c,156 :: 		}
L_end_State:
0x0122	0x0012      	RETURN      0
; end of _State
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x0124	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x0126	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x0128	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x012C	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x012E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x0130	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x0132	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x0134	0x0012      	RETURN      0
; end of ___CC2DW
_InitMCU:
;FIRMWARE_SYA_ver_0_8.c,208 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_0_8.c,210 :: 		ADCON1 = 0x0F; // Desactivamos ADC
0x0136	0x0E0F      	MOVLW       15
0x0138	0x010F      	MOVLB       15
0x013A	0x6F59      	MOVWF       ADCON1, 1
;FIRMWARE_SYA_ver_0_8.c,211 :: 		ANSELC = 0;    // Ponemos en modo digital al puerto C
0x013C	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_0_8.c,212 :: 		ANSELE = 0;    //                ''                 E
0x013E	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_0_8.c,213 :: 		ANSELA = 0;    //                ''                 A
0x0140	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_0_8.c,215 :: 		TRISC = 0x03;  // Ponemos en modo de entrada a C0 y C1, los demas como salida
0x0142	0x0E03      	MOVLW       3
0x0144	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_0_8.c,216 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x0146	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_0_8.c,217 :: 		TRISA = 0x80;  //                ''                A
0x0148	0x0E80      	MOVLW       128
0x014A	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_0_8.c,219 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x014C	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_0_8.c,220 :: 		PORTE = 0x00;  //                ''             E
0x014E	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_0_8.c,221 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x0150	0x0E10      	MOVLW       16
0x0152	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_0_8.c,223 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x0154	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_0_8.c,224 :: 		LATE = 0x00;   //                ''                      E
0x0156	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_0_8.c,225 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x0158	0x0E10      	MOVLW       16
0x015A	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_0_8.c,227 :: 		WPUC = 0x03;   // Activamos el pull-up interno de C0 y C1
0x015C	0x0E03      	MOVLW       3
0x015E	0x6F20      	MOVWF       WPUC, 1
;FIRMWARE_SYA_ver_0_8.c,228 :: 		INLVLC = 0x03; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x0160	0x0E03      	MOVLW       3
0x0162	0x6F1D      	MOVWF       INLVLC, 1
;FIRMWARE_SYA_ver_0_8.c,229 :: 		CM1CON0 = 0x00;
0x0164	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_0_8.c,230 :: 		CM2CON0 = 0x00;
0x0166	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_0_8.c,232 :: 		once = TRUE;   // Seteo de la condicion para lazo
0x0168	0x8C1B      	BSF         _once, BitPos(_once+0) 
;FIRMWARE_SYA_ver_0_8.c,234 :: 		}
L_end_InitMCU:
0x016A	0x0012      	RETURN      0
; end of _InitMCU
_main:
0x016C	0x6A16      	CLRF        _temp 
0x016E	0x6A17      	CLRF        23 
0x0170	0x6A18      	CLRF        _sm_state 
0x0172	0x6A19      	CLRF        _last_state 
0x0174	0x6A1A      	CLRF        26 
;FIRMWARE_SYA_ver_0_8.c,88 :: 		void main(){
;FIRMWARE_SYA_ver_0_8.c,90 :: 		InitMCU();       // Configuraciones iniciales del MCU
0x0176	0xDFDF      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_0_8.c,91 :: 		InitInterrupt(); //       ''        de interrupciones del MCU
0x0178	0xDF6B      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_0_8.c,92 :: 		once = TRUE;     // Seteo de la condicion del lazo
0x017A	0x8C1B      	BSF         _once, BitPos(_once+0) 
;FIRMWARE_SYA_ver_0_8.c,93 :: 		flag_init = 1;
0x017C	0x8E1B      	BSF         _flag_init, BitPos(_flag_init+0) 
;FIRMWARE_SYA_ver_0_8.c,96 :: 		do{
L_main6:
;FIRMWARE_SYA_ver_0_8.c,97 :: 		Events();
0x017E	0xDF75      	RCALL       _Events
;FIRMWARE_SYA_ver_0_8.c,98 :: 		State();
0x0180	0xDF8B      	RCALL       _State
;FIRMWARE_SYA_ver_0_8.c,99 :: 		}while(1);
0x0182	0xD7FD      	BRA         L_main6
;FIRMWARE_SYA_ver_0_8.c,100 :: 		}
L_end_main:
0x0184	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [72]    _interrupt
0x0050      [26]    _InitInterrupt
0x006A      [46]    _Events
0x0098     [140]    _State
0x0124      [18]    ___CC2DW
0x0136      [54]    _InitMCU
0x016C      [26]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    R4
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [2]    _temp
0x0018       [1]    _sm_state
0x0019       [2]    _last_state
0x001B       [0]    _PosEdge1
0x001B       [0]    _NegEdge1
0x001B       [0]    _interruptC1
0x001B       [0]    _interruptC0
0x001B       [0]    _PosEdge2
0x001B       [0]    _flag_init
0x001B       [0]    _NegEdge2
0x001B       [0]    _once
0x0EC2       [1]    PIE0
0x0EC2       [0]    IOCIE_bit
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F1D       [1]    INLVLC
0x0F20       [1]    WPUC
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
