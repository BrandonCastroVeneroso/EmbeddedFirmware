;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/19/2024 4:12:55 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF70  	GOTO        224
_interrupt:
;FIRMWARE_SYA_ver_0_9_5.c,69 :: 		void interrupt(){
;FIRMWARE_SYA_ver_0_9_5.c,71 :: 		if(PIR0.TMR0IF){
0x0008	0x010E      	MOVLB       14
0x000A	0xABCA      	BTFSS       PIR0, 5, 1
0x000C	0xD006      	BRA         L_interrupt0
;FIRMWARE_SYA_ver_0_9_5.c,72 :: 		TMR0H = 0x06;      // Timer para cada segundo y medio?
0x000E	0x0E06      	MOVLW       6
0x0010	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_0_9_5.c,73 :: 		TMR0L = 0x00;      //
0x0012	0x6AD3      	CLRF        TMR0L 
;FIRMWARE_SYA_ver_0_9_5.c,74 :: 		PIR0.TMR0IF = 0;
0x0014	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_0_9_5.c,80 :: 		}*/
0x0016	0x4A15      	INFSNZ      _counter, 1 
0x0018	0x2A16      	INCF        _counter+1, 1 
;FIRMWARE_SYA_ver_0_9_5.c,81 :: 		}
L_interrupt0:
;FIRMWARE_SYA_ver_0_9_5.c,83 :: 		if((IOCCF.B0 == 1) && (IOCIE_bit == 1)){
0x001A	0x010F      	MOVLB       15
0x001C	0xA11A      	BTFSS       IOCCF, 0, 1
0x001E	0xD006      	BRA         L_interrupt3
0x0020	0x010E      	MOVLB       14
0x0022	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0024	0xD003      	BRA         L_interrupt3
L__interrupt44:
;FIRMWARE_SYA_ver_0_9_5.c,84 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0026	0x010F      	MOVLB       15
0x0028	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_0_9_5.c,85 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x002A	0x8A17      	BSF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_9_5.c,88 :: 		}
L_interrupt3:
0x002C	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_0_9_5.c,90 :: 		if((IOCCF.B1 == 1) && (IOCIE_bit == 1)){
0x002E	0xA31A      	BTFSS       IOCCF, 1, 1
0x0030	0xD006      	BRA         L_interrupt6
0x0032	0x010E      	MOVLB       14
0x0034	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0036	0xD003      	BRA         L_interrupt6
L__interrupt43:
;FIRMWARE_SYA_ver_0_9_5.c,91 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0038	0x010F      	MOVLB       15
0x003A	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_0_9_5.c,92 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x003C	0x8017      	BSF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,95 :: 		}
L_interrupt6:
;FIRMWARE_SYA_ver_0_9_5.c,97 :: 		}
L_end_interrupt:
L__interrupt46:
0x003E	0x0011      	RETFIE      1
; end of _interrupt
_InitMCU:
;FIRMWARE_SYA_ver_0_9_5.c,286 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_0_9_5.c,288 :: 		ADCON1 = 0x0F; // Desactivamos ADC
0x0040	0x0E0F      	MOVLW       15
0x0042	0x010F      	MOVLB       15
0x0044	0x6F59      	MOVWF       ADCON1, 1
;FIRMWARE_SYA_ver_0_9_5.c,289 :: 		ANSELC = 0;    // Ponemos en modo digital al puerto C
0x0046	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_0_9_5.c,290 :: 		ANSELE = 0;    //                ''                 E
0x0048	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_0_9_5.c,291 :: 		ANSELA = 0;    //                ''                 A
0x004A	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_0_9_5.c,293 :: 		TRISC = 0x03;  // Ponemos en modo de entrada a C0 y C1, los demas como salida
0x004C	0x0E03      	MOVLW       3
0x004E	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_0_9_5.c,294 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x0050	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_0_9_5.c,295 :: 		TRISA = 0x80;  //                ''                A
0x0052	0x0E80      	MOVLW       128
0x0054	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_0_9_5.c,297 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x0056	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_0_9_5.c,298 :: 		PORTE = 0x00;  //                ''             E
0x0058	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_0_9_5.c,299 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x005A	0x0E10      	MOVLW       16
0x005C	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_0_9_5.c,301 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x005E	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_0_9_5.c,302 :: 		LATE = 0x00;   //                ''                      E
0x0060	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_0_9_5.c,303 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x0062	0x0E10      	MOVLW       16
0x0064	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_0_9_5.c,305 :: 		WPUC = 0x03;   // Activamos el pull-up interno de C0 y C1
0x0066	0x0E03      	MOVLW       3
0x0068	0x6F20      	MOVWF       WPUC, 1
;FIRMWARE_SYA_ver_0_9_5.c,306 :: 		INLVLC = 0x03; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x006A	0x0E03      	MOVLW       3
0x006C	0x6F1D      	MOVWF       INLVLC, 1
;FIRMWARE_SYA_ver_0_9_5.c,307 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x006E	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_0_9_5.c,308 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x0070	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_0_9_5.c,310 :: 		}
L_end_InitMCU:
0x0072	0x0012      	RETURN      0
; end of _InitMCU
_Events:
;FIRMWARE_SYA_ver_0_9_5.c,103 :: 		void Events(){
;FIRMWARE_SYA_ver_0_9_5.c,105 :: 		if(interruptC0){
0x0074	0xAA17      	BTFSS       _interruptC0, BitPos(_interruptC0+0) 
0x0076	0xD008      	BRA         L_Events7
;FIRMWARE_SYA_ver_0_9_5.c,107 :: 		if(SWITCH1 == 1){
0x0078	0xA08F      	BTFSS       PORTC, 0 
0x007A	0xD003      	BRA         L_Events8
;FIRMWARE_SYA_ver_0_9_5.c,108 :: 		sn_PosEdge_1 = 0;
0x007C	0x9417      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,109 :: 		sn_NegEdge_1 = 1; // Set se単al de flanco negativo en s1
0x007E	0x8E17      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,110 :: 		}
0x0080	0xD002      	BRA         L_Events9
L_Events8:
;FIRMWARE_SYA_ver_0_9_5.c,112 :: 		sn_PosEdge_1 = 1; // Set se単al de flanco positivo en s1
0x0082	0x8417      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,113 :: 		sn_NegEdge_1 = 0;
0x0084	0x9E17      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,114 :: 		}
L_Events9:
;FIRMWARE_SYA_ver_0_9_5.c,115 :: 		}
0x0086	0xD00C      	BRA         L_Events10
L_Events7:
;FIRMWARE_SYA_ver_0_9_5.c,117 :: 		else if(interruptC1){
0x0088	0xA017      	BTFSS       _interruptC1, BitPos(_interruptC1+0) 
0x008A	0xD008      	BRA         L_Events11
;FIRMWARE_SYA_ver_0_9_5.c,119 :: 		if(SWITCH2 == 1){
0x008C	0xA28F      	BTFSS       PORTC, 1 
0x008E	0xD003      	BRA         L_Events12
;FIRMWARE_SYA_ver_0_9_5.c,120 :: 		sn_PosEdge_2 = 0;
0x0090	0x9217      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,121 :: 		sn_NegEdge_2 = 1; // Set se単al de flanco negativo en s2
0x0092	0x8617      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,122 :: 		}
0x0094	0xD002      	BRA         L_Events13
L_Events12:
;FIRMWARE_SYA_ver_0_9_5.c,124 :: 		sn_PosEdge_2 = 1; // Set se単al de flanco positivo en s2
0x0096	0x8217      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,125 :: 		sn_NegEdge_2 = 0;
0x0098	0x9617      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,126 :: 		}
L_Events13:
;FIRMWARE_SYA_ver_0_9_5.c,127 :: 		}
0x009A	0xD002      	BRA         L_Events14
L_Events11:
;FIRMWARE_SYA_ver_0_9_5.c,129 :: 		interruptC0 = 0;
0x009C	0x9A17      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_9_5.c,130 :: 		interruptC1 = 0;
0x009E	0x9017      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,131 :: 		}
L_Events14:
L_Events10:
;FIRMWARE_SYA_ver_0_9_5.c,132 :: 		return;
;FIRMWARE_SYA_ver_0_9_5.c,133 :: 		}
L_end_Events:
0x00A0	0x0012      	RETURN      0
; end of _Events
_InitInterrupt:
;FIRMWARE_SYA_ver_0_9_5.c,266 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_0_9_5.c,268 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x00A2	0x0E30      	MOVLW       48
0x00A4	0x010E      	MOVLB       14
0x00A6	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_0_9_5.c,269 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x00A8	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_0_9_5.c,270 :: 		T0CON0 = 0x90;  //
0x00AA	0x0E90      	MOVLW       144
0x00AC	0x6ED5      	MOVWF       T0CON0 
;FIRMWARE_SYA_ver_0_9_5.c,271 :: 		T0CON1 = 0x40;  // Configuracion para Timer0, 16 bits, prescaler 1:1
0x00AE	0x0E40      	MOVLW       64
0x00B0	0x6ED6      	MOVWF       T0CON1 
;FIRMWARE_SYA_ver_0_9_5.c,272 :: 		TMR0H = 0x06;   // Usamos el oscilador seleccionado Fosc/4, aprox 1 ms de interrupt @ 20 Mhz
0x00B2	0x0E06      	MOVLW       6
0x00B4	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_0_9_5.c,273 :: 		TMR0L = 0x00;   //
0x00B6	0x6AD3      	CLRF        TMR0L 
;FIRMWARE_SYA_ver_0_9_5.c,274 :: 		IOCCN = 0x03;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x00B8	0x0E03      	MOVLW       3
0x00BA	0x010F      	MOVLB       15
0x00BC	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_0_9_5.c,275 :: 		IOCCP = 0x03;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x00BE	0x0E03      	MOVLW       3
0x00C0	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_0_9_5.c,276 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x00C2	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_0_9_5.c,277 :: 		PIR0.TMR0IF = 0; // Limpiamos bandera de interrupt en Timer0
0x00C4	0x010E      	MOVLB       14
0x00C6	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_0_9_5.c,278 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x00C8	0x0EC0      	MOVLW       192
0x00CA	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_0_9_5.c,280 :: 		}
L_end_InitInterrupt:
0x00CC	0x0012      	RETURN      0
; end of _InitInterrupt
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x00CE	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x00D0	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x00D2	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x00D6	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x00D8	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x00DA	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x00DC	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x00DE	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00E0	0x6A15      	CLRF        _counter 
0x00E2	0x6A16      	CLRF        22 
;FIRMWARE_SYA_ver_0_9_5.c,139 :: 		void main(){
;FIRMWARE_SYA_ver_0_9_5.c,141 :: 		InitInterrupt(); // MCU interrupt config
0x00E4	0xDFDE      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_0_9_5.c,142 :: 		InitMCU();       // MCU pin/reg config
0x00E6	0xDFAC      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_0_9_5.c,144 :: 		while(1){
L_main15:
;FIRMWARE_SYA_ver_0_9_5.c,145 :: 		Events();
0x00E8	0xDFC5      	RCALL       _Events
;FIRMWARE_SYA_ver_0_9_5.c,147 :: 		fsm_state = next_state;
0x00EA	0xF01AC018  	MOVFF       _next_state, _fsm_state
;FIRMWARE_SYA_ver_0_9_5.c,148 :: 		switch(fsm_state){
0x00EE	0xD080      	BRA         L_main17
;FIRMWARE_SYA_ver_0_9_5.c,150 :: 		case 0:
L_main19:
;FIRMWARE_SYA_ver_0_9_5.c,151 :: 		LED = 0; // Idk if this breaks the code or not
0x00F0	0x9883      	BCF         LATA, 4 
;FIRMWARE_SYA_ver_0_9_5.c,153 :: 		if(sn_PosEdge_1 == 1){
0x00F2	0xA417      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x00F4	0xD033      	BRA         L_main20
;FIRMWARE_SYA_ver_0_9_5.c,154 :: 		switch(last_INC){
0x00F6	0xD028      	BRA         L_main21
;FIRMWARE_SYA_ver_0_9_5.c,156 :: 		case 1:
L_main23:
;FIRMWARE_SYA_ver_0_9_5.c,157 :: 		INC1 = 0;
0x00F8	0x9817      	BCF         _INC1, BitPos(_INC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,158 :: 		INC2 = 1; // El siguiente estado en INC es 2
0x00FA	0x821B      	BSF         _INC2, BitPos(_INC2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,159 :: 		INC3 = 0;
0x00FC	0x901B      	BCF         _INC3, BitPos(_INC3+0) 
;FIRMWARE_SYA_ver_0_9_5.c,160 :: 		INC = 2;
0x00FE	0x0E02      	MOVLW       2
0x0100	0x6E1C      	MOVWF       _INC 
0x0102	0x0E00      	MOVLW       0
0x0104	0x6E1D      	MOVWF       _INC+1 
;FIRMWARE_SYA_ver_0_9_5.c,161 :: 		next_state = 1; // Cambia a siguiente estado 1
0x0106	0x0E01      	MOVLW       1
0x0108	0x6E18      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,162 :: 		break;
0x010A	0xD028      	BRA         L_main22
;FIRMWARE_SYA_ver_0_9_5.c,164 :: 		case 2:
L_main24:
;FIRMWARE_SYA_ver_0_9_5.c,165 :: 		INC1 = 0;
0x010C	0x9817      	BCF         _INC1, BitPos(_INC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,166 :: 		INC2 = 0;
0x010E	0x921B      	BCF         _INC2, BitPos(_INC2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,167 :: 		INC3 = 1; // El siguiente estado en INC es 3
0x0110	0x801B      	BSF         _INC3, BitPos(_INC3+0) 
;FIRMWARE_SYA_ver_0_9_5.c,168 :: 		INC = 3;
0x0112	0x0E03      	MOVLW       3
0x0114	0x6E1C      	MOVWF       _INC 
0x0116	0x0E00      	MOVLW       0
0x0118	0x6E1D      	MOVWF       _INC+1 
;FIRMWARE_SYA_ver_0_9_5.c,169 :: 		next_state = 1; // Cambia a siguiente estado 1
0x011A	0x0E01      	MOVLW       1
0x011C	0x6E18      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,170 :: 		break;
0x011E	0xD01E      	BRA         L_main22
;FIRMWARE_SYA_ver_0_9_5.c,171 :: 		case 3:
L_main25:
;FIRMWARE_SYA_ver_0_9_5.c,172 :: 		INC1 = 1; // El siguiente estado en INC es 1
0x0120	0x8817      	BSF         _INC1, BitPos(_INC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,173 :: 		INC2 = 0;
0x0122	0x921B      	BCF         _INC2, BitPos(_INC2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,174 :: 		INC3 = 0;
0x0124	0x901B      	BCF         _INC3, BitPos(_INC3+0) 
;FIRMWARE_SYA_ver_0_9_5.c,175 :: 		INC = 1;
0x0126	0x0E01      	MOVLW       1
0x0128	0x6E1C      	MOVWF       _INC 
0x012A	0x0E00      	MOVLW       0
0x012C	0x6E1D      	MOVWF       _INC+1 
;FIRMWARE_SYA_ver_0_9_5.c,176 :: 		next_state = 1; // Cambia a siguiente estado 1
0x012E	0x0E01      	MOVLW       1
0x0130	0x6E18      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,177 :: 		break;
0x0132	0xD014      	BRA         L_main22
;FIRMWARE_SYA_ver_0_9_5.c,178 :: 		default:
L_main26:
;FIRMWARE_SYA_ver_0_9_5.c,179 :: 		INC1 = 1; // Por default el estado en INC sera uno
0x0134	0x8817      	BSF         _INC1, BitPos(_INC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,180 :: 		INC2 = 0;
0x0136	0x921B      	BCF         _INC2, BitPos(_INC2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,181 :: 		INC3 = 0;
0x0138	0x901B      	BCF         _INC3, BitPos(_INC3+0) 
;FIRMWARE_SYA_ver_0_9_5.c,182 :: 		INC = 1;
0x013A	0x0E01      	MOVLW       1
0x013C	0x6E1C      	MOVWF       _INC 
0x013E	0x0E00      	MOVLW       0
0x0140	0x6E1D      	MOVWF       _INC+1 
;FIRMWARE_SYA_ver_0_9_5.c,183 :: 		next_state = 1;
0x0142	0x0E01      	MOVLW       1
0x0144	0x6E18      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,184 :: 		break;
0x0146	0xD00A      	BRA         L_main22
;FIRMWARE_SYA_ver_0_9_5.c,185 :: 		}
L_main21:
0x0148	0x5019      	MOVF        _last_INC, 0 
0x014A	0x0A01      	XORLW       1
0x014C	0xE0D5      	BZ          L_main23
0x014E	0x5019      	MOVF        _last_INC, 0 
0x0150	0x0A02      	XORLW       2
0x0152	0xE0DC      	BZ          L_main24
0x0154	0x5019      	MOVF        _last_INC, 0 
0x0156	0x0A03      	XORLW       3
0x0158	0xE0E3      	BZ          L_main25
0x015A	0xD7EC      	BRA         L_main26
L_main22:
;FIRMWARE_SYA_ver_0_9_5.c,186 :: 		}
L_main20:
;FIRMWARE_SYA_ver_0_9_5.c,187 :: 		break;
0x015C	0xD051      	BRA         L_main18
;FIRMWARE_SYA_ver_0_9_5.c,189 :: 		case 1:
L_main27:
;FIRMWARE_SYA_ver_0_9_5.c,190 :: 		AND_signal = 1; // Se単al de confirmacion
0x015E	0x8C17      	BSF         _AND_signal, BitPos(_AND_signal+0) 
;FIRMWARE_SYA_ver_0_9_5.c,191 :: 		switch(INC){
0x0160	0xD02A      	BRA         L_main28
;FIRMWARE_SYA_ver_0_9_5.c,193 :: 		case 1:
L_main30:
;FIRMWARE_SYA_ver_0_9_5.c,195 :: 		if(INC1){
0x0162	0xA817      	BTFSS       _INC1, BitPos(_INC1+0) 
0x0164	0xD00B      	BRA         L_main31
;FIRMWARE_SYA_ver_0_9_5.c,196 :: 		M1 = 1;
0x0166	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_5.c,197 :: 		M2 = 1; // Grupo de trabajo 1 (Bombas 1 y 2)
0x0168	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_5.c,198 :: 		M3 = 0;
0x016A	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_5.c,199 :: 		last_INC = 1; // Seteamos que el ultimo valor de INC es 1
0x016C	0x0E01      	MOVLW       1
0x016E	0x6E19      	MOVWF       _last_INC 
;FIRMWARE_SYA_ver_0_9_5.c,201 :: 		if(sn_NegEdge_1){
0x0170	0xAE17      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0172	0xD003      	BRA         L_main32
;FIRMWARE_SYA_ver_0_9_5.c,202 :: 		next_state = 0; // Regresa a estado 0
0x0174	0x6A18      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,203 :: 		INC1 = 0; // Baja la se単al de redundancia
0x0176	0x9817      	BCF         _INC1, BitPos(_INC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,204 :: 		}
0x0178	0xD001      	BRA         L_main33
L_main32:
;FIRMWARE_SYA_ver_0_9_5.c,206 :: 		INC1 = 1; // Manten la se単al de redundancia
0x017A	0x8817      	BSF         _INC1, BitPos(_INC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,207 :: 		}
L_main33:
;FIRMWARE_SYA_ver_0_9_5.c,208 :: 		}
L_main31:
;FIRMWARE_SYA_ver_0_9_5.c,209 :: 		break;
0x017C	0xD02E      	BRA         L_main29
;FIRMWARE_SYA_ver_0_9_5.c,211 :: 		case 2:
L_main34:
;FIRMWARE_SYA_ver_0_9_5.c,213 :: 		if(INC2){
0x017E	0xA21B      	BTFSS       _INC2, BitPos(_INC2+0) 
0x0180	0xD00B      	BRA         L_main35
;FIRMWARE_SYA_ver_0_9_5.c,214 :: 		M1 = 0;
0x0182	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_5.c,215 :: 		M2 = 1; // Grupo de trabajo 2 (Bombas 2 y 3)
0x0184	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_5.c,216 :: 		M3 = 1;
0x0186	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_5.c,217 :: 		last_INC = 2; // Seteamos que el ultimo valor de INC es 2
0x0188	0x0E02      	MOVLW       2
0x018A	0x6E19      	MOVWF       _last_INC 
;FIRMWARE_SYA_ver_0_9_5.c,219 :: 		if(sn_NegEdge_1){
0x018C	0xAE17      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x018E	0xD003      	BRA         L_main36
;FIRMWARE_SYA_ver_0_9_5.c,220 :: 		next_state = 0; // Regresa a estado 0
0x0190	0x6A18      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,221 :: 		INC2 = 0; // Baja la se単al de redundancia
0x0192	0x921B      	BCF         _INC2, BitPos(_INC2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,222 :: 		}
0x0194	0xD001      	BRA         L_main37
L_main36:
;FIRMWARE_SYA_ver_0_9_5.c,224 :: 		INC2 = 1; // Manten la se単al de redundancia
0x0196	0x821B      	BSF         _INC2, BitPos(_INC2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,225 :: 		}
L_main37:
;FIRMWARE_SYA_ver_0_9_5.c,226 :: 		}
L_main35:
;FIRMWARE_SYA_ver_0_9_5.c,227 :: 		break;
0x0198	0xD020      	BRA         L_main29
;FIRMWARE_SYA_ver_0_9_5.c,229 :: 		case 3:
L_main38:
;FIRMWARE_SYA_ver_0_9_5.c,231 :: 		if(INC3){
0x019A	0xA01B      	BTFSS       _INC3, BitPos(_INC3+0) 
0x019C	0xD00B      	BRA         L_main39
;FIRMWARE_SYA_ver_0_9_5.c,232 :: 		M1 = 1;
0x019E	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_5.c,233 :: 		M2 = 0; // Grupo de trabajo 3 (Bombas 1 y 3)
0x01A0	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_5.c,234 :: 		M3 = 1;
0x01A2	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_5.c,235 :: 		last_INC = 3; // Seteamos que el ultimo valor de INC es 3
0x01A4	0x0E03      	MOVLW       3
0x01A6	0x6E19      	MOVWF       _last_INC 
;FIRMWARE_SYA_ver_0_9_5.c,237 :: 		if(sn_NegEdge_1){
0x01A8	0xAE17      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x01AA	0xD003      	BRA         L_main40
;FIRMWARE_SYA_ver_0_9_5.c,238 :: 		next_state = 0; // Regresa a estado 0
0x01AC	0x6A18      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,239 :: 		INC3 = 0; // Baja la se単al de redundancia
0x01AE	0x901B      	BCF         _INC3, BitPos(_INC3+0) 
;FIRMWARE_SYA_ver_0_9_5.c,240 :: 		}
0x01B0	0xD001      	BRA         L_main41
L_main40:
;FIRMWARE_SYA_ver_0_9_5.c,242 :: 		INC3 = 1; // Manten la se単al de redundancia
0x01B2	0x801B      	BSF         _INC3, BitPos(_INC3+0) 
;FIRMWARE_SYA_ver_0_9_5.c,243 :: 		}
L_main41:
;FIRMWARE_SYA_ver_0_9_5.c,244 :: 		}
L_main39:
;FIRMWARE_SYA_ver_0_9_5.c,245 :: 		break;
0x01B4	0xD012      	BRA         L_main29
;FIRMWARE_SYA_ver_0_9_5.c,246 :: 		}
L_main28:
0x01B6	0x0E00      	MOVLW       0
0x01B8	0x181D      	XORWF       _INC+1, 0 
0x01BA	0xE102      	BNZ         L__main49
0x01BC	0x0E01      	MOVLW       1
0x01BE	0x181C      	XORWF       _INC, 0 
L__main49:
0x01C0	0xE0D0      	BZ          L_main30
0x01C2	0x0E00      	MOVLW       0
0x01C4	0x181D      	XORWF       _INC+1, 0 
0x01C6	0xE102      	BNZ         L__main50
0x01C8	0x0E02      	MOVLW       2
0x01CA	0x181C      	XORWF       _INC, 0 
L__main50:
0x01CC	0xE0D8      	BZ          L_main34
0x01CE	0x0E00      	MOVLW       0
0x01D0	0x181D      	XORWF       _INC+1, 0 
0x01D2	0xE102      	BNZ         L__main51
0x01D4	0x0E03      	MOVLW       3
0x01D6	0x181C      	XORWF       _INC, 0 
L__main51:
0x01D8	0xE0E0      	BZ          L_main38
L_main29:
;FIRMWARE_SYA_ver_0_9_5.c,247 :: 		break;
0x01DA	0xD012      	BRA         L_main18
;FIRMWARE_SYA_ver_0_9_5.c,248 :: 		default:
L_main42:
;FIRMWARE_SYA_ver_0_9_5.c,249 :: 		next_state = 0;
0x01DC	0x6A18      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_5.c,250 :: 		fsm_state = 0;
0x01DE	0x6A1A      	CLRF        _fsm_state 
;FIRMWARE_SYA_ver_0_9_5.c,251 :: 		INC1 = 0;
0x01E0	0x9817      	BCF         _INC1, BitPos(_INC1+0) 
;FIRMWARE_SYA_ver_0_9_5.c,252 :: 		INC2 = 0; // Por default dejamos todo en 0 y el ultimo estado de INC en 2
0x01E2	0x921B      	BCF         _INC2, BitPos(_INC2+0) 
;FIRMWARE_SYA_ver_0_9_5.c,253 :: 		INC3 = 0;
0x01E4	0x901B      	BCF         _INC3, BitPos(_INC3+0) 
;FIRMWARE_SYA_ver_0_9_5.c,254 :: 		INC = 0;
0x01E6	0x6A1C      	CLRF        _INC 
0x01E8	0x6A1D      	CLRF        _INC+1 
;FIRMWARE_SYA_ver_0_9_5.c,255 :: 		last_INC = 2;
0x01EA	0x0E02      	MOVLW       2
0x01EC	0x6E19      	MOVWF       _last_INC 
;FIRMWARE_SYA_ver_0_9_5.c,256 :: 		break;
0x01EE	0xD008      	BRA         L_main18
;FIRMWARE_SYA_ver_0_9_5.c,257 :: 		}
L_main17:
0x01F0	0x501A      	MOVF        _fsm_state, 0 
0x01F2	0x0A00      	XORLW       0
0x01F4	0xB4D8      	BTFSC       STATUS, 2 
0x01F6	0xD77C      	BRA         L_main19
0x01F8	0x501A      	MOVF        _fsm_state, 0 
0x01FA	0x0A01      	XORLW       1
0x01FC	0xE0B0      	BZ          L_main27
0x01FE	0xD7EE      	BRA         L_main42
L_main18:
;FIRMWARE_SYA_ver_0_9_5.c,258 :: 		}
0x0200	0xD773      	BRA         L_main15
;FIRMWARE_SYA_ver_0_9_5.c,260 :: 		}
L_end_main:
0x0202	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [56]    _interrupt
0x0040      [52]    _InitMCU
0x0074      [46]    _Events
0x00A2      [44]    _InitInterrupt
0x00CE      [18]    ___CC2DW
0x00E0     [292]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0004       [2]    frexp_pom_L0
0x0004       [1]    R4
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _counter
0x0017       [0]    _interruptC0
0x0017       [0]    _sn_NegEdge_1
0x0017       [0]    _sn_NegEdge_2
0x0017       [0]    _sn_PosEdge_2
0x0017       [0]    _interruptC1
0x0017       [0]    _INC1
0x0017       [0]    _AND_signal
0x0017       [0]    _sn_PosEdge_1
0x0018       [1]    _next_state
0x0019       [1]    _last_INC
0x001A       [1]    _fsm_state
0x001B       [0]    _INC2
0x001B       [0]    _INC3
0x001C       [2]    _INC
0x0EC2       [0]    IOCIE_bit
0x0EC2       [1]    PIE0
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F1D       [1]    INLVLC
0x0F20       [1]    WPUC
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
