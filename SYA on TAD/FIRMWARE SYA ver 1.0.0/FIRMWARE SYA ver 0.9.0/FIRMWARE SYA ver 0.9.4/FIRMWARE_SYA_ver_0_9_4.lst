;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/19/2024 4:10:52 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF49  	GOTO        658
_interrupt:
;FIRMWARE_SYA_ver_0_9_4.c,70 :: 		void interrupt(){
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;FIRMWARE_SYA_ver_0_9_4.c,72 :: 		if(PIR0.TMR0IF){
0x0010	0x010E      	MOVLB       14
0x0012	0xABCA      	BTFSS       PIR0, 5, 1
0x0014	0xD01C      	BRA         L_interrupt0
;FIRMWARE_SYA_ver_0_9_4.c,73 :: 		TMR0H = 0xB1;      // Timer para cada segundo y medio?
0x0016	0x0EB1      	MOVLW       177
0x0018	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_0_9_4.c,74 :: 		TMR0L = 0xE0;      //
0x001A	0x0EE0      	MOVLW       224
0x001C	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_0_9_4.c,75 :: 		PIR0.TMR0IF = 0;
0x001E	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_0_9_4.c,76 :: 		counter++;
0x0020	0x0E01      	MOVLW       1
0x0022	0x2417      	ADDWF       _counter, 0 
0x0024	0x6E00      	MOVWF       R0 
0x0026	0x0E00      	MOVLW       0
0x0028	0x2018      	ADDWFC      _counter+1, 0 
0x002A	0x6E01      	MOVWF       R1 
0x002C	0xF017C000  	MOVFF       R0, _counter
0x0030	0xF018C001  	MOVFF       R1, _counter+1
;FIRMWARE_SYA_ver_0_9_4.c,77 :: 		if(counter >= 100){
0x0034	0x0E80      	MOVLW       128
0x0036	0x1818      	XORWF       _counter+1, 0 
0x0038	0x6E00      	MOVWF       R0 
0x003A	0x0E80      	MOVLW       128
0x003C	0x5C00      	SUBWF       R0, 0 
0x003E	0xE102      	BNZ         L__interrupt114
0x0040	0x0E64      	MOVLW       100
0x0042	0x5C17      	SUBWF       _counter, 0 
L__interrupt114:
0x0044	0xE304      	BNC         L_interrupt1
;FIRMWARE_SYA_ver_0_9_4.c,78 :: 		clock0 = 1;
0x0046	0x8219      	BSF         _clock0, BitPos(_clock0+0) 
;FIRMWARE_SYA_ver_0_9_4.c,79 :: 		LED = 0;
0x0048	0x9883      	BCF         LATA, 4 
;FIRMWARE_SYA_ver_0_9_4.c,80 :: 		counter = 0;
0x004A	0x6A17      	CLRF        _counter 
0x004C	0x6A18      	CLRF        _counter+1 
;FIRMWARE_SYA_ver_0_9_4.c,81 :: 		}
L_interrupt1:
;FIRMWARE_SYA_ver_0_9_4.c,82 :: 		}
L_interrupt0:
;FIRMWARE_SYA_ver_0_9_4.c,84 :: 		if((IOCCF.B0 == 1) && (IOCIE_bit == 1)){
0x004E	0x010F      	MOVLB       15
0x0050	0xA11A      	BTFSS       IOCCF, 0, 1
0x0052	0xD006      	BRA         L_interrupt4
0x0054	0x010E      	MOVLB       14
0x0056	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0058	0xD003      	BRA         L_interrupt4
L__interrupt95:
;FIRMWARE_SYA_ver_0_9_4.c,85 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x005A	0x010F      	MOVLB       15
0x005C	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_0_9_4.c,86 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x005E	0x8A19      	BSF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_9_4.c,87 :: 		}
L_interrupt4:
0x0060	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_0_9_4.c,89 :: 		if((IOCCF.B1 == 1) && (IOCIE_bit == 1)){
0x0062	0xA31A      	BTFSS       IOCCF, 1, 1
0x0064	0xD006      	BRA         L_interrupt7
0x0066	0x010E      	MOVLB       14
0x0068	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x006A	0xD003      	BRA         L_interrupt7
L__interrupt94:
;FIRMWARE_SYA_ver_0_9_4.c,90 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x006C	0x010F      	MOVLB       15
0x006E	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_0_9_4.c,91 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0070	0x801C      	BSF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,92 :: 		}
L_interrupt7:
;FIRMWARE_SYA_ver_0_9_4.c,94 :: 		}
L_end_interrupt:
L__interrupt113:
0x0072	0xF000C016  	MOVFF       22, R0
0x0076	0xF001C015  	MOVFF       21, R1
0x007A	0x0011      	RETFIE      1
; end of _interrupt
_InitMCU:
;FIRMWARE_SYA_ver_0_9_4.c,355 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_0_9_4.c,357 :: 		ADCON1 = 0x0F; // Desactivamos ADC
0x007C	0x0E0F      	MOVLW       15
0x007E	0x010F      	MOVLB       15
0x0080	0x6F59      	MOVWF       ADCON1, 1
;FIRMWARE_SYA_ver_0_9_4.c,358 :: 		ANSELC = 0;    // Ponemos en modo digital al puerto C
0x0082	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_0_9_4.c,359 :: 		ANSELE = 0;    //                ''                 E
0x0084	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_0_9_4.c,360 :: 		ANSELA = 0;    //                ''                 A
0x0086	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_0_9_4.c,362 :: 		TRISC = 0x03;  // Ponemos en modo de entrada a C0 y C1, los demas como salida
0x0088	0x0E03      	MOVLW       3
0x008A	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_0_9_4.c,363 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x008C	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_0_9_4.c,364 :: 		TRISA = 0x80;  //                ''                A
0x008E	0x0E80      	MOVLW       128
0x0090	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_0_9_4.c,366 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x0092	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_0_9_4.c,367 :: 		PORTE = 0x00;  //                ''             E
0x0094	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_0_9_4.c,368 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x0096	0x0E10      	MOVLW       16
0x0098	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_0_9_4.c,370 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x009A	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_0_9_4.c,371 :: 		LATE = 0x00;   //                ''                      E
0x009C	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_0_9_4.c,372 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x009E	0x0E10      	MOVLW       16
0x00A0	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_0_9_4.c,374 :: 		WPUC = 0x03;   // Activamos el pull-up interno de C0 y C1
0x00A2	0x0E03      	MOVLW       3
0x00A4	0x6F20      	MOVWF       WPUC, 1
;FIRMWARE_SYA_ver_0_9_4.c,375 :: 		INLVLC = 0x03; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x00A6	0x0E03      	MOVLW       3
0x00A8	0x6F1D      	MOVWF       INLVLC, 1
;FIRMWARE_SYA_ver_0_9_4.c,376 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x00AA	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_0_9_4.c,377 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x00AC	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_0_9_4.c,379 :: 		}
L_end_InitMCU:
0x00AE	0x0012      	RETURN      0
; end of _InitMCU
_Events:
;FIRMWARE_SYA_ver_0_9_4.c,290 :: 		void Events(){
;FIRMWARE_SYA_ver_0_9_4.c,292 :: 		if(interruptC0){
0x00B0	0xAA19      	BTFSS       _interruptC0, BitPos(_interruptC0+0) 
0x00B2	0xD009      	BRA         L_Events86
;FIRMWARE_SYA_ver_0_9_4.c,294 :: 		if(SWITCH1 == 1){
0x00B4	0xA08F      	BTFSS       PORTC, 0 
0x00B6	0xD003      	BRA         L_Events87
;FIRMWARE_SYA_ver_0_9_4.c,296 :: 		sn_PosEdge_1 = 0;
0x00B8	0x9819      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,297 :: 		sn_NegEdge_1 = 1;
0x00BA	0x8C19      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,298 :: 		}
0x00BC	0xD002      	BRA         L_Events88
L_Events87:
;FIRMWARE_SYA_ver_0_9_4.c,302 :: 		sn_PosEdge_1 = 1;
0x00BE	0x8819      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,303 :: 		sn_NegEdge_1 = 0;
0x00C0	0x9C19      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,304 :: 		}
L_Events88:
;FIRMWARE_SYA_ver_0_9_4.c,305 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x00C2	0x9A19      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_9_4.c,306 :: 		}
0x00C4	0xD00D      	BRA         L_Events89
L_Events86:
;FIRMWARE_SYA_ver_0_9_4.c,308 :: 		else if(interruptC1){
0x00C6	0xA01C      	BTFSS       _interruptC1, BitPos(_interruptC1+0) 
0x00C8	0xD009      	BRA         L_Events90
;FIRMWARE_SYA_ver_0_9_4.c,310 :: 		if(SWITCH2 == 1){
0x00CA	0xA28F      	BTFSS       PORTC, 1 
0x00CC	0xD003      	BRA         L_Events91
;FIRMWARE_SYA_ver_0_9_4.c,312 :: 		sn_PosEdge_2 = 0;
0x00CE	0x9E19      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,313 :: 		sn_NegEdge_2 = 1;
0x00D0	0x8619      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,314 :: 		}
0x00D2	0xD002      	BRA         L_Events92
L_Events91:
;FIRMWARE_SYA_ver_0_9_4.c,318 :: 		sn_PosEdge_2 = 1;
0x00D4	0x8E19      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,319 :: 		sn_NegEdge_2 = 0;
0x00D6	0x9619      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,320 :: 		}
L_Events92:
;FIRMWARE_SYA_ver_0_9_4.c,321 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x00D8	0x901C      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,322 :: 		}
0x00DA	0xD002      	BRA         L_Events93
L_Events90:
;FIRMWARE_SYA_ver_0_9_4.c,324 :: 		interruptC0 = 0;
0x00DC	0x9A19      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_0_9_4.c,325 :: 		interruptC1 = 0;
0x00DE	0x901C      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,326 :: 		}
L_Events93:
L_Events89:
;FIRMWARE_SYA_ver_0_9_4.c,327 :: 		return;
;FIRMWARE_SYA_ver_0_9_4.c,329 :: 		}
L_end_Events:
0x00E0	0x0012      	RETURN      0
; end of _Events
_FSM:
;FIRMWARE_SYA_ver_0_9_4.c,120 :: 		void FSM(){
;FIRMWARE_SYA_ver_0_9_4.c,122 :: 		switch(current_state){
0x00E2	0xD09D      	BRA         L_FSM15
;FIRMWARE_SYA_ver_0_9_4.c,123 :: 		case 0: // S0 - Todo apagado
L_FSM17:
;FIRMWARE_SYA_ver_0_9_4.c,124 :: 		M1 = 0;
0x00E4	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_4.c,125 :: 		M2 = 0;
0x00E6	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_4.c,126 :: 		M3 = 0;
0x00E8	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_4.c,127 :: 		sn_GoTo = 0;
0x00EA	0x9019      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_9_4.c,129 :: 		if((sn_PosEdge_1 == 1) && (clock0 == 1)){
0x00EC	0xA819      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x00EE	0xD005      	BRA         L_FSM20
0x00F0	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x00F2	0xD003      	BRA         L_FSM20
L__FSM111:
;FIRMWARE_SYA_ver_0_9_4.c,130 :: 		next_state = 6; // Si, pasamos a estado 6
0x00F4	0x0E06      	MOVLW       6
0x00F6	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,131 :: 		}
0x00F8	0xD000      	BRA         L_FSM21
L_FSM20:
;FIRMWARE_SYA_ver_0_9_4.c,134 :: 		}
L_FSM21:
;FIRMWARE_SYA_ver_0_9_4.c,135 :: 		break;
0x00FA	0xD0AA      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,136 :: 		case 1: // S1 - Grupo de trabajo 1 110
L_FSM22:
;FIRMWARE_SYA_ver_0_9_4.c,137 :: 		M1 = 1;
0x00FC	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_4.c,138 :: 		M2 = 1;
0x00FE	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_4.c,139 :: 		M3 = 0;
0x0100	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_4.c,140 :: 		GT1 = 1;
0x0102	0x8419      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,141 :: 		GT2 = 0; // Si comentarizo esto se rompe el codigo
0x0104	0x921C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,142 :: 		GT3 = 0; // (why tho???)
0x0106	0x941C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_9_4.c,144 :: 		if((sn_NegEdge_1) && (clock0 == 1)){
0x0108	0xAC19      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x010A	0xD004      	BRA         L_FSM25
0x010C	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x010E	0xD002      	BRA         L_FSM25
L__FSM110:
;FIRMWARE_SYA_ver_0_9_4.c,146 :: 		next_state = 0;
0x0110	0x6A1B      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,148 :: 		}
0x0112	0xD007      	BRA         L_FSM26
L_FSM25:
;FIRMWARE_SYA_ver_0_9_4.c,150 :: 		else if((sn_PosEdge_2) && (clock0 == 1)){
0x0114	0xAE19      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0116	0xD005      	BRA         L_FSM29
0x0118	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x011A	0xD003      	BRA         L_FSM29
L__FSM109:
;FIRMWARE_SYA_ver_0_9_4.c,152 :: 		next_state = 4;
0x011C	0x0E04      	MOVLW       4
0x011E	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,153 :: 		}
0x0120	0xD000      	BRA         L_FSM30
L_FSM29:
;FIRMWARE_SYA_ver_0_9_4.c,158 :: 		}
L_FSM30:
L_FSM26:
;FIRMWARE_SYA_ver_0_9_4.c,159 :: 		break;
0x0122	0xD096      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,160 :: 		case 2: // S2 - Grupo de trabajo 2 011
L_FSM31:
;FIRMWARE_SYA_ver_0_9_4.c,161 :: 		M1 = 0;
0x0124	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_4.c,162 :: 		M2 = 1;
0x0126	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_4.c,163 :: 		M3 = 1;
0x0128	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_4.c,164 :: 		GT1 = 0; // Trouble
0x012A	0x9419      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,165 :: 		GT2 = 1;
0x012C	0x821C      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,166 :: 		GT3 = 0; // Here comes trouble
0x012E	0x941C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_9_4.c,168 :: 		if((sn_NegEdge_1) && (clock0 == 1)){
0x0130	0xAC19      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0132	0xD004      	BRA         L_FSM34
0x0134	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0136	0xD002      	BRA         L_FSM34
L__FSM108:
;FIRMWARE_SYA_ver_0_9_4.c,170 :: 		next_state = 0;
0x0138	0x6A1B      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,171 :: 		}
0x013A	0xD007      	BRA         L_FSM35
L_FSM34:
;FIRMWARE_SYA_ver_0_9_4.c,173 :: 		else if((sn_PosEdge_2) && (clock0 == 1)){
0x013C	0xAE19      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x013E	0xD005      	BRA         L_FSM38
0x0140	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0142	0xD003      	BRA         L_FSM38
L__FSM107:
;FIRMWARE_SYA_ver_0_9_4.c,175 :: 		next_state = 4;
0x0144	0x0E04      	MOVLW       4
0x0146	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,176 :: 		}
0x0148	0xD000      	BRA         L_FSM39
L_FSM38:
;FIRMWARE_SYA_ver_0_9_4.c,181 :: 		}
L_FSM39:
L_FSM35:
;FIRMWARE_SYA_ver_0_9_4.c,182 :: 		break;
0x014A	0xD082      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,183 :: 		case 3: // S3 - Grupo de trabajo 3 101
L_FSM40:
;FIRMWARE_SYA_ver_0_9_4.c,184 :: 		M1 = 1;
0x014C	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_4.c,185 :: 		M2 = 0;
0x014E	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_4.c,186 :: 		M3 = 1;
0x0150	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_4.c,187 :: 		GT1 = 0; // Way way more
0x0152	0x9419      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,188 :: 		GT2 = 0; // trouble
0x0154	0x921C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,189 :: 		GT3 = 1;
0x0156	0x841C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_9_4.c,191 :: 		if((sn_NegEdge_1) && (clock0 == 1)){
0x0158	0xAC19      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x015A	0xD004      	BRA         L_FSM43
0x015C	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x015E	0xD002      	BRA         L_FSM43
L__FSM106:
;FIRMWARE_SYA_ver_0_9_4.c,193 :: 		next_state = 0;
0x0160	0x6A1B      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,194 :: 		}
0x0162	0xD007      	BRA         L_FSM44
L_FSM43:
;FIRMWARE_SYA_ver_0_9_4.c,196 :: 		else if((sn_PosEdge_2) && (clock0 == 1)){
0x0164	0xAE19      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0166	0xD005      	BRA         L_FSM47
0x0168	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x016A	0xD003      	BRA         L_FSM47
L__FSM105:
;FIRMWARE_SYA_ver_0_9_4.c,198 :: 		next_state = 4;
0x016C	0x0E04      	MOVLW       4
0x016E	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,199 :: 		}
0x0170	0xD000      	BRA         L_FSM48
L_FSM47:
;FIRMWARE_SYA_ver_0_9_4.c,204 :: 		}
L_FSM48:
L_FSM44:
;FIRMWARE_SYA_ver_0_9_4.c,205 :: 		break;
0x0172	0xD06E      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,206 :: 		case 4: // S4 - Grupo de trabajo 4 111
L_FSM49:
;FIRMWARE_SYA_ver_0_9_4.c,207 :: 		M1 = 1;
0x0174	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_4.c,208 :: 		M2 = 1;
0x0176	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_4.c,209 :: 		M3 = 1;
0x0178	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_4.c,211 :: 		if((sn_NegEdge_1) && (clock0 == 1)){
0x017A	0xAC19      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x017C	0xD004      	BRA         L_FSM52
0x017E	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0180	0xD002      	BRA         L_FSM52
L__FSM104:
;FIRMWARE_SYA_ver_0_9_4.c,212 :: 		next_state = 0;
0x0182	0x6A1B      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,213 :: 		}
0x0184	0xD008      	BRA         L_FSM53
L_FSM52:
;FIRMWARE_SYA_ver_0_9_4.c,214 :: 		else if((sn_NegEdge_2) && (clock0 == 1)){
0x0186	0xA619      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x0188	0xD006      	BRA         L_FSM56
0x018A	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x018C	0xD004      	BRA         L_FSM56
L__FSM103:
;FIRMWARE_SYA_ver_0_9_4.c,216 :: 		next_state = 5;
0x018E	0x0E05      	MOVLW       5
0x0190	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,217 :: 		sn_GoTo = 1; // Ponemos en 1 la señal de transicion
0x0192	0x8019      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_0_9_4.c,218 :: 		}
0x0194	0xD000      	BRA         L_FSM57
L_FSM56:
;FIRMWARE_SYA_ver_0_9_4.c,223 :: 		}
L_FSM57:
L_FSM53:
;FIRMWARE_SYA_ver_0_9_4.c,224 :: 		break;
0x0196	0xD05C      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,225 :: 		case 5: // S5 - Estado de transicion para flanco negativo 2
L_FSM58:
;FIRMWARE_SYA_ver_0_9_4.c,227 :: 		if((sn_GoTo == 1) && (GT1 == 1) && (clock0 == 1)){
0x0198	0xA019      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x019A	0xD007      	BRA         L_FSM61
0x019C	0xA419      	BTFSS       _GT1, BitPos(_GT1+0) 
0x019E	0xD005      	BRA         L_FSM61
0x01A0	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01A2	0xD003      	BRA         L_FSM61
L__FSM102:
;FIRMWARE_SYA_ver_0_9_4.c,228 :: 		next_state = 2;
0x01A4	0x0E02      	MOVLW       2
0x01A6	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,229 :: 		}
0x01A8	0xD012      	BRA         L_FSM62
L_FSM61:
;FIRMWARE_SYA_ver_0_9_4.c,230 :: 		else if((sn_GoTo == 1) && (GT2 == 1) && (clock0 == 1)){
0x01AA	0xA019      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x01AC	0xD007      	BRA         L_FSM65
0x01AE	0xA21C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x01B0	0xD005      	BRA         L_FSM65
0x01B2	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01B4	0xD003      	BRA         L_FSM65
L__FSM101:
;FIRMWARE_SYA_ver_0_9_4.c,231 :: 		next_state = 3;
0x01B6	0x0E03      	MOVLW       3
0x01B8	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,232 :: 		}
0x01BA	0xD009      	BRA         L_FSM66
L_FSM65:
;FIRMWARE_SYA_ver_0_9_4.c,233 :: 		else if((sn_GoTo == 1) && (GT3 == 1) && (clock0 == 1)){
0x01BC	0xA019      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x01BE	0xD007      	BRA         L_FSM69
0x01C0	0xA41C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x01C2	0xD005      	BRA         L_FSM69
0x01C4	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01C6	0xD003      	BRA         L_FSM69
L__FSM100:
;FIRMWARE_SYA_ver_0_9_4.c,234 :: 		next_state = 1;
0x01C8	0x0E01      	MOVLW       1
0x01CA	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,235 :: 		}
0x01CC	0xD000      	BRA         L_FSM70
L_FSM69:
;FIRMWARE_SYA_ver_0_9_4.c,240 :: 		}
L_FSM70:
L_FSM66:
L_FSM62:
;FIRMWARE_SYA_ver_0_9_4.c,241 :: 		break;
0x01CE	0xD040      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,242 :: 		case 6: // S6 - Estado de transicion para flanco positivo
L_FSM71:
;FIRMWARE_SYA_ver_0_9_4.c,243 :: 		if(sn_PosEdge_1){
0x01D0	0xA819      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x01D2	0xD01B      	BRA         L_FSM72
;FIRMWARE_SYA_ver_0_9_4.c,245 :: 		if((GT1) && (clock0 == 1)){
0x01D4	0xA419      	BTFSS       _GT1, BitPos(_GT1+0) 
0x01D6	0xD007      	BRA         L_FSM75
0x01D8	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01DA	0xD005      	BRA         L_FSM75
L__FSM99:
;FIRMWARE_SYA_ver_0_9_4.c,247 :: 		next_state = 2;
0x01DC	0x0E02      	MOVLW       2
0x01DE	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,248 :: 		GT2 = 0; // DO NOT
0x01E0	0x921C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,249 :: 		GT3 = 0; // DELETE !!!!
0x01E2	0x941C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_9_4.c,250 :: 		}
0x01E4	0xD012      	BRA         L_FSM76
L_FSM75:
;FIRMWARE_SYA_ver_0_9_4.c,252 :: 		else if((GT2) && (clock0 == 1)){
0x01E6	0xA21C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x01E8	0xD007      	BRA         L_FSM79
0x01EA	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01EC	0xD005      	BRA         L_FSM79
L__FSM98:
;FIRMWARE_SYA_ver_0_9_4.c,254 :: 		next_state = 3;
0x01EE	0x0E03      	MOVLW       3
0x01F0	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,255 :: 		GT1 = 0; // DO NOT
0x01F2	0x9419      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,256 :: 		GT3 = 0; // DELETE !!!!
0x01F4	0x941C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_9_4.c,257 :: 		}
0x01F6	0xD009      	BRA         L_FSM80
L_FSM79:
;FIRMWARE_SYA_ver_0_9_4.c,259 :: 		else if((GT3) && (clock0 == 1)){
0x01F8	0xA41C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x01FA	0xD007      	BRA         L_FSM83
0x01FC	0xA219      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01FE	0xD005      	BRA         L_FSM83
L__FSM97:
;FIRMWARE_SYA_ver_0_9_4.c,261 :: 		next_state = 1;
0x0200	0x0E01      	MOVLW       1
0x0202	0x6E1B      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,262 :: 		GT1 = 0; // DO NOT
0x0204	0x9419      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,263 :: 		GT2 = 0; // DELETE !!!!
0x0206	0x921C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,264 :: 		}
0x0208	0xD000      	BRA         L_FSM84
L_FSM83:
;FIRMWARE_SYA_ver_0_9_4.c,269 :: 		}
L_FSM84:
L_FSM80:
L_FSM76:
;FIRMWARE_SYA_ver_0_9_4.c,270 :: 		}
L_FSM72:
;FIRMWARE_SYA_ver_0_9_4.c,271 :: 		break;
0x020A	0xD022      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,272 :: 		default:
L_FSM85:
;FIRMWARE_SYA_ver_0_9_4.c,273 :: 		GT1 = 1;
0x020C	0x8419      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_0_9_4.c,274 :: 		GT2 = 0;
0x020E	0x921C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_0_9_4.c,275 :: 		GT3 = 0;
0x0210	0x941C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_0_9_4.c,276 :: 		M1 = 0;
0x0212	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_0_9_4.c,277 :: 		M2 = 0;
0x0214	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_0_9_4.c,278 :: 		M3 = 0;
0x0216	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_0_9_4.c,279 :: 		current_state = 0;
0x0218	0x6A1A      	CLRF        _current_state 
;FIRMWARE_SYA_ver_0_9_4.c,280 :: 		next_state = 0;
0x021A	0x6A1B      	CLRF        _next_state 
;FIRMWARE_SYA_ver_0_9_4.c,281 :: 		break;
0x021C	0xD019      	BRA         L_FSM16
;FIRMWARE_SYA_ver_0_9_4.c,282 :: 		}
L_FSM15:
0x021E	0x501A      	MOVF        _current_state, 0 
0x0220	0x0A00      	XORLW       0
0x0222	0xB4D8      	BTFSC       STATUS, 2 
0x0224	0xD75F      	BRA         L_FSM17
0x0226	0x501A      	MOVF        _current_state, 0 
0x0228	0x0A01      	XORLW       1
0x022A	0xB4D8      	BTFSC       STATUS, 2 
0x022C	0xD767      	BRA         L_FSM22
0x022E	0x501A      	MOVF        _current_state, 0 
0x0230	0x0A02      	XORLW       2
0x0232	0xB4D8      	BTFSC       STATUS, 2 
0x0234	0xD777      	BRA         L_FSM31
0x0236	0x501A      	MOVF        _current_state, 0 
0x0238	0x0A03      	XORLW       3
0x023A	0xE088      	BZ          L_FSM40
0x023C	0x501A      	MOVF        _current_state, 0 
0x023E	0x0A04      	XORLW       4
0x0240	0xE099      	BZ          L_FSM49
0x0242	0x501A      	MOVF        _current_state, 0 
0x0244	0x0A05      	XORLW       5
0x0246	0xE0A8      	BZ          L_FSM58
0x0248	0x501A      	MOVF        _current_state, 0 
0x024A	0x0A06      	XORLW       6
0x024C	0xE0C1      	BZ          L_FSM71
0x024E	0xD7DE      	BRA         L_FSM85
L_FSM16:
;FIRMWARE_SYA_ver_0_9_4.c,284 :: 		}
L_end_FSM:
0x0250	0x0012      	RETURN      0
; end of _FSM
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x0252	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x0254	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x0256	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x025A	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x025C	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x025E	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x0260	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x0262	0x0012      	RETURN      0
; end of ___CC2DW
_InitInterrupt:
;FIRMWARE_SYA_ver_0_9_4.c,335 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_0_9_4.c,337 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x0264	0x0E30      	MOVLW       48
0x0266	0x010E      	MOVLB       14
0x0268	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_0_9_4.c,338 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x026A	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_0_9_4.c,339 :: 		T0CON0 = 0x90;
0x026C	0x0E90      	MOVLW       144
0x026E	0x6ED5      	MOVWF       T0CON0 
;FIRMWARE_SYA_ver_0_9_4.c,340 :: 		T0CON1 = 0x40;
0x0270	0x0E40      	MOVLW       64
0x0272	0x6ED6      	MOVWF       T0CON1 
;FIRMWARE_SYA_ver_0_9_4.c,341 :: 		TMR0H = 0xB1;
0x0274	0x0EB1      	MOVLW       177
0x0276	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_0_9_4.c,342 :: 		TMR0L = 0xE0;
0x0278	0x0EE0      	MOVLW       224
0x027A	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_0_9_4.c,343 :: 		IOCCN = 0x03;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x027C	0x0E03      	MOVLW       3
0x027E	0x010F      	MOVLB       15
0x0280	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_0_9_4.c,344 :: 		IOCCP = 0x03;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x0282	0x0E03      	MOVLW       3
0x0284	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_0_9_4.c,345 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x0286	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_0_9_4.c,346 :: 		PIR0.TMR0IF = 0;
0x0288	0x010E      	MOVLB       14
0x028A	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_0_9_4.c,347 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x028C	0x0EC0      	MOVLW       192
0x028E	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_0_9_4.c,349 :: 		}
L_end_InitInterrupt:
0x0290	0x0012      	RETURN      0
; end of _InitInterrupt
_main:
0x0292	0x6A17      	CLRF        _counter 
0x0294	0x6A18      	CLRF        24 
;FIRMWARE_SYA_ver_0_9_4.c,100 :: 		void main(){
;FIRMWARE_SYA_ver_0_9_4.c,102 :: 		InitInterrupt(); // MCU interrupt config
0x0296	0xDFE6      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_0_9_4.c,103 :: 		InitMCU();       // MCU pin/reg config
0x0298	0xDEF1      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_0_9_4.c,105 :: 		do{
L_main8:
;FIRMWARE_SYA_ver_0_9_4.c,106 :: 		Events();
0x029A	0xDF0A      	RCALL       _Events
;FIRMWARE_SYA_ver_0_9_4.c,107 :: 		}while((interruptC0 == 1) || (interruptC1 == 1));
0x029C	0xBA19      	BTFSC       _interruptC0, BitPos(_interruptC0+0) 
0x029E	0xD7FD      	BRA         L_main8
0x02A0	0xB01C      	BTFSC       _interruptC1, BitPos(_interruptC1+0) 
0x02A2	0xD7FB      	BRA         L_main8
L__main96:
;FIRMWARE_SYA_ver_0_9_4.c,109 :: 		while(1){
L_main13:
;FIRMWARE_SYA_ver_0_9_4.c,110 :: 		current_state = next_state; // Maybe move this with Events
0x02A4	0xF01AC01B  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_0_9_4.c,111 :: 		FSM();
0x02A8	0xDF1C      	RCALL       _FSM
;FIRMWARE_SYA_ver_0_9_4.c,112 :: 		}
0x02AA	0xD7FC      	BRA         L_main13
;FIRMWARE_SYA_ver_0_9_4.c,114 :: 		}
L_end_main:
0x02AC	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [116]    _interrupt
0x007C      [52]    _InitMCU
0x00B0      [50]    _Events
0x00E2     [368]    _FSM
0x0252      [18]    ___CC2DW
0x0264      [46]    _InitInterrupt
0x0292      [28]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    R2
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0004       [2]    frexp_pom_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncat_cp_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0017       [2]    _counter
0x0019       [0]    _GT1
0x0019       [0]    _sn_PosEdge_2
0x0019       [0]    _sn_NegEdge_1
0x0019       [0]    _sn_NegEdge_2
0x0019       [0]    _interruptC0
0x0019       [0]    _sn_PosEdge_1
0x0019       [0]    _clock0
0x0019       [0]    _sn_GoTo
0x001A       [1]    _current_state
0x001B       [1]    _next_state
0x001C       [0]    _GT2
0x001C       [0]    _GT3
0x001C       [0]    _interruptC1
0x0EC2       [1]    PIE0
0x0EC2       [0]    IOCIE_bit
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F1D       [1]    INLVLC
0x0F20       [1]    WPUC
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
